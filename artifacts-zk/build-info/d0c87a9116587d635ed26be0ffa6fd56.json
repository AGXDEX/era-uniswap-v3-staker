{
  "id": "d0c87a9116587d635ed26be0ffa6fd56",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/IUniswapV3Staker.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol';\n\nimport '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol';\n\n/// @title Uniswap V3 Staker Interface\n/// @notice Allows staking nonfungible liquidity tokens in exchange for reward tokens\ninterface IUniswapV3Staker is IERC721Receiver, IMulticall {\n    /// @param rewardToken The token being distributed as a reward\n    /// @param pool The Uniswap V3 pool\n    /// @param startTime The time when the incentive program begins\n    /// @param endTime The time when rewards stop accruing\n    /// @param refundee The address which receives any remaining reward tokens when the incentive is ended\n    struct IncentiveKey {\n        IERC20Minimal rewardToken;\n        IUniswapV3Pool pool;\n        uint256 startTime;\n        uint256 endTime;\n        address refundee;\n    }\n\n    /// @notice The Uniswap V3 Factory\n    function factory() external view returns (IUniswapV3Factory);\n\n    /// @notice The nonfungible position manager with which this staking contract is compatible\n    function nonfungiblePositionManager() external view returns (INonfungiblePositionManager);\n\n    /// @notice The max duration of an incentive in seconds\n    function maxIncentiveDuration() external view returns (uint256);\n\n    /// @notice The max amount of seconds into the future the incentive startTime can be set\n    function maxIncentiveStartLeadTime() external view returns (uint256);\n\n    /// @notice Represents a staking incentive\n    /// @param incentiveId The ID of the incentive computed from its parameters\n    /// @return totalRewardUnclaimed The amount of reward token not yet claimed by users\n    /// @return totalSecondsClaimedX128 Total liquidity-seconds claimed, represented as a UQ32.128\n    /// @return numberOfStakes The count of deposits that are currently staked for the incentive\n    function incentives(bytes32 incentiveId)\n        external\n        view\n        returns (\n            uint256 totalRewardUnclaimed,\n            uint160 totalSecondsClaimedX128,\n            uint96 numberOfStakes\n        );\n\n    /// @notice Returns information about a deposited NFT\n    /// @return owner The owner of the deposited NFT\n    /// @return numberOfStakes Counter of how many incentives for which the liquidity is staked\n    /// @return tickLower The lower tick of the range\n    /// @return tickUpper The upper tick of the range\n    function deposits(uint256 tokenId)\n        external\n        view\n        returns (\n            address owner,\n            uint48 numberOfStakes,\n            int24 tickLower,\n            int24 tickUpper\n        );\n\n    /// @notice Returns information about a staked liquidity NFT\n    /// @param tokenId The ID of the staked token\n    /// @param incentiveId The ID of the incentive for which the token is staked\n    /// @return secondsPerLiquidityInsideInitialX128 secondsPerLiquidity represented as a UQ32.128\n    /// @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed\n    function stakes(uint256 tokenId, bytes32 incentiveId)\n        external\n        view\n        returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity);\n\n    /// @notice Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated\n    /// @param rewardToken The token for which to check rewards\n    /// @param owner The owner for which the rewards owed are checked\n    /// @return rewardsOwed The amount of the reward token claimable by the owner\n    function rewards(IERC20Minimal rewardToken, address owner) external view returns (uint256 rewardsOwed);\n\n    /// @notice Creates a new liquidity mining incentive program\n    /// @param key Details of the incentive to create\n    /// @param reward The amount of reward tokens to be distributed\n    function createIncentive(IncentiveKey memory key, uint256 reward) external;\n\n    /// @notice Ends an incentive after the incentive end time has passed and all stakes have been withdrawn\n    /// @param key Details of the incentive to end\n    /// @return refund The remaining reward tokens when the incentive is ended\n    function endIncentive(IncentiveKey memory key) external returns (uint256 refund);\n\n    /// @notice Transfers ownership of a deposit from the sender to the given recipient\n    /// @param tokenId The ID of the token (and the deposit) to transfer\n    /// @param to The new owner of the deposit\n    function transferDeposit(uint256 tokenId, address to) external;\n\n    /// @notice Withdraws a Uniswap V3 LP token `tokenId` from this contract to the recipient `to`\n    /// @param tokenId The unique identifier of an Uniswap V3 LP token\n    /// @param to The address where the LP token will be sent\n    /// @param data An optional data array that will be passed along to the `to` address via the NFT safeTransferFrom\n    function withdrawToken(\n        uint256 tokenId,\n        address to,\n        bytes memory data\n    ) external;\n\n    /// @notice Stakes a Uniswap V3 LP token\n    /// @param key The key of the incentive for which to stake the NFT\n    /// @param tokenId The ID of the token to stake\n    function stakeToken(IncentiveKey memory key, uint256 tokenId) external;\n\n    /// @notice Unstakes a Uniswap V3 LP token\n    /// @param key The key of the incentive for which to unstake the NFT\n    /// @param tokenId The ID of the token to unstake\n    function unstakeToken(IncentiveKey memory key, uint256 tokenId) external;\n\n    /// @notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\n    /// @param rewardToken The token being distributed as a reward\n    /// @param to The address where claimed rewards will be sent to\n    /// @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\n    /// @return reward The amount of reward tokens claimed\n    function claimReward(\n        IERC20Minimal rewardToken,\n        address to,\n        uint256 amountRequested\n    ) external returns (uint256 reward);\n\n    /// @notice Calculates the reward amount that will be received for the given stake\n    /// @param key The key of the incentive\n    /// @param tokenId The ID of the token\n    /// @return reward The reward accrued to the NFT for the given incentive thus far\n    function getRewardInfo(IncentiveKey memory key, uint256 tokenId)\n        external\n        returns (uint256 reward, uint160 secondsInsideX128);\n\n    /// @notice Event emitted when a liquidity mining incentive has been created\n    /// @param rewardToken The token being distributed as a reward\n    /// @param pool The Uniswap V3 pool\n    /// @param startTime The time when the incentive program begins\n    /// @param endTime The time when rewards stop accruing\n    /// @param refundee The address which receives any remaining reward tokens after the end time\n    /// @param reward The amount of reward tokens to be distributed\n    event IncentiveCreated(\n        IERC20Minimal indexed rewardToken,\n        IUniswapV3Pool indexed pool,\n        uint256 startTime,\n        uint256 endTime,\n        address refundee,\n        uint256 reward\n    );\n\n    /// @notice Event that can be emitted when a liquidity mining incentive has ended\n    /// @param incentiveId The incentive which is ending\n    /// @param refund The amount of reward tokens refunded\n    event IncentiveEnded(bytes32 indexed incentiveId, uint256 refund);\n\n    /// @notice Emitted when ownership of a deposit changes\n    /// @param tokenId The ID of the deposit (and token) that is being transferred\n    /// @param oldOwner The owner before the deposit was transferred\n    /// @param newOwner The owner after the deposit was transferred\n    event DepositTransferred(uint256 indexed tokenId, address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Event emitted when a Uniswap V3 LP token has been staked\n    /// @param tokenId The unique identifier of an Uniswap V3 LP token\n    /// @param liquidity The amount of liquidity staked\n    /// @param incentiveId The incentive in which the token is staking\n    event TokenStaked(uint256 indexed tokenId, bytes32 indexed incentiveId, uint128 liquidity);\n\n    /// @notice Event emitted when a Uniswap V3 LP token has been unstaked\n    /// @param tokenId The unique identifier of an Uniswap V3 LP token\n    /// @param incentiveId The incentive in which the token is staking\n    event TokenUnstaked(uint256 indexed tokenId, bytes32 indexed incentiveId);\n\n    /// @notice Event emitted when a reward token has been claimed\n    /// @param to The address where claimed rewards were sent to\n    /// @param reward The amount of reward tokens claimed\n    event RewardClaimed(address indexed to, uint256 reward);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Minimal ERC20 interface for Uniswap\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\ninterface IERC20Minimal {\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\nimport '../libraries/PoolAddress.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Multicall interface\n/// @notice Enables calling multiple methods in a single call to the contract\ninterface IMulticall {\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\n    /// @param data The encoded function data for each of the calls to make to this contract\n    /// @return results The results from each of the calls passed in via data\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
      },
      "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"
      },
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/UniswapV3Staker.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport './interfaces/IUniswapV3Staker.sol';\nimport './libraries/IncentiveId.sol';\nimport './libraries/RewardMath.sol';\nimport './libraries/NFTPositionInfo.sol';\nimport './libraries/TransferHelperExtended.sol';\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol';\n\nimport '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport '@uniswap/v3-periphery/contracts/base/Multicall.sol';\n\n/// @title Uniswap V3 canonical staking interface\ncontract UniswapV3Staker is IUniswapV3Staker, Multicall {\n    /// @notice Represents a staking incentive\n    struct Incentive {\n        uint256 totalRewardUnclaimed;\n        uint160 totalSecondsClaimedX128;\n        uint96 numberOfStakes;\n    }\n\n    /// @notice Represents the deposit of a liquidity NFT\n    struct Deposit {\n        address owner;\n        uint48 numberOfStakes;\n        int24 tickLower;\n        int24 tickUpper;\n    }\n\n    /// @notice Represents a staked liquidity NFT\n    struct Stake {\n        uint160 secondsPerLiquidityInsideInitialX128;\n        uint96 liquidityNoOverflow;\n        uint128 liquidityIfOverflow;\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    IUniswapV3Factory public immutable override factory;\n    /// @inheritdoc IUniswapV3Staker\n    INonfungiblePositionManager public immutable override nonfungiblePositionManager;\n\n    /// @inheritdoc IUniswapV3Staker\n    uint256 public immutable override maxIncentiveStartLeadTime;\n    /// @inheritdoc IUniswapV3Staker\n    uint256 public immutable override maxIncentiveDuration;\n\n    /// @dev bytes32 refers to the return value of IncentiveId.compute\n    mapping(bytes32 => Incentive) public override incentives;\n\n    /// @dev deposits[tokenId] => Deposit\n    mapping(uint256 => Deposit) public override deposits;\n\n    /// @dev stakes[tokenId][incentiveHash] => Stake\n    mapping(uint256 => mapping(bytes32 => Stake)) private _stakes;\n\n    /// @inheritdoc IUniswapV3Staker\n    function stakes(uint256 tokenId, bytes32 incentiveId)\n        public\n        view\n        override\n        returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)\n    {\n        Stake storage stake = _stakes[tokenId][incentiveId];\n        secondsPerLiquidityInsideInitialX128 = stake.secondsPerLiquidityInsideInitialX128;\n        liquidity = stake.liquidityNoOverflow;\n        if (liquidity == type(uint96).max) {\n            liquidity = stake.liquidityIfOverflow;\n        }\n    }\n\n    /// @dev rewards[rewardToken][owner] => uint256\n    /// @inheritdoc IUniswapV3Staker\n    mapping(IERC20Minimal => mapping(address => uint256)) public override rewards;\n\n    /// @param _factory the Uniswap V3 factory\n    /// @param _nonfungiblePositionManager the NFT position manager contract address\n    /// @param _maxIncentiveStartLeadTime the max duration of an incentive in seconds\n    /// @param _maxIncentiveDuration the max amount of seconds into the future the incentive startTime can be set\n    constructor(\n        IUniswapV3Factory _factory,\n        INonfungiblePositionManager _nonfungiblePositionManager,\n        uint256 _maxIncentiveStartLeadTime,\n        uint256 _maxIncentiveDuration\n    ) {\n        factory = _factory;\n        nonfungiblePositionManager = _nonfungiblePositionManager;\n        maxIncentiveStartLeadTime = _maxIncentiveStartLeadTime;\n        maxIncentiveDuration = _maxIncentiveDuration;\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function createIncentive(IncentiveKey memory key, uint256 reward) external override {\n        require(reward > 0, 'UniswapV3Staker::createIncentive: reward must be positive');\n        require(\n            block.timestamp <= key.startTime,\n            'UniswapV3Staker::createIncentive: start time must be now or in the future'\n        );\n        require(\n            key.startTime - block.timestamp <= maxIncentiveStartLeadTime,\n            'UniswapV3Staker::createIncentive: start time too far into future'\n        );\n        require(key.startTime < key.endTime, 'UniswapV3Staker::createIncentive: start time must be before end time');\n        require(\n            key.endTime - key.startTime <= maxIncentiveDuration,\n            'UniswapV3Staker::createIncentive: incentive duration is too long'\n        );\n\n        bytes32 incentiveId = IncentiveId.compute(key);\n\n        incentives[incentiveId].totalRewardUnclaimed += reward;\n\n        TransferHelperExtended.safeTransferFrom(address(key.rewardToken), msg.sender, address(this), reward);\n\n        emit IncentiveCreated(key.rewardToken, key.pool, key.startTime, key.endTime, key.refundee, reward);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function endIncentive(IncentiveKey memory key) external override returns (uint256 refund) {\n        require(block.timestamp >= key.endTime, 'UniswapV3Staker::endIncentive: cannot end incentive before end time');\n\n        bytes32 incentiveId = IncentiveId.compute(key);\n        Incentive storage incentive = incentives[incentiveId];\n\n        refund = incentive.totalRewardUnclaimed;\n\n        require(refund > 0, 'UniswapV3Staker::endIncentive: no refund available');\n        require(\n            incentive.numberOfStakes == 0,\n            'UniswapV3Staker::endIncentive: cannot end incentive while deposits are staked'\n        );\n\n        // issue the refund\n        incentive.totalRewardUnclaimed = 0;\n        TransferHelperExtended.safeTransfer(address(key.rewardToken), key.refundee, refund);\n\n        // note we never clear totalSecondsClaimedX128\n\n        emit IncentiveEnded(incentiveId, refund);\n    }\n\n    /// @notice Upon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to `from`. Also stakes token\n    /// in one or more incentives if properly formatted `data` has a length > 0.\n    /// @inheritdoc IERC721Receiver\n    function onERC721Received(\n        address,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external override returns (bytes4) {\n        require(\n            msg.sender == address(nonfungiblePositionManager),\n            'UniswapV3Staker::onERC721Received: not a univ3 nft'\n        );\n\n        (, , , , , int24 tickLower, int24 tickUpper, , , , , ) = nonfungiblePositionManager.positions(tokenId);\n\n        deposits[tokenId] = Deposit({owner: from, numberOfStakes: 0, tickLower: tickLower, tickUpper: tickUpper});\n        emit DepositTransferred(tokenId, address(0), from);\n\n        if (data.length > 0) {\n            if (data.length == 160) {\n                _stakeToken(abi.decode(data, (IncentiveKey)), tokenId);\n            } else {\n                IncentiveKey[] memory keys = abi.decode(data, (IncentiveKey[]));\n                for (uint256 i = 0; i < keys.length; i++) {\n                    _stakeToken(keys[i], tokenId);\n                }\n            }\n        }\n        return this.onERC721Received.selector;\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function transferDeposit(uint256 tokenId, address to) external override {\n        require(to != address(0), 'UniswapV3Staker::transferDeposit: invalid transfer recipient');\n        address owner = deposits[tokenId].owner;\n        require(owner == msg.sender, 'UniswapV3Staker::transferDeposit: can only be called by deposit owner');\n        deposits[tokenId].owner = to;\n        emit DepositTransferred(tokenId, owner, to);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function withdrawToken(\n        uint256 tokenId,\n        address to,\n        bytes memory data\n    ) external override {\n        require(to != address(this), 'UniswapV3Staker::withdrawToken: cannot withdraw to staker');\n        Deposit memory deposit = deposits[tokenId];\n        require(deposit.numberOfStakes == 0, 'UniswapV3Staker::withdrawToken: cannot withdraw token while staked');\n        require(deposit.owner == msg.sender, 'UniswapV3Staker::withdrawToken: only owner can withdraw token');\n\n        delete deposits[tokenId];\n        emit DepositTransferred(tokenId, deposit.owner, address(0));\n\n        nonfungiblePositionManager.safeTransferFrom(address(this), to, tokenId, data);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function stakeToken(IncentiveKey memory key, uint256 tokenId) external override {\n        require(deposits[tokenId].owner == msg.sender, 'UniswapV3Staker::stakeToken: only owner can stake token');\n\n        _stakeToken(key, tokenId);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function unstakeToken(IncentiveKey memory key, uint256 tokenId) external override {\n        Deposit memory deposit = deposits[tokenId];\n        // anyone can call unstakeToken if the block time is after the end time of the incentive\n        if (block.timestamp < key.endTime) {\n            require(\n                deposit.owner == msg.sender,\n                'UniswapV3Staker::unstakeToken: only owner can withdraw token before incentive end time'\n            );\n        }\n\n        bytes32 incentiveId = IncentiveId.compute(key);\n\n        (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity) = stakes(tokenId, incentiveId);\n\n        require(liquidity != 0, 'UniswapV3Staker::unstakeToken: stake does not exist');\n\n        Incentive storage incentive = incentives[incentiveId];\n\n        deposits[tokenId].numberOfStakes--;\n        incentive.numberOfStakes--;\n\n        (, uint160 secondsPerLiquidityInsideX128, ) =\n            key.pool.snapshotCumulativesInside(deposit.tickLower, deposit.tickUpper);\n        (uint256 reward, uint160 secondsInsideX128) =\n            RewardMath.computeRewardAmount(\n                incentive.totalRewardUnclaimed,\n                incentive.totalSecondsClaimedX128,\n                key.startTime,\n                key.endTime,\n                liquidity,\n                secondsPerLiquidityInsideInitialX128,\n                secondsPerLiquidityInsideX128,\n                block.timestamp\n            );\n\n        // if this overflows, e.g. after 2^32-1 full liquidity seconds have been claimed,\n        // reward rate will fall drastically so it's safe\n        incentive.totalSecondsClaimedX128 += secondsInsideX128;\n        // reward is never greater than total reward unclaimed\n        incentive.totalRewardUnclaimed -= reward;\n        // this only overflows if a token has a total supply greater than type(uint256).max\n        rewards[key.rewardToken][deposit.owner] += reward;\n\n        Stake storage stake = _stakes[tokenId][incentiveId];\n        delete stake.secondsPerLiquidityInsideInitialX128;\n        delete stake.liquidityNoOverflow;\n        if (liquidity >= type(uint96).max) delete stake.liquidityIfOverflow;\n        emit TokenUnstaked(tokenId, incentiveId);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function claimReward(\n        IERC20Minimal rewardToken,\n        address to,\n        uint256 amountRequested\n    ) external override returns (uint256 reward) {\n        reward = rewards[rewardToken][msg.sender];\n        if (amountRequested != 0 && amountRequested < reward) {\n            reward = amountRequested;\n        }\n\n        rewards[rewardToken][msg.sender] -= reward;\n        TransferHelperExtended.safeTransfer(address(rewardToken), to, reward);\n\n        emit RewardClaimed(to, reward);\n    }\n\n    /// @inheritdoc IUniswapV3Staker\n    function getRewardInfo(IncentiveKey memory key, uint256 tokenId)\n        external\n        view\n        override\n        returns (uint256 reward, uint160 secondsInsideX128)\n    {\n        bytes32 incentiveId = IncentiveId.compute(key);\n\n        (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity) = stakes(tokenId, incentiveId);\n        require(liquidity > 0, 'UniswapV3Staker::getRewardInfo: stake does not exist');\n\n        Deposit memory deposit = deposits[tokenId];\n        Incentive memory incentive = incentives[incentiveId];\n\n        (, uint160 secondsPerLiquidityInsideX128, ) =\n            key.pool.snapshotCumulativesInside(deposit.tickLower, deposit.tickUpper);\n\n        (reward, secondsInsideX128) = RewardMath.computeRewardAmount(\n            incentive.totalRewardUnclaimed,\n            incentive.totalSecondsClaimedX128,\n            key.startTime,\n            key.endTime,\n            liquidity,\n            secondsPerLiquidityInsideInitialX128,\n            secondsPerLiquidityInsideX128,\n            block.timestamp\n        );\n    }\n\n    /// @dev Stakes a deposited token without doing an ownership check\n    function _stakeToken(IncentiveKey memory key, uint256 tokenId) private {\n        require(block.timestamp >= key.startTime, 'UniswapV3Staker::stakeToken: incentive not started');\n        require(block.timestamp < key.endTime, 'UniswapV3Staker::stakeToken: incentive ended');\n\n        bytes32 incentiveId = IncentiveId.compute(key);\n\n        require(\n            incentives[incentiveId].totalRewardUnclaimed > 0,\n            'UniswapV3Staker::stakeToken: non-existent incentive'\n        );\n        require(\n            _stakes[tokenId][incentiveId].liquidityNoOverflow == 0,\n            'UniswapV3Staker::stakeToken: token already staked'\n        );\n\n        (IUniswapV3Pool pool, int24 tickLower, int24 tickUpper, uint128 liquidity) =\n            NFTPositionInfo.getPositionInfo(factory, nonfungiblePositionManager, tokenId);\n\n        require(pool == key.pool, 'UniswapV3Staker::stakeToken: token pool is not the incentive pool');\n        require(liquidity > 0, 'UniswapV3Staker::stakeToken: cannot stake token with 0 liquidity');\n\n        deposits[tokenId].numberOfStakes++;\n        incentives[incentiveId].numberOfStakes++;\n\n        (, uint160 secondsPerLiquidityInsideX128, ) = pool.snapshotCumulativesInside(tickLower, tickUpper);\n\n        if (liquidity >= type(uint96).max) {\n            _stakes[tokenId][incentiveId] = Stake({\n                secondsPerLiquidityInsideInitialX128: secondsPerLiquidityInsideX128,\n                liquidityNoOverflow: type(uint96).max,\n                liquidityIfOverflow: liquidity\n            });\n        } else {\n            Stake storage stake = _stakes[tokenId][incentiveId];\n            stake.secondsPerLiquidityInsideInitialX128 = secondsPerLiquidityInsideX128;\n            stake.liquidityNoOverflow = uint96(liquidity);\n        }\n\n        emit TokenStaked(tokenId, incentiveId, liquidity);\n    }\n}\n"
      },
      "contracts/libraries/IncentiveId.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '../interfaces/IUniswapV3Staker.sol';\n\nlibrary IncentiveId {\n    /// @notice Calculate the key for a staking incentive\n    /// @param key The components used to compute the incentive identifier\n    /// @return incentiveId The identifier for the incentive\n    function compute(IUniswapV3Staker.IncentiveKey memory key) internal pure returns (bytes32 incentiveId) {\n        return keccak256(abi.encode(key));\n    }\n}\n"
      },
      "contracts/libraries/RewardMath.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '@uniswap/v3-core/contracts/libraries/FullMath.sol';\nimport '@openzeppelin/contracts/math/Math.sol';\n\n/// @title Math for computing rewards\n/// @notice Allows computing rewards given some parameters of stakes and incentives\nlibrary RewardMath {\n    /// @notice Compute the amount of rewards owed given parameters of the incentive and stake\n    /// @param totalRewardUnclaimed The total amount of unclaimed rewards left for an incentive\n    /// @param totalSecondsClaimedX128 How many full liquidity-seconds have been already claimed for the incentive\n    /// @param startTime When the incentive rewards began in epoch seconds\n    /// @param endTime When rewards are no longer being dripped out in epoch seconds\n    /// @param liquidity The amount of liquidity, assumed to be constant over the period over which the snapshots are measured\n    /// @param secondsPerLiquidityInsideInitialX128 The seconds per liquidity of the liquidity tick range as of the beginning of the period\n    /// @param secondsPerLiquidityInsideX128 The seconds per liquidity of the liquidity tick range as of the current block timestamp\n    /// @param currentTime The current block timestamp, which must be greater than or equal to the start time\n    /// @return reward The amount of rewards owed\n    /// @return secondsInsideX128 The total liquidity seconds inside the position's range for the duration of the stake\n    function computeRewardAmount(\n        uint256 totalRewardUnclaimed,\n        uint160 totalSecondsClaimedX128,\n        uint256 startTime,\n        uint256 endTime,\n        uint128 liquidity,\n        uint160 secondsPerLiquidityInsideInitialX128,\n        uint160 secondsPerLiquidityInsideX128,\n        uint256 currentTime\n    ) internal pure returns (uint256 reward, uint160 secondsInsideX128) {\n        // this should never be called before the start time\n        assert(currentTime >= startTime);\n\n        // this operation is safe, as the difference cannot be greater than 1/stake.liquidity\n        secondsInsideX128 = (secondsPerLiquidityInsideX128 - secondsPerLiquidityInsideInitialX128) * liquidity;\n\n        uint256 totalSecondsUnclaimedX128 =\n            ((Math.max(endTime, currentTime) - startTime) << 128) - totalSecondsClaimedX128;\n\n        reward = FullMath.mulDiv(totalRewardUnclaimed, secondsInsideX128, totalSecondsUnclaimedX128);\n    }\n}\n"
      },
      "contracts/libraries/NFTPositionInfo.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\nimport '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol';\n\n/// @notice Encapsulates the logic for getting info about a NFT token ID\nlibrary NFTPositionInfo {\n    /// @param factory The address of the Uniswap V3 Factory used in computing the pool address\n    /// @param nonfungiblePositionManager The address of the nonfungible position manager to query\n    /// @param tokenId The unique identifier of an Uniswap V3 LP token\n    /// @return pool The address of the Uniswap V3 pool\n    /// @return tickLower The lower tick of the Uniswap V3 position\n    /// @return tickUpper The upper tick of the Uniswap V3 position\n    /// @return liquidity The amount of liquidity staked\n    function getPositionInfo(\n        IUniswapV3Factory factory,\n        INonfungiblePositionManager nonfungiblePositionManager,\n        uint256 tokenId\n    )\n        internal\n        view\n        returns (\n            IUniswapV3Pool pool,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity\n        )\n    {\n        address token0;\n        address token1;\n        uint24 fee;\n        (, , token0, token1, fee, tickLower, tickUpper, liquidity, , , , ) = nonfungiblePositionManager.positions(\n            tokenId\n        );\n\n        pool = IUniswapV3Pool(\n            PoolAddress.computeAddress(\n                address(factory),\n                PoolAddress.PoolKey({token0: token0, token1: token1, fee: fee})\n            )\n        );\n    }\n}\n"
      },
      "contracts/libraries/TransferHelperExtended.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\n\nlibrary TransferHelperExtended {\n    using Address for address;\n\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        require(token.isContract(), 'TransferHelperExtended::safeTransferFrom: call to non-contract');\n        TransferHelper.safeTransferFrom(token, from, to, value);\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        require(token.isContract(), 'TransferHelperExtended::safeTransfer: call to non-contract');\n        TransferHelper.safeTransfer(token, to, value);\n    }\n}\n"
      },
      "@uniswap/v3-periphery/contracts/base/Multicall.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '../interfaces/IMulticall.sol';\n\n/// @title Multicall\n/// @notice Enables calling multiple methods in a single call to the contract\nabstract contract Multicall is IMulticall {\n    /// @inheritdoc IMulticall\n    function multicall(bytes[] calldata data) external payable override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n\n            if (!success) {\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                assembly {\n                    result := add(result, 0x04)\n                }\n                revert(abi.decode(result, (string)));\n            }\n\n            results[i] = result;\n        }\n    }\n}\n"
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/math/Math.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "contracts/test/TestERC20.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\n// uniswap-v3-core/contracts/test/TestERC20.sol\npragma solidity =0.7.6;\n\nimport '@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol';\n\ncontract TestERC20 is IERC20Minimal {\n    mapping(address => uint256) public override balanceOf;\n    mapping(address => mapping(address => uint256)) public override allowance;\n\n    constructor(uint256 amountToMint) {\n        mint(msg.sender, amountToMint);\n    }\n\n    function mint(address to, uint256 amount) public {\n        uint256 balanceNext = balanceOf[to] + amount;\n        require(balanceNext >= amount, 'overflow balance');\n        balanceOf[to] = balanceNext;\n    }\n\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        uint256 balanceBefore = balanceOf[msg.sender];\n        require(balanceBefore >= amount, 'insufficient balance');\n        balanceOf[msg.sender] = balanceBefore - amount;\n\n        uint256 balanceRecipient = balanceOf[recipient];\n        require(balanceRecipient + amount >= balanceRecipient, 'recipient balance overflow');\n        balanceOf[recipient] = balanceRecipient + amount;\n\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external override returns (bool) {\n        uint256 allowanceBefore = allowance[sender][msg.sender];\n        require(allowanceBefore >= amount, 'allowance insufficient');\n\n        allowance[sender][msg.sender] = allowanceBefore - amount;\n\n        uint256 balanceRecipient = balanceOf[recipient];\n        require(balanceRecipient + amount >= balanceRecipient, 'overflow balance recipient');\n        balanceOf[recipient] = balanceRecipient + amount;\n        uint256 balanceSender = balanceOf[sender];\n        require(balanceSender >= amount, 'underflow balance sender');\n        balanceOf[sender] = balanceSender - amount;\n\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n}\n"
      },
      "contracts/test/TestRewardMath.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '../interfaces/IUniswapV3Staker.sol';\n\nimport '../libraries/RewardMath.sol';\n\n/// @dev Test contract for RewardMatrh\ncontract TestRewardMath {\n    function computeRewardAmount(\n        uint256 totalRewardUnclaimed,\n        uint160 totalSecondsClaimedX128,\n        uint256 startTime,\n        uint256 endTime,\n        uint128 liquidity,\n        uint160 secondsPerLiquidityInsideInitialX128,\n        uint160 secondsPerLiquidityInsideX128,\n        uint256 currentTime\n    ) public pure returns (uint256 reward, uint160 secondsInsideX128) {\n        (reward, secondsInsideX128) = RewardMath.computeRewardAmount(\n            totalRewardUnclaimed,\n            totalSecondsClaimedX128,\n            startTime,\n            endTime,\n            liquidity,\n            secondsPerLiquidityInsideInitialX128,\n            secondsPerLiquidityInsideX128,\n            currentTime\n        );\n    }\n}\n"
      },
      "contracts/test/TestIncentiveId.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '../interfaces/IUniswapV3Staker.sol';\n\nimport '../libraries/IncentiveId.sol';\n\n/// @dev Test contract for IncentiveId\ncontract TestIncentiveId {\n    function compute(IUniswapV3Staker.IncentiveKey memory key) public pure returns (bytes32) {\n        return IncentiveId.compute(key);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "mode": "3"
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          }
        }
      },
      "@openzeppelin/contracts/math/Math.sol": {
        "Math": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0xa4fdec0ea7d943692cac780111ff2ff9d89848cad0494a59cfaed63a705054b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33ce43e57ca89276dc54f022f92ebf1b57bb50c8a5ec18415ce3ae3513f8bbf1\",\"dweb:/ipfs/QmcMEoXaS9dCa9EYN4y4zvq75Pmehy7DA6Q4VLiPaPCc9e\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "IERC721Enumerable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenOfOwnerByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "tokenByIndex(uint256)": "4f6ccce7",
              "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
              "totalSupply()": "18160ddd",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "IERC721Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "tokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "name()": "06fdde03",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "tokenURI(uint256)": "c87b56dd",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol": {
        "IERC20Minimal": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "IUniswapV3Factory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                }
              ],
              "name": "FeeAmountEnabled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "PoolCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "name": "createPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                }
              ],
              "name": "enableFeeAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "name": "feeAmountTickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "createPool(address,address,uint24)": "a1671295",
              "enableFeeAmount(uint24,int24)": "8a7c195f",
              "feeAmountTickSpacing(uint24)": "22afcccb",
              "getPool(address,address,uint24)": "1698ee82",
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "IUniswapV3Pool": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "CollectProtocol",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "observationCardinalityNextOld",
                  "type": "uint16"
                },
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "observationCardinalityNextNew",
                  "type": "uint16"
                }
              ],
              "name": "IncreaseObservationCardinalityNext",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol0Old",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol1Old",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol1New",
                  "type": "uint8"
                }
              ],
              "name": "SetFeeProtocol",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collectProtocol",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeGrowthGlobal0X128",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeGrowthGlobal1X128",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                }
              ],
              "name": "increaseObservationCardinalityNext",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "observations",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulativeX128",
                  "type": "uint160"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "observe",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulativeX128s",
                  "type": "uint160[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "_liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside0LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside1LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolFees",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "token0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "token1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "feeProtocol0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol1",
                  "type": "uint8"
                }
              ],
              "name": "setFeeProtocol",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "slot0",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "observationIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinality",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                }
              ],
              "name": "snapshotCumulativesInside",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "tickCumulativeInside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsInside",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthOutside0X128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthOutside1X128",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulativeOutside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityOutsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsOutside",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "collectProtocol(address,uint128,uint128)": "85b66729",
              "factory()": "c45a0155",
              "fee()": "ddca3f43",
              "feeGrowthGlobal0X128()": "f3058399",
              "feeGrowthGlobal1X128()": "46141319",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "increaseObservationCardinalityNext(uint16)": "32148f67",
              "initialize(uint160)": "f637731d",
              "liquidity()": "1a686502",
              "maxLiquidityPerTick()": "70cf754a",
              "mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
              "observations(uint256)": "252c09d7",
              "observe(uint32[])": "883bdbfd",
              "positions(bytes32)": "514ea4bf",
              "protocolFees()": "1ad8b03b",
              "setFeeProtocol(uint8,uint8)": "8206a4d1",
              "slot0()": "3850c7bd",
              "snapshotCumulativesInside(int24,int24)": "a38807f2",
              "swap(address,bool,int256,uint160,bytes)": "128acb08",
              "tickBitmap(int16)": "5339c296",
              "tickSpacing()": "d0c93a7c",
              "ticks(int24)": "f30dba93",
              "token0()": "0dfe1681",
              "token1()": "d21220a7"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "IUniswapV3PoolActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                }
              ],
              "name": "increaseObservationCardinalityNext",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "increaseObservationCardinalityNext(uint16)": "32148f67",
              "initialize(uint160)": "f637731d",
              "mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
              "swap(address,bool,int256,uint160,bytes)": "128acb08"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "IUniswapV3PoolDerivedState": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "observe",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulativeX128s",
                  "type": "uint160[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                }
              ],
              "name": "snapshotCumulativesInside",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "tickCumulativeInside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsInside",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "observe(uint32[])": "883bdbfd",
              "snapshotCumulativesInside(int24,int24)": "a38807f2"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "IUniswapV3PoolEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "CollectProtocol",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "observationCardinalityNextOld",
                  "type": "uint16"
                },
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "observationCardinalityNextNew",
                  "type": "uint16"
                }
              ],
              "name": "IncreaseObservationCardinalityNext",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol0Old",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol1Old",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "feeProtocol1New",
                  "type": "uint8"
                }
              ],
              "name": "SetFeeProtocol",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "IUniswapV3PoolImmutables": {
          "abi": [
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "factory()": "c45a0155",
              "fee()": "ddca3f43",
              "maxLiquidityPerTick()": "70cf754a",
              "tickSpacing()": "d0c93a7c",
              "token0()": "0dfe1681",
              "token1()": "d21220a7"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "IUniswapV3PoolOwnerActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collectProtocol",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "feeProtocol0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol1",
                  "type": "uint8"
                }
              ],
              "name": "setFeeProtocol",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "collectProtocol(address,uint128,uint128)": "85b66729",
              "setFeeProtocol(uint8,uint8)": "8206a4d1"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "IUniswapV3PoolState": {
          "abi": [
            {
              "inputs": [],
              "name": "feeGrowthGlobal0X128",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeGrowthGlobal1X128",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "observations",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulativeX128",
                  "type": "uint160"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "_liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside0LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside1LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "protocolFees",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "token0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "token1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "slot0",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "observationIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinality",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "observationCardinalityNext",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "feeProtocol",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityGross",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityNet",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthOutside0X128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthOutside1X128",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulativeOutside",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityOutsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsOutside",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "feeGrowthGlobal0X128()": "f3058399",
              "feeGrowthGlobal1X128()": "46141319",
              "liquidity()": "1a686502",
              "observations(uint256)": "252c09d7",
              "positions(bytes32)": "514ea4bf",
              "protocolFees()": "1ad8b03b",
              "slot0()": "3850c7bd",
              "tickBitmap(int16)": "5339c296",
              "ticks(int24)": "f30dba93"
            }
          }
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol": {
        "FullMath": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xe511530871deaef86692cea9adb6076d26d7b47fd4815ce51af52af981026057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5a6ae776be3e7dcbd23d49ffbc9d792fed0ddf4b111ebb64b9bb2133ec263e\",\"dweb:/ipfs/QmbAUtWqvipzEARQpFpkzYKBELy3qeW5WXnZxHFU84sxG7\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"FullMath.sol:FullMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "@uniswap/v3-periphery/contracts/base/Multicall.sol": {
        "Multicall": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0x66944db127ed8e9f60d1ca99462b36580d29412a7862cf137b253d45ee0a24a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f4cbdf4504726c2d90e8414c4f2d300d1d1f6afeac6aa4ea3d69b84836fe73d\",\"dweb:/ipfs/QmW8nUyhCGaHeqPcyK7Q6YMFvnsL5vL2UWTWc2Rd4MNsgi\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "multicall(bytes[])": "ac9650d8"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
        "IERC721Permit": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "IMulticall": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":\"IMulticall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "multicall(bytes[])": "ac9650d8"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
        "INonfungiblePositionManager": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "DecreaseLiquidity",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "IncreaseLiquidity",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WETH9",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount0Max",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount1Max",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.CollectParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "createAndInitializePoolIfNecessary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "liquidity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "decreaseLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "increaseLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.MintParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside0LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside1LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "refundETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenOfOwnerByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "tokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWETH9",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "WETH9()": "4aa4a4fc",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "collect((uint256,address,uint128,uint128))": "fc6f7865",
              "createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
              "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
              "factory()": "c45a0155",
              "getApproved(uint256)": "081812fc",
              "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
              "isApprovedForAll(address,address)": "e985e9c5",
              "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
              "name()": "06fdde03",
              "ownerOf(uint256)": "6352211e",
              "permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
              "positions(uint256)": "99fbab88",
              "refundETH()": "12210e8a",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "symbol()": "95d89b41",
              "tokenByIndex(uint256)": "4f6ccce7",
              "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
              "tokenURI(uint256)": "c87b56dd",
              "totalSupply()": "18160ddd",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unwrapWETH9(uint256,address)": "49404b7c"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "IPeripheryImmutableState": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH9",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "WETH9()": "4aa4a4fc",
              "factory()": "c45a0155"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "IPeripheryPayments": {
          "abi": [
            {
              "inputs": [],
              "name": "refundETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWETH9",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "refundETH()": "12210e8a",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "unwrapWETH9(uint256,address)": "49404b7c"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
        "IPoolInitializer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "createAndInitializePoolIfNecessary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
            }
          }
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "PoolAddress": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"PoolAddress.sol:PoolAddress\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "TransferHelper": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"TransferHelper.sol:TransferHelper\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "contracts/UniswapV3Staker.sol": {
        "UniswapV3Staker": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IUniswapV3Factory",
                  "name": "_factory",
                  "type": "address"
                },
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "_nonfungiblePositionManager",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxIncentiveStartLeadTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxIncentiveDuration",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "DepositTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IUniswapV3Pool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "refundee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveEnded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "TokenStaked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "TokenUnstaked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "createIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "deposits",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "numberOfStakes",
                  "type": "uint48"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "endIncentive",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract IUniswapV3Factory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsInsideX128",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "incentives",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalRewardUnclaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "totalSecondsClaimedX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint96",
                  "name": "numberOfStakes",
                  "type": "uint96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveStartLeadTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "stakeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "stakes",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideInitialX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferDeposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "unstakeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "withdrawToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"_nonfungiblePositionManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxIncentiveStartLeadTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxIncentiveDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"DepositTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"IncentiveCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"IncentiveEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"createIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"numberOfStakes\",\"type\":\"uint48\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"endIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"secondsInsideX128\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"incentives\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRewardUnclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"totalSecondsClaimedX128\",\"type\":\"uint160\"},{\"internalType\":\"uint96\",\"name\":\"numberOfStakes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveStartLeadTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideInitialX128\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimReward(address,address,uint256)\":{\"params\":{\"amountRequested\":\"The amount of reward tokens to claim. Claims entire reward amount if set to 0.\",\"rewardToken\":\"The token being distributed as a reward\",\"to\":\"The address where claimed rewards will be sent to\"},\"returns\":{\"reward\":\"The amount of reward tokens claimed\"}},\"constructor\":{\"params\":{\"_factory\":\"the Uniswap V3 factory\",\"_maxIncentiveDuration\":\"the max amount of seconds into the future the incentive startTime can be set\",\"_maxIncentiveStartLeadTime\":\"the max duration of an incentive in seconds\",\"_nonfungiblePositionManager\":\"the NFT position manager contract address\"}},\"createIncentive((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"Details of the incentive to create\",\"reward\":\"The amount of reward tokens to be distributed\"}},\"endIncentive((address,address,uint256,uint256,address))\":{\"params\":{\"key\":\"Details of the incentive to end\"},\"returns\":{\"refund\":\"The remaining reward tokens when the incentive is ended\"}},\"getRewardInfo((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive\",\"tokenId\":\"The ID of the token\"},\"returns\":{\"reward\":\"The reward accrued to the NFT for the given incentive thus far\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"},\"stakeToken((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive for which to stake the NFT\",\"tokenId\":\"The ID of the token to stake\"}},\"stakes(uint256,bytes32)\":{\"params\":{\"incentiveId\":\"The ID of the incentive for which the token is staked\",\"tokenId\":\"The ID of the staked token\"},\"returns\":{\"liquidity\":\"The amount of liquidity in the NFT as of the last time the rewards were computed\",\"secondsPerLiquidityInsideInitialX128\":\"secondsPerLiquidity represented as a UQ32.128\"}},\"transferDeposit(uint256,address)\":{\"params\":{\"to\":\"The new owner of the deposit\",\"tokenId\":\"The ID of the token (and the deposit) to transfer\"}},\"unstakeToken((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive for which to unstake the NFT\",\"tokenId\":\"The ID of the token to unstake\"}},\"withdrawToken(uint256,address,bytes)\":{\"params\":{\"data\":\"An optional data array that will be passed along to the `to` address via the NFT safeTransferFrom\",\"to\":\"The address where the LP token will be sent\",\"tokenId\":\"The unique identifier of an Uniswap V3 LP token\"}}},\"stateVariables\":{\"_stakes\":{\"details\":\"stakes[tokenId][incentiveHash] => Stake\"},\"deposits\":{\"details\":\"deposits[tokenId] => Deposit\"},\"incentives\":{\"details\":\"bytes32 refers to the return value of IncentiveId.compute\"},\"rewards\":{\"details\":\"rewards[rewardToken][owner] => uint256\",\"params\":{\"owner\":\"The owner for which the rewards owed are checked\",\"rewardToken\":\"The token for which to check rewards\"},\"return\":\"rewardsOwed The amount of the reward token claimable by the owner\"}},\"title\":\"Uniswap V3 canonical staking interface\",\"version\":1},\"userdoc\":{\"events\":{\"DepositTransferred(uint256,address,address)\":{\"notice\":\"Emitted when ownership of a deposit changes\"},\"IncentiveCreated(address,address,uint256,uint256,address,uint256)\":{\"notice\":\"Event emitted when a liquidity mining incentive has been created\"},\"IncentiveEnded(bytes32,uint256)\":{\"notice\":\"Event that can be emitted when a liquidity mining incentive has ended\"},\"RewardClaimed(address,uint256)\":{\"notice\":\"Event emitted when a reward token has been claimed\"},\"TokenStaked(uint256,bytes32,uint128)\":{\"notice\":\"Event emitted when a Uniswap V3 LP token has been staked\"},\"TokenUnstaked(uint256,bytes32)\":{\"notice\":\"Event emitted when a Uniswap V3 LP token has been unstaked\"}},\"kind\":\"user\",\"methods\":{\"claimReward(address,address,uint256)\":{\"notice\":\"Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\"},\"createIncentive((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Creates a new liquidity mining incentive program\"},\"endIncentive((address,address,uint256,uint256,address))\":{\"notice\":\"Ends an incentive after the incentive end time has passed and all stakes have been withdrawn\"},\"factory()\":{\"notice\":\"The Uniswap V3 Factory\"},\"getRewardInfo((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Calculates the reward amount that will be received for the given stake\"},\"maxIncentiveDuration()\":{\"notice\":\"The max duration of an incentive in seconds\"},\"maxIncentiveStartLeadTime()\":{\"notice\":\"The max amount of seconds into the future the incentive startTime can be set\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"nonfungiblePositionManager()\":{\"notice\":\"The nonfungible position manager with which this staking contract is compatible\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Upon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to `from`. Also stakes token in one or more incentives if properly formatted `data` has a length > 0.\"},\"rewards(address,address)\":{\"notice\":\"Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated\"},\"stakeToken((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Stakes a Uniswap V3 LP token\"},\"stakes(uint256,bytes32)\":{\"notice\":\"Returns information about a staked liquidity NFT\"},\"transferDeposit(uint256,address)\":{\"notice\":\"Transfers ownership of a deposit from the sender to the given recipient\"},\"unstakeToken((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Unstakes a Uniswap V3 LP token\"},\"withdrawToken(uint256,address,bytes)\":{\"notice\":\"Withdraws a Uniswap V3 LP token `tokenId` from this contract to the recipient `to`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV3Staker.sol\":\"UniswapV3Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0xa4fdec0ea7d943692cac780111ff2ff9d89848cad0494a59cfaed63a705054b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33ce43e57ca89276dc54f022f92ebf1b57bb50c8a5ec18415ce3ae3513f8bbf1\",\"dweb:/ipfs/QmcMEoXaS9dCa9EYN4y4zvq75Pmehy7DA6Q4VLiPaPCc9e\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]},\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xe511530871deaef86692cea9adb6076d26d7b47fd4815ce51af52af981026057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5a6ae776be3e7dcbd23d49ffbc9d792fed0ddf4b111ebb64b9bb2133ec263e\",\"dweb:/ipfs/QmbAUtWqvipzEARQpFpkzYKBELy3qeW5WXnZxHFU84sxG7\"]},\"@uniswap/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0x66944db127ed8e9f60d1ca99462b36580d29412a7862cf137b253d45ee0a24a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f4cbdf4504726c2d90e8414c4f2d300d1d1f6afeac6aa4ea3d69b84836fe73d\",\"dweb:/ipfs/QmW8nUyhCGaHeqPcyK7Q6YMFvnsL5vL2UWTWc2Rd4MNsgi\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/UniswapV3Staker.sol\":{\"keccak256\":\"0xe29ccd8d933311611e5619111b0c156b06cbb3da04a0f0d7aead1ef6651b1384\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://96da66d24794f3d623b104fd980c316b64572545fdf89ef70389a0ff9ef30a30\",\"dweb:/ipfs/QmW5Myj3G7vo6RaFheG8iw8wJ93kVr3FeAxtjFTWioapaD\"]},\"contracts/interfaces/IUniswapV3Staker.sol\":{\"keccak256\":\"0xb6251b51152cee46a5e9373e606ce80e0ff035244251afca9d2ec1e874ae9fe5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6083f93192635e35b77b7de5438e153fa2f0a026b9c2f3b66f5627316175fa4\",\"dweb:/ipfs/QmPDwtkgoMvXNT9wYayD6TBufcNMLDDL4hjXw2nkeVGtA6\"]},\"contracts/libraries/IncentiveId.sol\":{\"keccak256\":\"0x30c6f4161b0c3bc5758c0132baadfd21ddd62ee5097e9da57f1ceff9122e0c45\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6c46af685b35e3eb1c6e0d198f344655feea1020fd17327f1e49926a6064de58\",\"dweb:/ipfs/QmWHsRo2XGbiyc3VAckRnRpoPz7KrNkn9NhVVLiR7pZmRV\"]},\"contracts/libraries/NFTPositionInfo.sol\":{\"keccak256\":\"0x9fb098fadc483b14181f0562890fcd1340ec82d13cd922f3664891e85cfc3b40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc186de72381918380069f176d024952e041ce817155ffa63e2474dc78ee709\",\"dweb:/ipfs/QmUTVt6mrAdLVcyLSvScqzSYDDdUqyGzU4aXqQ2zsJNhaT\"]},\"contracts/libraries/RewardMath.sol\":{\"keccak256\":\"0x1a416c0d17acda6f2bb819da7e88ceaf61d9299cae4ada790082e2aa0830d193\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ac5402045285b70b286d622495fc301ab6c8604ca4dcb9d931122aa387114f7\",\"dweb:/ipfs/QmTxJcsSbandYCK67EARcFw6g1EnGkyM2SeUX15VXKkWNn\"]},\"contracts/libraries/TransferHelperExtended.sol\":{\"keccak256\":\"0xa7f6489e883fe4e36009910115589e08c90f6827f1eb20ab47f0946ccbb5b661\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dd21aaa84d9071cc966e5d076b079a327be0a96de1af5896bca8145d66aa51f9\",\"dweb:/ipfs/QmUepX5wviBUufPZTqp6Ub2u7PquW9N5voAPamtYvfAdYN\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"UniswapV3Staker.sol:UniswapV3Staker\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @function_main, @DEFAULT_UNWIND\n.BB0_1:\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_10\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tld.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_12\n\tadd\tr0, r0, r6\n.BB0_4:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_4\n.BB0_12:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB0_6\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_6:\n\tadd\t@CPI0_1[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_1[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_1[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tadd\tr2, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB0_10\n\tld.1.inc\tr1, r2, r3\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_10\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_2[0], r3, r4\n\tjump.gt\t@.BB0_10\n\tadd\t96, r1, r4\n\tld.1\tr4, r4\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tshl.s\t96, r2, r2\n\tst.1\t128, r2\n\tshl.s\t96, r3, r2\n\tst.1\t160, r2\n\tst.1\t192, r1\n\tst.1\t224, r4\n\tld.1\t128, r1\n\tld.1\t160, r2\n\tld.1\t192, r3\n\tst.2\t320, r0\n\tst.2\t352, r4\n\tadd\t32, r0, r4\n\tst.2\t384, r4\n\tst.2\t416, r3\n\tadd\t64, r0, r3\n\tst.2\t448, r3\n\tshr.s\t96, r2, r2\n\tst.2\t480, r2\n\tadd\t96, r0, r2\n\tst.2\t512, r2\n\tshr.s\t96, r1, r1\n\tst.2\t544, r1\n\tst.2\t256, r4\n\tadd\t4, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfunction_main:\n.func_begin1:\n\tnop\tstack+=[19]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_10\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tld.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB1_714\n\tadd\tr0, r0, r6\n.BB1_4:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_4\n.BB1_714:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_6\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB1_6:\n\tadd\t@CPI1_7[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tadd\tr2, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB1_11\n\tld.1.inc\tr1, r2, r3\n\tsub.s!\t@CPI1_10[0], r2, r4\n\tjump.gt\t@.BB1_11\n\tld.1\tr3, r3\n\tsub.s!\t@CPI1_10[0], r3, r4\n\tjump.gt\t@.BB1_11\n\tadd\t96, r1, r4\n\tld.1\tr4, r4\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tshl.s\t96, r2, r2\n\tst.1\t128, r2\n\tshl.s\t96, r3, r2\n\tst.1\t160, r2\n\tst.1\t192, r1\n\tst.1\t224, r4\n\tld.1\t128, r1\n\tld.1\t160, r2\n\tld.1\t192, r3\n\tst.2\t320, r0\n\tst.2\t352, r4\n\tadd\t32, r0, r4\n\tst.2\t384, r4\n\tst.2\t416, r3\n\tadd\t64, r0, r3\n\tst.2\t448, r3\n\tshr.s\t96, r2, r2\n\tst.2\t480, r2\n\tadd\t96, r0, r2\n\tst.2\t512, r2\n\tshr.s\t96, r1, r1\n\tst.2\t544, r1\n\tst.2\t256, r4\n\tadd\t4, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI1_128[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_10:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t3, r2, r3\n\tjump.gt\t@.BB1_434\n.BB1_11:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_434:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tld\tr4, r5\n\tshr.s\t224, r5, r3\n\tsub.s!\t@CPI1_0[0], r5, r6\n\tjump.ge\t@.BB1_435\n\tsub.s!\t@CPI1_81[0], r5, r5\n\tjump.ge\t@.BB1_441\n\tsub.s!\t@CPI1_109[0], r3, r1\n\tjump.ne\t@.BB1_450\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tjump\t@.BB1_34\n.BB1_435:\n\tsub.s!\t@CPI1_1[0], r5, r1\n\tjump.ge\t@.BB1_436\n\tsub.s!\t@CPI1_67[0], r3, r1\n\tjump.ne\t@.BB1_447\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tst.1\t32, r2\n\tst.1\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tshr.s\t160, r1, r3\n\tand\t@CPI1_13[0], r3, r3\n\tld.1\t64, r4\n\tadd\t32, r4, r5\n\tst.1\tr5, r3\n\tand!\t@CPI1_14[0], r1, r3\n\tadd\t@CPI1_15[0], r0, r3\n\tadd\tr3, r0, r5\n\tadd.eq\t0, r0, r5\n\tshr.s\t208, r1, r6\n\tand\t@CPI1_16[0], r6, r6\n\tor\tr5, r6, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\tr3, r0, r2\n\tshr.s\t232, r1, r3\n\tand\t@CPI1_16[0], r3, r3\n\tor\tr2, r3, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tand\t@CPI1_10[0], r1, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tsub\tr4, r1, r2\n\tadd\t128, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_441:\n\tsub.s!\t@CPI1_82[0], r3, r5\n\tjump.ne\t@.BB1_442\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tsub.s!\t95, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI1_7[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tand\t@CPI1_10[0], r2, r4\n\tadd\tr4, r0, stack-[19]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tptr.add.s\t68, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_88[0], r2, r4\n\tjump.ge\t@.BB1_11\n\tadd\t35, r2, r4\n\tadd\t@CPI1_7[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.le\tr5, r0, r6\n\tand\t@CPI1_7[0], r1, r7\n\tand\t@CPI1_7[0], r4, r4\n\tsub!\tr7, r4, r8\n\tadd.le\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB1_11\n\tadd\t4, r2, r5\n\tptr.add\tr3, r5, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI1_88[0], r4, r3\n\tjump.ge\t@.BB1_11\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[16]\n\tand\tr3, r6, r3\n\tld.1\t64, r6\n\tadd\tr6, r3, r3\n\tadd\tr6, r0, stack-[17]\n\tsub!\tr3, r6, r6\n\tjump.lt\t@.BB1_11\n\tsub.s!\t@CPI1_88[0], r3, r6\n\tjump.ge\t@.BB1_11\n\tst.1\t64, r3\n\tadd\tstack-[17], r0, r3\n\tst.1.inc\tr3, r4, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t32, r4, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB1_11\n\tand\t31, r4, r1\n\tadd\t36, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r4, r4\n\tadd\tstack-[15], r0, r8\n\tjump.eq\t@.BB1_698\n\tadd\tr0, r0, r5\n.BB1_358:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB1_358\n.BB1_698:\n\tsub.s!\t0, r1, r5\n\tjump.eq\t@.BB1_360\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr8, r4, r4\n\tshl.s\t3, r1, r1\n\tld.1\tr4, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB1_360:\n\tadd\tstack-[17], r0, r1\n\tadd\tr3, r1, r1\n\tst.1\tr1, r0\n\tcontext.this\tr2\n\tadd\tstack-[19], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB1_86\n\tadd\t132, r0, r12\n\tadd\t@CPI1_108[0], r0, r1\n\tadd\t100, r0, r9\n\tadd\t@CPI1_104[0], r0, r3\n\tadd\t68, r0, r10\n\tadd\t57, r0, r4\n\tadd\t36, r0, r11\n\tadd\t32, r0, r5\n\tadd\t4, r0, r8\n\tadd\t@CPI1_19[0], r0, r6\n\tld.1\t64, r7\n\tadd\tr7, r0, r2\n\tjump\t@.BB1_66\n.BB1_436:\n\tsub.s!\t@CPI1_2[0], r3, r1\n\tjump.ne\t@.BB1_437\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_49\n\tjump\t@.BB1_11\n.BB1_450:\n\tsub.s!\t@CPI1_110[0], r3, r1\n\tjump.ne\t@.BB1_451\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tsub.s!\t127, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI1_7[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_9[0], r3, r3\n\tjump.ge\t@.BB1_11\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tand\t@CPI1_10[0], r3, r4\n\tadd\tr4, r0, stack-[18]\n\tsub.s!\t@CPI1_10[0], r3, r3\n\tjump.gt\t@.BB1_11\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[17]\n\tptr.add.s\t100, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[19]\n\tsub.s!\t@CPI1_87[0], r3, r3\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r3\n\tadd\t35, r3, r3\n\tadd\t@CPI1_7[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_7[0], r1, r6\n\tand\t@CPI1_7[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_7[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[19], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI1_87[0], r2, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t36, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tstack-[16], r0, r3\n\tadd\tr2, r3, r2\n\tadd\tr2, r0, stack-[15]\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB1_11\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[13]\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_453\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t@CPI1_54[0], r0, r2\n\tst.1\tr3, r2\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_471\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_75\n.BB1_447:\n\tsub.s!\t@CPI1_68[0], r3, r1\n\tjump.ne\t@.BB1_448\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n.BB1_49:\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_442:\n\tsub.s!\t@CPI1_83[0], r3, r5\n\tjump.ne\t@.BB1_443\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n.BB1_34:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_437:\n\tsub.s!\t@CPI1_3[0], r3, r1\n\tjump.ne\t@.BB1_438\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t191, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_8[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_9[0], r2, r3\n\tjump.ge\t@.BB1_11\n\tst.1.inc\tr1, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_10[0], r2, r3\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r3\n\tst.1\tr3, r2\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t64, r1, r3\n\tadd\tr3, r0, stack-[18]\n\tst.1\tr3, r2\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t96, r1, r3\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr3, r2\n\tadd\t132, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_10[0], r2, r3\n\tjump.gt\t@.BB1_11\n\tadd\t128, r1, r3\n\tst.1\tr3, r2\n\tadd\t164, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r4\n\tst.1\tr4, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r4\n\tst.1\tr4, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r4\n\tst.1\tr4, r1\n\tld.1\tr3, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tshr.s\t160, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI1_24[0], r2, r2\n\tjump.ne\t@.BB1_118\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI1_25[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n.BB1_118:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_120\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI1_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI1_66[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t52, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_451:\n\tsub.s!\t@CPI1_111[0], r3, r1\n\tjump.ne\t@.BB1_452\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r2\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\t@CPI1_9[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_79\n\tadd\t132, r0, r11\n\tadd\t@CPI1_119[0], r0, r2\n\tadd\t100, r0, r10\n\tadd\t@CPI1_118[0], r0, r3\n\tadd\t68, r0, r9\n\tadd\t60, r0, r4\n\tadd\t36, r0, r8\n\tadd\t32, r0, r6\n\tadd\t4, r0, r7\n\tadd\t@CPI1_19[0], r0, r12\n\tld.1\t64, r5\n\tadd\tr5, r0, r1\n.BB1_67:\n\tst.1\tr5, r12\n\tadd\tr1, r7, r5\n\tst.1\tr5, r6\n\tadd\tr1, r8, r5\n\tst.1\tr5, r4\n\tadd\tr1, r9, r4\n\tst.1\tr4, r3\n\tadd\tr1, r10, r3\n\tst.1\tr3, r2\n\tadd\tr1, r11, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_448:\n\tsub.s!\t@CPI1_69[0], r3, r1\n\tjump.ne\t@.BB1_449\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t159, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t64, r2, r3\n\tadd\tr3, r0, stack-[14]\n\tst.1\tr3, r1\n\tadd\t100, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t132, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB1_112\n\tadd\t132, r2, r1\n\tadd\t@CPI1_79[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r2, r1\n\tadd\t@CPI1_80[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI1_73[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t67, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t164, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_443:\n\tsub.s!\t@CPI1_84[0], r3, r5\n\tjump.ne\t@.BB1_444\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t191, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t64, r2, r3\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr3, r1\n\tadd\t100, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\t132, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\t164, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_91\n\tadd\t132, r0, r11\n\tadd\t@CPI1_101[0], r0, r2\n\tadd\t100, r0, r10\n\tadd\t@CPI1_91[0], r0, r3\n\tadd\t68, r0, r9\n\tadd\t57, r0, r4\n\tadd\t36, r0, r8\n\tadd\t32, r0, r6\n\tadd\t@CPI1_19[0], r0, r12\n\tld.1\t64, r5\n\tadd\tr5, r0, r1\n\tadd\tstack-[18], r0, r7\n\tjump\t@.BB1_67\n.BB1_438:\n\tsub.s!\t@CPI1_4[0], r3, r1\n\tjump.ne\t@.BB1_439\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r3\n\tjump.ge\t@.BB1_11\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\t@CPI1_10[0], r2, r2\n\tjump.gt\t@.BB1_11\n\tadd\t3, r0, r2\n\tst.1\t32, r2\n\tst.1\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tst.1\t32, r1\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tjump\t@.BB1_34\n.BB1_452:\n\tsub.s!\t@CPI1_112[0], r3, r1\n\tjump.ne\t@.BB1_11\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[19]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[18]\n\tsub.s!\t@CPI1_10[0], r2, r2\n\tjump.gt\t@.BB1_11\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tstack-[14], r0, r6\n\tsub!\tr5, r6, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t0, r5, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tand!\tr4, r3, r3\n\tadd\tr6, r0, r3\n\tadd.ne\tr5, r0, r3\n\tadd\tr3, r0, stack-[17]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[17], r0, r3\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI1_31[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[19], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_195\n.BB1_602:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI1_115[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI1_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t58, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_449:\n\tsub.s!\t@CPI1_70[0], r3, r1\n\tjump.ne\t@.BB1_11\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[19]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r2\n\tsload\tr2, r3\n\tand\t@CPI1_10[0], r3, r1\n\tshr.s\t160, r3, r15\n\tsub.s!\t@CPI1_24[0], r15, r3\n\tjump.ne\t@.BB1_117\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tand\t@CPI1_25[0], r2, r15\n.BB1_117:\n\tld.1\t64, r3\n\tst.1.inc\tr3, r1, r2\n\tadd\t64, r0, r1\n.BB1_36:\n\tst.1\tr2, r15\n\tadd\tr3, r1, r7\n\tjump\t@.BB1_37\n.BB1_444:\n\tsub.s!\t@CPI1_85[0], r3, r5\n\tjump.ne\t@.BB1_445\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t32, r0\n\tst.1\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t64, r3, r4\n\tshr.s\t160, r1, r5\n\tst.1\tr4, r5\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tst.1\tr3, r2\n\tld.1\t64, r1\n\tsub\tr3, r1, r2\n\tadd\t96, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_439:\n\tsub.s!\t@CPI1_5[0], r3, r1\n\tjump.ne\t@.BB1_440\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t191, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t64, r2, r3\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr3, r1\n\tadd\t100, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t132, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\t164, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB1_466\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB1_139\n\tadd\t@CPI1_63[0], r0, r4\n\tadd\t50, r0, r3\n\tld.1\t64, r2\n\tjump\t@.BB1_72\n.BB1_445:\n\tsub.s!\t@CPI1_86[0], r3, r3\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r2, r3\n\tadd\t@CPI1_7[0], r0, r5\n\tsub.s!\t31, r3, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr5, r0, r6\n\tand\t@CPI1_7[0], r3, r3\n\tsub.s!\t0, r3, r7\n\tadd.ge\t0, r0, r5\n\tsub.s!\t@CPI1_7[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_11\n\tptr.add.s\t4, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_87[0], r3, r5\n\tjump.gt\t@.BB1_11\n\tadd\t35, r3, r5\n\tadd\t@CPI1_7[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI1_7[0], r2, r8\n\tand\t@CPI1_7[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB1_11\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r10\n\tsub.s!\t@CPI1_87[0], r10, r4\n\tjump.gt\t@.BB1_11\n\tadd\t36, r3, r11\n\tshl.s\t5, r10, r4\n\tadd\tr11, r4, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB1_11\n\tst.1\t128, r10\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tsub.s!\t0, r10, r2\n\tjump.eq\t@.BB1_106\n\tadd\t96, r0, r12\n\tadd\tr10, r0, r2\n\tadd\tr10, r0, stack-[17]\n\tadd\tr11, r0, stack-[16]\n\tadd\tr12, r0, stack-[15]\n.BB1_105:\n\tadd\t32, r1, r1\n\tst.1\tr1, r12\n\tsub.s!\t1, r2, r2\n\tjump.ne\t@.BB1_105\n\tsub.s!\t0, r10, r1\n\tjump.ne\t@.BB1_104\n.BB1_106:\n\tld.1\t64, r3\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r4\n\tadd\tr2, r4, r7\n\tsub.s!\t0, r1, r4\n\tjump.ne\t@.BB1_107\n.BB1_37:\n\tld.1\t64, r1\n\tsub\tr7, r1, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_440:\n\tsub.s!\t@CPI1_6[0], r3, r1\n\tjump.ne\t@.BB1_11\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_11\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t191, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[18], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t64, r2, r3\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr3, r1\n\tadd\t100, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t132, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tadd\t164, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r6\n\tadd\t128, r6, r2\n\tst.1\t64, r2\n\tsload\tr1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tshr.s\t160, r1, r3\n\tand\t@CPI1_13[0], r3, r3\n\tadd\t32, r6, r4\n\tst.1\tr4, r3\n\tand!\t@CPI1_14[0], r1, r3\n\tadd\t@CPI1_15[0], r0, r3\n\tadd\tr3, r0, r4\n\tadd.eq\t0, r0, r4\n\tshr.s\t208, r1, r5\n\tand\t@CPI1_16[0], r5, r5\n\tor\tr4, r5, r4\n\tand\t@CPI1_10[0], r1, r5\n\tst.1\tr6, r5\n\tadd\t64, r6, r5\n\tadd\tr5, r0, stack-[5]\n\tst.1\tr5, r4\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\tr3, r0, r2\n\tshr.s\t232, r1, r1\n\tand\t@CPI1_16[0], r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, stack-[6]\n\tadd\t96, r6, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB1_126\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB1_470\n.BB1_126:\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[12]\n\tshr.s\t160, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI1_24[0], r2, r2\n\tjump.ne\t@.BB1_119\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand\t@CPI1_25[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n.BB1_119:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_129\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI1_43[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI1_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t51, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_79:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_489\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_28[0], r2, r2\n\tadd\tstack-[19], r0, r7\n\tor\tr2, r7, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI1_106[0], r0, r4\n\tadd\tstack-[18], r0, r5\n\tadd\tstack-[16], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_11\n.BB1_40:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_489:\n\tld.1\t64, r2\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t164, r0, r12\n\tadd\t@CPI1_116[0], r0, r1\n\tadd\t132, r0, r9\n\tadd\t@CPI1_117[0], r0, r3\n\tadd\t100, r0, r10\n\tadd\t@CPI1_118[0], r0, r4\n\tadd\t68, r0, r11\n\tadd\t69, r0, r5\n\tadd\t36, r0, r8\n\tadd\t32, r0, r6\n\tadd\t4, r2, r7\n.BB1_66:\n\tst.1\tr7, r6\n\tadd\tr2, r8, r6\n\tst.1\tr6, r5\n\tadd\tr2, r11, r5\n\tst.1\tr5, r4\n\tadd\tr2, r10, r4\n\tst.1\tr4, r3\n\tadd\tr2, r9, r3\n\tst.1\tr3, r1\n\tadd\tr2, r12, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_107:\n\tsub.s\t64, r0, r4\n\tsub\tr4, r3, r3\n\tadd\t160, r0, r4\n\tsub.s\t32, r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB1_679\n.BB1_367:\n\tadd\t31, r8, r8\n\tand\tr8, r5, r8\n\tadd\tr7, r8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r8\n\tjump.ge\t@.BB1_37\n.BB1_679:\n\tadd\tr3, r7, r8\n\tst.1.inc\tr2, r8, r2\n\tld.1.inc\tr4, r9, r4\n\tld.1\tr9, r8\n\tst.1.inc\tr7, r8, r7\n\tsub.s!\t0, r8, r10\n\tjump.eq\t@.BB1_367\n\tadd\tr0, r0, r10\n.BB1_682:\n\tadd\tr10, r7, r11\n\tadd\t32, r10, r10\n\tadd\tr10, r9, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_682\n\tsub!\tr10, r8, r9\n\tjump.le\t@.BB1_367\n\tadd\tr8, r7, r9\n\tst.1\tr9, r0\n\tjump\t@.BB1_367\n.BB1_91:\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB1_93\n\tld.1\t64, r1\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_99[0], r0, r2\n\tadd\t@CPI1_100[0], r0, r3\n\tadd\t@CPI1_91[0], r0, r4\n\tadd\t73, r0, r6\n\tadd\t32, r0, r12\n\tadd\t4, r1, r5\n\tadd\tstack-[15], r0, r7\n\tadd\tstack-[16], r0, r8\n\tadd\tstack-[14], r0, r9\n\tadd\tstack-[13], r0, r10\n\tadd\tstack-[11], r0, r11\n\tjump\t@.BB1_67\n.BB1_86:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r6\n\tadd\t128, r6, r2\n\tst.1\t64, r2\n\tsload\tr1, r1\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tand!\t@CPI1_14[0], r1, r3\n\tadd\t@CPI1_15[0], r0, r3\n\tadd\tr3, r0, r4\n\tadd.eq\t0, r0, r4\n\tshr.s\t208, r1, r5\n\tand\t@CPI1_16[0], r5, r5\n\tor\tr4, r5, r4\n\tadd\t64, r6, r5\n\tst.1\tr5, r4\n\tsub.s!\t0, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\tr3, r0, r2\n\tshr.s\t232, r1, r3\n\tand\t@CPI1_16[0], r3, r3\n\tor\tr2, r3, r2\n\tadd\t96, r6, r3\n\tst.1\tr3, r2\n\tand\t@CPI1_10[0], r1, r2\n\tadd\tr6, r0, stack-[12]\n\tst.1.inc\tr6, r2, r2\n\tshr.s\t160, r1, r1\n\tand!\t@CPI1_13[0], r1, r1\n\tst.1\tr2, r1\n\tjump.ne\t@.BB1_491\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB1_492\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_11[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI1_11[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tand\t@CPI1_10[0], r2, r6\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI1_106[0], r0, r4\n\tadd\tstack-[18], r0, r5\n\tadd\tr0, r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r2\n\tadd\t@CPI1_107[0], r0, r1\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r4\n\tadd\t100, r4, r2\n\tadd\t128, r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[18], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tadd\tstack-[19], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tand\t@CPI1_10[0], r2, r2\n\tadd\t4, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r3\n\tadd\t132, r4, r2\n\tst.1\tr2, r3\n\tadd\t164, r4, r2\n\tadd\tr2, r0, stack-[17]\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\tr3, r0, stack-[18]\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB1_365\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[18], r0, r5\n\tadd\tstack-[17], r0, r6\n.BB1_681:\n\tadd\tr1, r6, r2\n\tadd\tr1, r4, r3\n\tld.1\tr3, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r5, r2\n\tjump.lt\t@.BB1_681\n\tsub!\tr1, r5, r1\n\tjump.le\t@.BB1_365\n\tadd\tstack-[18], r0, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tr1, r2, r1\n\tst.1\tr1, r0\n.BB1_365:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI1_31[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[19], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[19], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB1_40\n\tadd\tstack-[18], r0, r2\n\tadd\t31, r2, r2\n\tadd\tstack-[16], r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[17], r0, r3\n\tadd\tr3, r2, r2\n\tadd\tstack-[15], r0, r5\n\tsub\tr2, r5, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, stack[@returndatasize]\n\tand\t@CPI1_11[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_40\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r2\n\tjump.eq\t@.BB1_712\n\tadd\tr0, r0, r4\n.BB1_499:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_499\n.BB1_712:\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB1_501\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_501:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_104:\n\tsub.s\t67, r0, r1\n\tsub\tr1, r3, r13\n\tcontext.this\tr14\n\tadd\tr0, r0, r15\n\tadd\tr13, r0, stack-[14]\n\tadd\tr14, r0, stack-[13]\n.BB1_505:\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\tr13, r3, r4\n\tshl.s\t5, r15, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\tr1, r11, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI1_7[0], r0, r5\n\tsub!\tr1, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI1_7[0], r4, r4\n\tand\t@CPI1_7[0], r1, r7\n\tsub!\tr7, r4, r8\n\tadd.le\t0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.eq\t@.BB1_11\n\tadd\tr1, r11, r4\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_87[0], r1, r5\n\tjump.gt\t@.BB1_11\n\tsub\tr3, r1, r5\n\tadd\t32, r4, r3\n\tadd\t@CPI1_7[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tand\t@CPI1_7[0], r5, r5\n\tand\t@CPI1_7[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\t0, r0, r4\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd.ne\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB1_11\n\tptr.add\tr2, r3, r3\n\tld.1\t64, r2\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB1_710\n\tadd\tr0, r0, r5\n.BB1_373:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB1_373\n.BB1_710:\n\tand!\t31, r1, r5\n\tjump.eq\t@.BB1_375\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB1_375:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tld.1\t64, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r14, r4\n\tjump.ne\t@.BB1_506\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_508\n.BB1_506:\n\tsub\tr3, r2, r3\n\tadd\t@CPI1_11[0], r0, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI1_11[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI1_11[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr14, r0, r2\n\tadd\tr15, r0, stack-[18]\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r15\n\tadd\tstack-[13], r0, r14\n\tadd\tstack-[14], r0, r13\n\tadd\tstack-[15], r0, r12\n\tadd\tstack-[16], r0, r11\n\tadd\tstack-[17], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_11[0], r1, stack[@returndatasize]\n\tand\t@CPI1_11[0], r1, r3\n.BB1_508:\n\tsub.s!\t0, r3, r1\n\tadd\tr12, r0, r1\n\tjump.eq\t@.BB1_108\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tshr.s!\t5, r6, r5\n\tjump.eq\t@.BB1_711\n\tadd\tr0, r0, r7\n.BB1_511:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_511\n.BB1_711:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB1_108\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r3\n\tshl.s\t3, r6, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB1_108:\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_513\n\tld.1\t128, r2\n\tsub!\tr15, r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tadd\t160, r2, r2\n\tst.1\tr2, r1\n\tadd\t1, r15, r15\n\tsub!\tr15, r10, r1\n\tjump.lt\t@.BB1_505\n\tjump\t@.BB1_106\n.BB1_112:\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB1_515\n\tadd\t132, r0, r1\n\tadd\t@CPI1_77[0], r0, r2\n\tadd\t100, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tadd\t@CPI1_78[0], r0, r3\n\tadd\t68, r0, r4\n\tadd\tr4, r0, stack-[12]\n\tadd\t50, r0, r5\n\tadd\t36, r0, r4\n\tadd\tr4, r0, stack-[13]\n\tadd\t32, r0, r6\n\tadd\t@CPI1_19[0], r0, r7\n\tld.1\t64, r8\n\tadd\tr8, r0, r4\n\tjump\t@.BB1_69\n.BB1_453:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI1_120[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI1_121[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_120:\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tsload\tr2, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tsub.s!\t0, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tshr.s\t160, r2, r4\n\tand\t@CPI1_13[0], r4, r4\n\tadd\t32, r1, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_14[0], r2, r4\n\tadd\t@CPI1_15[0], r0, r4\n\tadd\tr4, r0, r5\n\tadd.eq\t0, r0, r5\n\tshr.s\t208, r2, r6\n\tand\t@CPI1_16[0], r6, r6\n\tor\tr5, r6, r5\n\tand\t@CPI1_10[0], r2, r6\n\tst.1\tr1, r6\n\tadd\t64, r1, r6\n\tadd\tr6, r0, stack-[16]\n\tst.1\tr6, r5\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.ne\tr4, r0, r3\n\tshr.s\t232, r2, r2\n\tand\t@CPI1_16[0], r2, r2\n\tor\tr3, r2, r2\n\tadd\t96, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tsload\tr1, r2\n\tst.1.inc\tr3, r2, r4\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr3, r0, stack-[11]\n\tadd\t64, r3, r2\n\tshr.s\t160, r1, r3\n\tst.1\tr2, r3\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI1_15[0], r0, r2\n\tand!\t@CPI1_29[0], r1, r3\n\tadd\tr2, r0, r3\n\tadd.eq\t0, r0, r3\n\tand\t@CPI1_16[0], r1, r1\n\tor\tr3, r1, r1\n\tadd\tstack-[19], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[16], r0, r4\n\tld.1\tr4, r4\n\tld.1\t64, r6\n\tadd\t36, r6, r5\n\tst.1\tr5, r1\n\tadd\t@CPI1_30[0], r0, r1\n\tst.1\tr6, r1\n\tand!\t@CPI1_29[0], r4, r1\n\tadd\tr2, r0, r1\n\tadd.eq\t0, r0, r1\n\tand\t@CPI1_16[0], r4, r2\n\tor\tr1, r2, r1\n\tadd\tr6, r0, stack-[15]\n\tadd\t4, r6, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_31[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[16]\n\tst.2\t0, r1\n\tand\t@CPI1_10[0], r3, r1\n\tadd\tr1, r0, stack-[19]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[19], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_521\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_123\n.BB1_466:\n\tadd\t@CPI1_45[0], r0, r2\n\tadd\t@CPI1_46[0], r0, r3\n\tadd\t55, r0, r4\n\tadd\t32, r0, r6\n\tadd\t@CPI1_19[0], r0, r12\n\tld.1\t64, r5\n\tadd\tr5, r0, r1\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[16], r0, r8\n\tadd\tstack-[14], r0, r9\n\tadd\tstack-[13], r0, r10\n\tadd\tstack-[11], r0, r11\n\tjump\t@.BB1_67\n.BB1_93:\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tsub\tr1, r2, r2\n\tadd\tstack-[5], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB1_96\n\tadd\t132, r0, r11\n\tadd\t@CPI1_98[0], r0, r2\n\tadd\t100, r0, r10\n\tadd\t@CPI1_91[0], r0, r3\n\tadd\t68, r0, r9\n\tadd\t64, r0, r4\n\tadd\t36, r0, r8\n\tadd\t32, r0, r6\n\tadd\t@CPI1_19[0], r0, r12\n\tld.1\t64, r5\n\tadd\tr5, r0, r1\n\tadd\tstack-[18], r0, r7\n\tjump\t@.BB1_67\n.BB1_491:\n\tld.1\t64, r5\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t164, r0, r1\n\tadd\t@CPI1_102[0], r0, r2\n\tadd\t132, r0, r3\n\tadd\t@CPI1_103[0], r0, r4\n\tadd\t100, r0, r6\n\tadd\t@CPI1_104[0], r0, r7\n\tadd\t68, r0, r8\n\tadd\t66, r0, r9\n\tadd\t36, r0, r10\n\tadd\t32, r0, r11\n\tadd\t4, r5, r12\n\tjump\t@.BB1_68\n.BB1_513:\n\tld.1\tr1, r2\n\tsub.s!\t67, r2, r2\n\tjump.le\t@.BB1_11\n\tadd\t4, r1, r2\n\tld.1\tr2, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_11\n\tadd\t36, r1, r1\n\tld.1\tr1, r3\n\tsub.s!\t@CPI1_87[0], r3, r4\n\tjump.gt\t@.BB1_11\n\tadd\tr2, r1, r6\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r2\n\tadd\t@CPI1_7[0], r0, r3\n\tsub!\tr6, r2, r4\n\tadd\t0, r0, r4\n\tadd.le\tr3, r0, r4\n\tand\t@CPI1_7[0], r2, r2\n\tand\t@CPI1_7[0], r6, r5\n\tsub!\tr5, r2, r7\n\tadd.le\t0, r0, r3\n\txor\tr5, r2, r2\n\tsub.s!\t@CPI1_7[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB1_11\n\tld.1.inc\tr1, r4, r5\n\tsub.s!\t@CPI1_88[0], r4, r1\n\tjump.ge\t@.BB1_11\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r1\n\tand\tr2, r1, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r7\n\tjump.lt\t@.BB1_11\n\tsub.s!\t@CPI1_88[0], r2, r7\n\tjump.ge\t@.BB1_11\n\tst.1\t64, r2\n\tst.1.inc\tr3, r4, r2\n\tadd\tr5, r4, r7\n\tsub!\tr7, r6, r6\n\tjump.gt\t@.BB1_11\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_345\n\tadd\tr0, r0, r6\n.BB1_683:\n\tadd\tr6, r2, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB1_683\n\tsub!\tr6, r4, r5\n\tjump.le\t@.BB1_345\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n.BB1_345:\n\tld.1\t64, r4\n\tadd\t@CPI1_19[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t4, r4, r5\n\tadd\t32, r0, r6\n\tst.1\tr5, r6\n\tld.1\tr3, r3\n\tadd\t36, r4, r5\n\tst.1\tr5, r3\n\tadd\t68, r4, r4\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB1_368\n\tadd\tr0, r0, r5\n.BB1_684:\n\tadd\tr5, r4, r6\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB1_684\n\tsub!\tr5, r3, r2\n\tjump.le\t@.BB1_368\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n.BB1_368:\n\tadd\t31, r3, r2\n\tand\tr2, r1, r1\n\tadd\tr4, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_492:\n\tadd\t132, r0, r1\n\tadd\t@CPI1_105[0], r0, r2\n\tadd\t100, r0, r3\n\tadd\t@CPI1_104[0], r0, r4\n\tadd\t68, r0, r6\n\tadd\t61, r0, r7\n\tadd\t36, r0, r8\n\tadd\t32, r0, r9\n\tadd\t4, r0, r10\n\tadd\t@CPI1_19[0], r0, r11\n\tld.1\t64, r12\n\tadd\tr12, r0, r5\n.BB1_68:\n\tst.1\tr12, r11\n\tadd\tr5, r10, r10\n\tst.1\tr10, r9\n\tadd\tr5, r8, r8\n\tst.1\tr8, r7\n\tadd\tr5, r6, r6\n\tst.1\tr6, r4\n\tadd\tr5, r3, r3\n\tst.1\tr3, r2\n\tadd\tr5, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_195:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[18], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t100, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI1_74[0], r1, r1\n\tor\t@CPI1_75[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB1_234\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB1_636:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB1_636\n.BB1_234:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB1_235:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB1_235\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tld.1\t64, r4\n\tcontext.gas_left\tr3\n\tadd\tstack-[19], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB1_638\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_640\n.BB1_139:\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_47[0], r0, r4\n\tadd\t44, r0, r3\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r5\n\tsub!\tr1, r5, r1\n\tjump.ge\t@.BB1_72\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_48[0], r0, r4\n\tadd\t@CPI1_49[0], r0, r3\n\tadd\t51, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_154\n.BB1_71:\n\tld.1\t64, r1\n\tadd\t100, r1, r5\n\tst.1\tr5, r4\n\tadd\t68, r1, r4\n\tst.1\tr4, r3\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_72:\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tadd\t68, r2, r1\n\tadd\t@CPI1_64[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t132, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_515:\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_516\n\tsstore\tr1, r0\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[19]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_602\n\tadd\tstack-[18], r0, r1\n\tand\t@CPI1_10[0], r1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tadd\t68, r2, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r4\n\tsub\tr1, r4, r1\n\tst.1.inc\tr4, r1, r3\n\tadd\t100, r2, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI1_74[0], r1, r1\n\tor\t@CPI1_75[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB1_237\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB1_637:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB1_637\n.BB1_237:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB1_238:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB1_238\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tld.1\t64, r4\n\tcontext.gas_left\tr3\n\tadd\tstack-[19], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB1_645\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_647\n.BB1_470:\n\tld.1\t64, r2\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI1_20[0], r0, r1\n\tadd\t@CPI1_21[0], r0, r3\n\tadd\t@CPI1_22[0], r0, r4\n\tadd\t86, r0, r5\n\tadd\t32, r0, r6\n\tadd\t4, r2, r7\n\tadd\tstack-[17], r0, r8\n\tadd\tstack-[14], r0, r9\n\tadd\tstack-[13], r0, r10\n\tadd\tstack-[12], r0, r11\n\tadd\tstack-[9], r0, r12\n\tjump\t@.BB1_66\n.BB1_96:\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB1_504\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[10], r0, r3\n\tld.1\tr3, r3\n\tsub\tr3, r2, r7\n\tadd\t132, r0, r11\n\tadd\t@CPI1_92[0], r0, r2\n\tadd\t100, r0, r10\n\tadd\t@CPI1_91[0], r0, r3\n\tadd\t68, r0, r9\n\tadd\t64, r0, r4\n\tadd\t36, r0, r8\n\tadd\t32, r0, r6\n\tadd\t@CPI1_19[0], r0, r12\n\tld.1\t64, r5\n\tld\tr1, r1\n\tsub!\tr7, r1, r1\n\tadd\tr5, r0, r1\n\tadd\tstack-[18], r0, r7\n\tjump.gt\t@.BB1_67\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r5, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t192, r5, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_206\n\tadd\t100, r2, r1\n\tadd\t@CPI1_96[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI1_97[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t62, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t132, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_638:\n\tadd\tr2, r1, r1\n\tsub\tr1, r4, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_11[0], r1, stack[@returndatasize]\n\tand\t@CPI1_11[0], r1, r3\n.BB1_640:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB1_240\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB1_701\n\tadd\tr0, r0, r7\n.BB1_643:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_643\n.BB1_701:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB1_240\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB1_240:\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB1_652\n.BB1_656:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI1_114[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t2, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_516:\n\tld.1\t64, r4\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t164, r0, r1\n\tadd\t@CPI1_71[0], r0, r2\n\tadd\t@CPI1_72[0], r0, r3\n\tadd\t@CPI1_73[0], r0, r5\n\tadd\t77, r0, r6\n\tadd\t32, r0, r7\n\tadd\t4, r4, r8\n\tadd\tstack-[16], r0, r9\n\tadd\tr9, r0, stack-[18]\n.BB1_69:\n\tst.1\tr8, r7\n\tadd\tstack-[18], r0, r7\n\tadd\tr4, r7, r7\n\tst.1\tr7, r6\n\tadd\tstack-[13], r0, r6\n\tadd\tr4, r6, r6\n\tst.1\tr6, r5\n\tadd\tstack-[12], r0, r5\n\tadd\tr4, r5, r5\n\tst.1\tr5, r3\n\tadd\tstack-[11], r0, r3\n\tadd\tr4, r3, r3\n\tst.1\tr3, r2\n\tadd\tr4, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_652:\n\tld.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB1_244\n\tsub.s!\t31, r2, r2\n\tjump.le\t@.BB1_11\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_656\n.BB1_244:\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI1_113[0], r0, r4\n\tadd\tstack-[18], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_11\n.BB1_35:\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, r3\n\tadd\tstack-[17], r0, r15\n\tjump\t@.BB1_36\n.BB1_471:\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[9], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t36, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t384, r3, r4\n\tadd\t384, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_697\n\tadd\tr0, r0, r6\n.BB1_473:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_473\n.BB1_697:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_475\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[10], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_475:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_476\n.BB1_75:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t383, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tadd\tr3, r0, stack-[10]\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tsub.s!\t@CPI1_24[0], r3, r3\n\tjump.gt\t@.BB1_11\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_10[0], r2, r2\n\tjump.gt\t@.BB1_11\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_10[0], r2, r2\n\tjump.gt\t@.BB1_11\n\tadd\t128, r1, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_122[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t160, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI1_29[0], r2, r3\n\tadd\t@CPI1_15[0], r0, r3\n\tadd.eq\t0, r0, r3\n\tand\t@CPI1_16[0], r2, r4\n\tor\tr3, r4, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB1_11\n\tadd\t192, r1, r3\n\tld.1\tr3, r3\n\tand!\t@CPI1_29[0], r3, r4\n\tadd\t@CPI1_15[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_16[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB1_11\n\tadd\t224, r1, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI1_25[0], r4, r4\n\tjump.gt\t@.BB1_11\n\tadd\t320, r1, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI1_25[0], r4, r4\n\tjump.gt\t@.BB1_11\n\tadd\t352, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_25[0], r1, r1\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[11], r0, r4\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t96, r4, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\tr1, r0\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI1_28[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tand\t@CPI1_26[0], r2, r2\n\tadd\tstack-[7], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tand\t@CPI1_27[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tand\t@CPI1_123[0], r2, r2\n\tadd\tstack-[8], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t208, r3, r3\n\tand\t@CPI1_124[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tand\t@CPI1_125[0], r2, r2\n\tadd\tstack-[9], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t232, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI1_11[0], r0, r1\n\tld.1\t64, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI1_106[0], r0, r4\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[17], r0, r5\n\tadd\tr0, r0, r6\n\tadd\tstack-[18], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_482\n.BB1_77:\n\tadd\t32, r0, r1\n\tadd\t@CPI1_127[0], r0, r15\n\tld.1\t64, r2\n\tadd\tr2, r0, r3\n\tjump\t@.BB1_36\n.BB1_504:\n\tld.1\t64, r1\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_89[0], r0, r2\n\tadd\t@CPI1_90[0], r0, r3\n\tadd\t@CPI1_91[0], r0, r4\n\tadd\t4, r1, r5\n\tadd\tstack-[15], r0, r7\n\tadd\tstack-[16], r0, r8\n\tadd\tr8, r0, r6\n\tadd\tstack-[14], r0, r9\n\tadd\tstack-[13], r0, r10\n\tadd\tstack-[11], r0, r11\n\tadd\tstack-[7], r0, r12\n\tjump\t@.BB1_67\n.BB1_476:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_713\n\tadd\tr0, r0, r3\n.BB1_478:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_478\n.BB1_713:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_480\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_480:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_521:\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[15], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\t96, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_696\n\tadd\tr0, r0, r6\n.BB1_523:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_523\n.BB1_696:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_525\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[16], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_525:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_526\n.BB1_123:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t95, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI1_33[0], r3, r4\n\tadd\t@CPI1_34[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_35[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB1_11\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_36[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB1_11\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[19], r0, r3\n\tsub\tr3, r2, r2\n\tadd\tstack-[14], r0, r3\n\tmul\tr2, r3, r2, r3\n\tsub.s\t1, r0, r4\n\tadd\tstack-[17], r0, r5\n\tsub!\tr5, r4, r3\n\tadd\tr5, r0, r3\n\tadd.eq\t0, r0, r3\n\tand\t@CPI1_10[0], r2, r2\n\tadd\tr2, r0, r15\n\tmul\tr3, r2, r5, r2\n\tdiv.s\t@CPI1_25[0], r2, r3, r6\n\tmul\t@CPI1_25[0], r3, r7, r8\n\tshl.s\t128, r6, r6\n\tshr.s\t128, r5, r8\n\tor\tr6, r8, r6\n\tsub!\tr7, r6, r6\n\tadd\t0, r0, r6\n\tadd.gt\tr4, r0, r6\n\tadd\tr3, r6, r3\n\tshl.s\t128, r2, r2\n\tor\tr2, r8, r2\n\tand\t@CPI1_25[0], r3, r3\n\tadd\tr2, r3, r7\n\tdiv.s\t@CPI1_25[0], r7, r2, r3\n\tadd\tstack-[15], r0, r8\n\tsub!\tr8, r1, r6\n\tadd.gt\tr8, r0, r1\n\tadd\tstack-[18], r0, r6\n\tsub\tr1, r6, r1\n\tand\t@CPI1_25[0], r5, r8\n\tshl.s\t128, r1, r5\n\tadd\tstack-[16], r0, r1\n\tand\t@CPI1_10[0], r1, r6\n\tsub.s!\t@CPI1_37[0], r7, r1\n\tjump.gt\t@.BB1_210\n\tshl.s\t128, r3, r1\n\tor\tr1, r8, r1\n\tmul\t@CPI1_25[0], r2, r3, r9\n\tsub!\tr3, r1, r1\n\tjump.le\t@.BB1_211\n.BB1_210:\n\tsub.s\t1, r2, r2\n.BB1_211:\n\tsub\tr5, r6, r3\n\tadd\tstack-[17], r0, r1\n\tmul\tr1, r15, r1, r9\n\tshl.s\t128, r7, r7\n\tor\tr7, r8, r7\n\tand\t@CPI1_25[0], r2, r2\n\tadd\tr7, r2, r2\n\tsub!\tr2, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\tr4, r0, r7\n\tsub\tr2, r1, r2\n\tadd!\tr2, r7, r2\n\tjump.ne\t@.BB1_252\n\tsub!\tr5, r6, r2\n\tjump.eq\t@.BB1_11\n\tdiv\tr1, r3, r1, r2\n\tjump\t@.BB1_216\n.BB1_129:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_26[0], r2, r3\n\tadd\t@CPI1_27[0], r2, r2\n\tand\t@CPI1_27[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\t1, r1, r2\n\tsload\tr2, r1\n\tadd\t@CPI1_28[0], r1, r1\n\tadd\tr2, r0, stack-[7]\n\tsstore\tr2, r1\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI1_15[0], r0, r2\n\tand!\t@CPI1_29[0], r1, r3\n\tadd\tr2, r0, r3\n\tadd.eq\t0, r0, r3\n\tand\t@CPI1_16[0], r1, r1\n\tor\tr3, r1, r1\n\tadd\tstack-[18], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[5], r0, r4\n\tld.1\tr4, r4\n\tld.1\t64, r6\n\tadd\t36, r6, r5\n\tst.1\tr5, r1\n\tadd\t@CPI1_30[0], r0, r1\n\tst.1\tr6, r1\n\tand!\t@CPI1_29[0], r4, r1\n\tadd\tr2, r0, r1\n\tadd.eq\t0, r0, r1\n\tand\t@CPI1_16[0], r4, r2\n\tor\tr1, r2, r1\n\tadd\tr6, r0, stack-[8]\n\tadd\t4, r6, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_31[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tst.2\t0, r1\n\tand\t@CPI1_10[0], r3, r1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_534\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_133\n.BB1_645:\n\tadd\tr2, r1, r1\n\tsub\tr1, r4, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_11[0], r1, stack[@returndatasize]\n\tand\t@CPI1_11[0], r1, r3\n.BB1_647:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB1_241\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB1_700\n\tadd\tr0, r0, r7\n.BB1_650:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_650\n.BB1_700:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB1_241\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB1_241:\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_656\n\tld.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB1_245\n\tsub.s!\t31, r2, r2\n\tjump.le\t@.BB1_11\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_656\n.BB1_245:\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI1_76[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB1_35\n\tjump\t@.BB1_11\n.BB1_526:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_709\n\tadd\tr0, r0, r3\n.BB1_528:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_528\n.BB1_709:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_530\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_530:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_154:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_50[0], r0, r4\n\tadd\t@CPI1_51[0], r0, r3\n\tadd\t49, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r1\n\tjump.ge\t@.BB1_71\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t@CPI1_54[0], r0, r2\n\tst.1\tr3, r2\n\tadd\tr3, r0, stack-[12]\n\tadd\t4, r3, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_626\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_230\n.BB1_206:\n\tcontext.this\tr1\n\tcontext.caller\tr3\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t68, r2, r4\n\tst.1\tr4, r1\n\tand\t@CPI1_10[0], r3, r1\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tadd\t100, r2, r1\n\tadd\tstack-[8], r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r4\n\tsub\tr1, r4, r1\n\tst.1.inc\tr4, r1, r3\n\tadd\t132, r2, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI1_74[0], r1, r1\n\tor\t@CPI1_93[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB1_246\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB1_657:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB1_657\n.BB1_246:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB1_247:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB1_247\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tld.1\t64, r4\n\tcontext.gas_left\tr3\n\tadd\tstack-[18], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB1_658\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_660\n.BB1_534:\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\t96, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_695\n\tadd\tr0, r0, r6\n.BB1_536:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_536\n.BB1_695:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_538\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[9], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_538:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_539\n.BB1_133:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t95, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI1_33[0], r3, r4\n\tadd\t@CPI1_34[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_35[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB1_11\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_36[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI1_10[0], r3, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB1_11\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[18], r0, r3\n\tsub\tr3, r1, r1\n\tadd\tstack-[13], r0, r3\n\tmul\tr1, r3, r1, r3\n\tsub.s\t1, r0, r5\n\tadd\tstack-[9], r0, r4\n\tsub!\tr4, r5, r3\n\tadd\tr4, r0, r3\n\tadd.eq\t0, r0, r3\n\tand\t@CPI1_10[0], r1, r7\n\tmul\tr3, r7, r8, r3\n\tdiv.s\t@CPI1_25[0], r3, r4, r9\n\tmul\t@CPI1_25[0], r4, r10, r11\n\tshl.s\t128, r9, r9\n\tshr.s\t128, r8, r11\n\tor\tr9, r11, r9\n\tsub!\tr10, r9, r9\n\tadd\t0, r0, r9\n\tadd.gt\tr5, r0, r9\n\tadd\tr4, r9, r4\n\tshl.s\t128, r3, r3\n\tor\tr3, r11, r3\n\tand\t@CPI1_25[0], r4, r4\n\tadd\tr3, r4, r9\n\tdiv.s\t@CPI1_25[0], r9, r3, r4\n\tadd\tstack-[8], r0, r11\n\tsub!\tr11, r2, r10\n\tadd.gt\tr11, r0, r2\n\tadd\tstack-[15], r0, r10\n\tsub\tr2, r10, r2\n\tand\t@CPI1_25[0], r8, r10\n\tshl.s\t128, r2, r8\n\tsub.s!\t@CPI1_37[0], r9, r2\n\tjump.gt\t@.BB1_214\n\tshl.s\t128, r4, r2\n\tor\tr2, r10, r2\n\tmul\t@CPI1_25[0], r3, r4, r11\n\tsub!\tr4, r2, r2\n\tjump.le\t@.BB1_215\n.BB1_214:\n\tsub.s\t1, r3, r3\n.BB1_215:\n\tsub\tr8, r6, r4\n\tadd\tstack-[9], r0, r2\n\tmul\tr2, r7, r2, r11\n\tshl.s\t128, r9, r9\n\tor\tr9, r10, r9\n\tand\t@CPI1_25[0], r3, r3\n\tadd\tr9, r3, r3\n\tsub!\tr3, r2, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tsub\tr3, r2, r3\n\tadd!\tr3, r9, r3\n\tjump.ne\t@.BB1_253\n\tsub!\tr8, r6, r3\n\tjump.eq\t@.BB1_11\n\tdiv\tr2, r4, r3, r2\n\tadd\tr3, r0, stack-[18]\n\tjump\t@.BB1_217\n.BB1_658:\n\tadd\tr2, r1, r1\n\tsub\tr1, r4, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_11[0], r1, stack[@returndatasize]\n\tand\t@CPI1_11[0], r1, r3\n.BB1_660:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB1_249\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB1_699\n\tadd\tr0, r0, r7\n.BB1_663:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_663\n.BB1_699:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB1_249\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB1_249:\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB1_665\n.BB1_667:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI1_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t3, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_665:\n\tld.1.inc\tr1, r2, r1\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB1_251\n\tsub.s!\t31, r2, r2\n\tjump.le\t@.BB1_11\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_667\n.BB1_251:\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[12], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[9], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[10], r0, r5\n\tld.1\tr5, r5\n\tld.1\t64, r6\n\tadd\t96, r6, r7\n\tadd\tstack-[8], r0, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r7\n\tst.1\tr7, r5\n\tand\t@CPI1_10[0], r4, r4\n\tadd\t64, r6, r5\n\tst.1\tr5, r4\n\tst.1\tr6, r3\n\tld.1\t64, r3\n\tsub\tr6, r3, r4\n\tadd\t@CPI1_11[0], r0, r5\n\tsub.s!\t@CPI1_11[0], r3, r6\n\tadd.ge\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t128, r4, r4\n\tsub.s!\t@CPI1_11[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_11[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t192, r4, r4\n\tor\tr3, r4, r3\n\tand\t@CPI1_10[0], r2, r5\n\tand\t@CPI1_10[0], r1, r6\n\tor\t@CPI1_23[0], r3, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_94[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB1_40\n\tjump\t@.BB1_11\n.BB1_252:\n\tsub!\tr3, r2, r5\n\tjump.le\t@.BB1_11\n\tdiv\tr15, r3, r6, r5\n\tadd\tstack-[17], r0, r6\n\tdiv\tr6, r3, r7, r6\n\tsub.s!\t@CPI1_25[0], r3, r7\n\tjump.gt\t@.BB1_258\n\tmul\tr5, r6, r4, r5\n\tdiv\tr4, r3, r5, r4\n\tjump\t@.BB1_268\n.BB1_539:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_708\n\tadd\tr0, r0, r3\n.BB1_541:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_541\n.BB1_708:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_543\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_543:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_258:\n\tmul\tr5, r6, r7, r5\n\tsub!\tr3, r5, r6\n\tjump.le\t@.BB1_268\n\tsub.s!\t@CPI1_38[0], r3, r4\n\tadd\t192, r0, r4\n\tadd.lt\t128, r0, r4\n\tshr\tr3, r4, r4\n\tsub.s!\t@CPI1_38[0], r3, r6\n\tadd\t64, r0, r6\n\tadd.lt\t128, r0, r6\n\tsub.s\t32, r6, r8\n\tsub.s!\t@CPI1_36[0], r4, r9\n\tadd.ge\tr8, r0, r6\n\tshr.s\t32, r4, r8\n\tsub.s!\t@CPI1_36[0], r4, r9\n\tadd.ge\tr8, r0, r4\n\tsub.s\t16, r6, r8\n\tsub.s!\t@CPI1_39[0], r4, r9\n\tadd.ge\tr8, r0, r6\n\tshr.s\t16, r4, r8\n\tsub.s!\t@CPI1_39[0], r4, r9\n\tadd.ge\tr8, r0, r4\n\tsub.s\t8, r6, r8\n\tsub.s!\t256, r4, r9\n\tadd.ge\tr8, r0, r6\n\tshr.s\t8, r4, r8\n\tadd.ge\tr8, r0, r4\n\tshr.s\t4, r4, r8\n\tsub.s!\t16, r4, r9\n\tadd.lt\tr4, r0, r8\n\tshr.s\t2, r8, r9\n\tsub.s!\t4, r8, r10\n\tadd.lt\tr8, r0, r9\n\tsub.s\t2, r0, r10\n\tsub\t0, r9, r11\n\tsub.s!\t2, r9, r9\n\tadd\tr10, r0, r9\n\tadd.lt\tr11, r0, r9\n\tsub.s\t4, r6, r10\n\tsub.s!\t16, r4, r4\n\tadd\tr10, r0, r4\n\tadd.lt\tr6, r0, r4\n\tsub.s\t2, r4, r6\n\tsub.s!\t4, r8, r8\n\tadd.ge\tr6, r0, r4\n\tadd\tr9, r4, r4\n\tand\t255, r4, r6\n\tshl\tr5, r6, r5\n\tsub.s\t1, r0, r6\n\txor\tr4, r6, r6\n\tand\t255, r6, r6\n\tshr.s\t1, r7, r8\n\tshr\tr8, r6, r6\n\tor\tr5, r6, r9\n\tshl\tr3, r4, r5\n\tshr.s\t128, r5, r6\n\tdiv\tr9, r6, r11, r12\n\tshl\tr7, r4, r8\n\tshr.s\t128, r8, r10\n\tand\t@CPI1_25[0], r5, r7\n\tjump\t@.BB1_260\n.BB1_262:\n\tadd\tr12, r6, r12\n\tsub.s\t1, r11, r11\n\tsub.s!\t@CPI1_25[0], r12, r13\n\tjump.ge\t@.BB1_263\n.BB1_260:\n\tsub.s!\t@CPI1_40[0], r11, r13\n\tjump.gt\t@.BB1_262\n\tmul\tr11, r7, r13, r14\n\tshl.s\t128, r12, r14\n\tor\tr14, r10, r14\n\tsub!\tr13, r14, r13\n\tjump.gt\t@.BB1_262\n.BB1_263:\n\tand\t@CPI1_25[0], r11, r11\n\tmul\tr11, r5, r11, r12\n\tshl.s\t128, r9, r9\n\tor\tr9, r10, r9\n\tsub\tr9, r11, r9\n\tdiv\tr9, r6, r10, r11\n\tand\t@CPI1_25[0], r8, r8\n\tjump\t@.BB1_264\n.BB1_266:\n\tadd\tr11, r6, r11\n\tsub.s\t1, r10, r10\n\tsub.s!\t@CPI1_25[0], r11, r12\n\tjump.ge\t@.BB1_267\n.BB1_264:\n\tsub.s!\t@CPI1_40[0], r10, r12\n\tjump.gt\t@.BB1_266\n\tmul\tr10, r7, r12, r13\n\tshl.s\t128, r11, r13\n\tor\tr13, r8, r13\n\tsub!\tr12, r13, r12\n\tjump.gt\t@.BB1_266\n.BB1_267:\n\tand\t@CPI1_25[0], r10, r6\n\tmul\tr6, r5, r5, r6\n\tshl.s\t128, r9, r6\n\tor\tr6, r8, r6\n\tsub\tr6, r5, r5\n\tshr\tr5, r4, r4\n.BB1_268:\n\tsub\t0, r3, r5\n\tand!\tr3, r5, r5\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB1_669\n\tdiv\tr3, r5, r6, r3\n.BB1_669:\n\tmul\t3, r6, r3, r7\n\txor\t2, r3, r3\n\tmul\tr3, r6, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r3, r3, r7\n\tmul\tr3, r6, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r3, r3, r7\n\tmul\tr3, r6, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r3, r3, r7\n\tmul\tr3, r6, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r3, r3, r7\n\tmul\tr3, r6, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r3, r3, r7\n\tmul\tr3, r6, r6, r7\n\tsub\t2, r6, r6\n\tmul\tr6, r3, r3, r6\n\tsub.s!\t0, r5, r6\n\tjump.ne\t@.BB1_671\n\tsub.s\t1, r0, r5\n\tsub!\tr1, r4, r1\n\tadd\t0, r0, r1\n\tadd.lt\tr5, r0, r1\n\tadd\tr2, r1, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB1_672\n.BB1_671:\n\tsub.s\t1, r0, r6\n\tsub!\tr1, r4, r7\n\tadd.ge\t0, r0, r6\n\tadd\tr2, r6, r2\n\tsub\t0, r5, r6\n\tdiv\tr6, r5, r6, r7\n\tadd\t1, r6, r6\n\tmul\tr6, r2, r2, r6\n\tsub\tr1, r4, r1\n\tdiv\tr1, r5, r1, r4\n.BB1_672:\n\tor\tr1, r2, r1\n\tmul\tr3, r1, r1, r2\n.BB1_216:\n\tld.1\t64, r3\n\tst.1.inc\tr3, r1, r2\n\tadd\t64, r0, r1\n\tjump\t@.BB1_36\n.BB1_626:\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[12], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t36, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t384, r3, r4\n\tadd\t384, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_689\n\tadd\tr0, r0, r6\n.BB1_628:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_628\n.BB1_689:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_630\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_630:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_631\n.BB1_230:\n\tsub.s!\t383, r3, r1\n\tjump.le\t@.BB1_11\n\tld.1\t64, r4\n\tadd\t224, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t192, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t160, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t128, r4, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tld.1\tr2, r3\n\tadd\t96, r4, r5\n\tld.1\tr5, r6\n\tst.1\t64, r5\n\tand\t@CPI1_55[0], r1, r1\n\tst.1\tr2, r1\n\tand\t@CPI1_10[0], r6, r2\n\tadd\t32, r4, r5\n\tst.1\tr5, r2\n\tand\t@CPI1_10[0], r3, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB1_11\n\tld.1\t64, r5\n\tadd\t64, r5, r4\n\tst.1\tr4, r2\n\tadd\t32, r5, r2\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tr5, r0, stack-[11]\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r4\n\tadd\t160, r4, r2\n\tadd\t@CPI1_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[15], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t161, r4, r3\n\tst.1\tr3, r2\n\tadd\t181, r4, r2\n\tst.1\tr2, r1\n\tadd\t213, r4, r1\n\tadd\t@CPI1_57[0], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t245, r4, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr2, r0, stack-[17]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_550\n\tadd\tstack-[14], r0, r1\n\tand!\t@CPI1_25[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tjump.ne\t@.BB1_173\n\tadd\t132, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI1_61[0], r0, r1\n\tadd\t100, r0, r2\n\tadd\t@CPI1_62[0], r0, r3\n\tadd\t68, r0, r5\n\tadd\t36, r0, r6\n\tadd\t32, r0, r7\n\tadd\t4, r0, r8\n\tadd\t@CPI1_19[0], r0, r9\n\tld.1\t64, r10\n\tadd\tr10, r0, r4\n\tjump\t@.BB1_70\n.BB1_631:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_702\n\tadd\tr0, r0, r3\n.BB1_633:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_633\n.BB1_702:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_635\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_635:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_482:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t160, r1, r1\n\tjump.ne\t@.BB1_76\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[18], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[18], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[19], r0, r1\n\tadd\t68, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[16], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t100, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r3\n\tadd\t64, r3, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r1\n\tadd\t132, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r3, r3\n\tadd\tr3, r0, stack-[14]\n\tst.1\tr3, r1\n\tadd\t164, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[18], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB1_137\n\tadd\t@CPI1_63[0], r0, r4\n\tadd\t50, r0, r3\n\tld.1\t64, r2\n\tjump\t@.BB1_65\n.BB1_253:\n\tsub!\tr4, r3, r6\n\tjump.le\t@.BB1_11\n\tdiv\tr7, r4, r7, r6\n\tadd\tstack-[9], r0, r7\n\tdiv\tr7, r4, r8, r7\n\tsub.s!\t@CPI1_25[0], r4, r8\n\tjump.gt\t@.BB1_271\n\tmul\tr6, r7, r5, r6\n\tdiv\tr5, r4, r6, r5\n\tjump\t@.BB1_281\n.BB1_76:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB1_11\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack-[14], r0, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_87[0], r2, r3\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[14], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t31, r2, r3\n\tadd\tstack-[15], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB1_11\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_87[0], r1, r3\n\tjump.gt\t@.BB1_11\n\tshl.s\t5, r1, r3\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[3]\n\tadd\t32, r4, r4\n\tadd\tr4, r0, stack-[2]\n\tadd\tr4, r3, r3\n\tsub.s!\t@CPI1_87[0], r3, r4\n\tjump.gt\t@.BB1_11\n\tadd\tstack-[3], r0, r4\n\tsub!\tr3, r4, r4\n\tjump.lt\t@.BB1_11\n\tst.1\t64, r3\n\tadd\tstack-[3], r0, r3\n\tst.1\tr3, r1\n\tmul\t160, r1, r3, r4\n\tadd\t32, r2, r2\n\tadd\tr2, r3, r3\n\tadd\tstack-[15], r0, r4\n\tsub!\tr4, r3, r3\n\tjump.lt\t@.BB1_11\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB1_77\n\tadd\tstack-[3], r0, r3\n\tadd\tr0, r0, r4\n.BB1_678:\n\tadd\tstack-[15], r0, r5\n\tsub\tr5, r2, r5\n\tadd\t@CPI1_7[0], r0, r6\n\tsub.s!\t159, r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI1_7[0], r5, r5\n\tsub.s!\t0, r5, r8\n\tadd.ge\t0, r0, r6\n\tsub.s!\t@CPI1_7[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB1_11\n\tld.1\t64, r5\n\tsub.s!\t@CPI1_126[0], r5, r6\n\tjump.gt\t@.BB1_11\n\tadd\t160, r5, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r2, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI1_9[0], r6, r7\n\tjump.ge\t@.BB1_11\n\tst.1.inc\tr5, r6, r6\n\tadd\t32, r2, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI1_10[0], r7, r8\n\tjump.gt\t@.BB1_11\n\tst.1\tr6, r7\n\tadd\t64, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t64, r5, r7\n\tst.1\tr7, r6\n\tadd\t96, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t96, r5, r7\n\tst.1\tr7, r6\n\tadd\t128, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI1_10[0], r6, r7\n\tjump.gt\t@.BB1_11\n\tadd\t32, r3, r3\n\tadd\t128, r5, r7\n\tst.1\tr7, r6\n\tst.1\tr3, r5\n\tadd\t160, r2, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB1_678\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_77\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, stack-[14]\n.BB1_487:\n\tadd\tstack-[14], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB1_484\n\tadd\tstack-[19], r0, r1\n\tadd\t96, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_47[0], r0, r4\n\tadd\t44, r0, r3\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r5\n\tsub!\tr1, r5, r1\n\tjump.ge\t@.BB1_62\n\tadd\tstack-[19], r0, r5\n\tld.1.inc\tr5, r1, r4\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tr4, r0, stack-[15]\n\tld.1\tr4, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\t128, r5, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_48[0], r0, r4\n\tadd\t@CPI1_49[0], r0, r3\n\tadd\t51, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_61\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_50[0], r0, r4\n\tadd\t@CPI1_51[0], r0, r3\n\tadd\t49, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r1\n\tjump.ge\t@.BB1_61\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t@CPI1_54[0], r0, r2\n\tst.1\tr3, r2\n\tadd\tr3, r0, stack-[11]\n\tadd\t4, r3, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[19]\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_606\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_226\n.BB1_606:\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[11], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t36, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t384, r3, r4\n\tadd\t384, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB1_691\n\tadd\tr0, r0, r6\n.BB1_608:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[19], r0, r8\n\tadd\tr8, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB1_608\n.BB1_691:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB1_610\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tstack-[19], r0, r7\n\tadd\tr7, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB1_610:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_611\n.BB1_226:\n\tsub.s!\t383, r3, r1\n\tjump.le\t@.BB1_11\n\tld.1\t64, r4\n\tadd\t224, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t192, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t160, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t128, r4, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tld.1\tr2, r3\n\tadd\t96, r4, r5\n\tld.1\tr5, r6\n\tst.1\t64, r5\n\tand\t@CPI1_55[0], r1, r1\n\tst.1\tr2, r1\n\tand\t@CPI1_10[0], r6, r2\n\tadd\t32, r4, r5\n\tst.1\tr5, r2\n\tand\t@CPI1_10[0], r3, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB1_11\n\tld.1\t64, r5\n\tadd\t64, r5, r4\n\tst.1\tr4, r2\n\tadd\t32, r5, r2\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tr5, r0, stack-[19]\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r4\n\tadd\t160, r4, r2\n\tadd\t@CPI1_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[8], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t161, r4, r3\n\tst.1\tr3, r2\n\tadd\t181, r4, r2\n\tst.1\tr2, r1\n\tadd\t213, r4, r1\n\tadd\t@CPI1_57[0], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t245, r4, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_548\n\tadd\tstack-[11], r0, r1\n\tand!\t@CPI1_25[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tjump.eq\t@.BB1_551\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_26[0], r2, r3\n\tadd\t@CPI1_9[0], r2, r2\n\tand\t@CPI1_27[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\t@CPI1_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tand!\t@CPI1_29[0], r3, r1\n\tadd\t@CPI1_15[0], r0, r1\n\tadd\tr1, r0, r2\n\tadd.eq\t0, r0, r2\n\tand\t@CPI1_16[0], r3, r3\n\tor\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_30[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[6], r0, r3\n\tand!\t@CPI1_29[0], r3, r2\n\tadd.eq\t0, r0, r1\n\tand\t@CPI1_16[0], r3, r2\n\tor\tr1, r2, r1\n\tadd\tr4, r0, stack-[8]\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_31[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[19]\n\tst.2\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_563\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_178\n.BB1_563:\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[8], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\t96, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB1_694\n\tadd\tr0, r0, r6\n.BB1_565:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[19], r0, r8\n\tadd\tr8, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB1_565\n.BB1_694:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB1_567\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tstack-[19], r0, r7\n\tadd\tr7, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB1_567:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_568\n.BB1_178:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t95, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tadd\tstack-[10], r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tadd\tr3, r0, stack-[19]\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI1_33[0], r3, r4\n\tadd\t@CPI1_34[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_35[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB1_11\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_36[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI1_24[0], r1, r1\n\tjump.ge\t@.BB1_593\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[11], r0, r2\n\tshl.s\t160, r2, r2\n\tadd\tstack-[16], r0, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB1_192\n.BB1_593:\n\tadd\tstack-[19], r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t64, r2, r3\n\tadd\tstack-[15], r0, r1\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr3, r1\n\tadd\tstack-[16], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t@CPI1_24[0], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tadd\tstack-[16], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_25[0], r2, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tand\t@CPI1_41[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n.BB1_192:\n\tld.1\t64, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_60[0], r0, r4\n\tadd\tstack-[17], r0, r5\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB1_487\n\tjump\t@.BB1_77\n.BB1_271:\n\tmul\tr6, r7, r8, r6\n\tsub!\tr4, r6, r7\n\tjump.le\t@.BB1_281\n\tsub.s!\t@CPI1_38[0], r4, r5\n\tadd\t192, r0, r5\n\tadd.lt\t128, r0, r5\n\tshr\tr4, r5, r5\n\tsub.s!\t@CPI1_38[0], r4, r7\n\tadd\t64, r0, r7\n\tadd.lt\t128, r0, r7\n\tsub.s\t32, r7, r9\n\tsub.s!\t@CPI1_36[0], r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t32, r5, r9\n\tsub.s!\t@CPI1_36[0], r5, r10\n\tadd.ge\tr9, r0, r5\n\tsub.s\t16, r7, r9\n\tsub.s!\t@CPI1_39[0], r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t16, r5, r9\n\tsub.s!\t@CPI1_39[0], r5, r10\n\tadd.ge\tr9, r0, r5\n\tsub.s\t8, r7, r9\n\tsub.s!\t256, r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t8, r5, r9\n\tadd.ge\tr9, r0, r5\n\tshr.s\t4, r5, r9\n\tsub.s!\t16, r5, r10\n\tadd.lt\tr5, r0, r9\n\tshr.s\t2, r9, r10\n\tsub.s!\t4, r9, r11\n\tadd.lt\tr9, r0, r10\n\tsub.s\t2, r0, r11\n\tsub\t0, r10, r12\n\tsub.s!\t2, r10, r10\n\tadd\tr11, r0, r10\n\tadd.lt\tr12, r0, r10\n\tsub.s\t4, r7, r11\n\tsub.s!\t16, r5, r5\n\tadd\tr11, r0, r5\n\tadd.lt\tr7, r0, r5\n\tsub.s\t2, r5, r7\n\tsub.s!\t4, r9, r9\n\tadd.ge\tr7, r0, r5\n\tadd\tr10, r5, r5\n\tand\t255, r5, r7\n\tshl\tr6, r7, r6\n\tsub.s\t1, r0, r7\n\txor\tr5, r7, r7\n\tand\t255, r7, r7\n\tshr.s\t1, r8, r9\n\tshr\tr9, r7, r7\n\tor\tr6, r7, r10\n\tshl\tr4, r5, r6\n\tshr.s\t128, r6, r7\n\tdiv\tr10, r7, r12, r13\n\tshl\tr8, r5, r9\n\tshr.s\t128, r9, r11\n\tand\t@CPI1_25[0], r6, r8\n\tjump\t@.BB1_273\n.BB1_275:\n\tadd\tr13, r7, r13\n\tsub.s\t1, r12, r12\n\tsub.s!\t@CPI1_25[0], r13, r14\n\tjump.ge\t@.BB1_276\n.BB1_273:\n\tsub.s!\t@CPI1_40[0], r12, r14\n\tjump.gt\t@.BB1_275\n\tmul\tr12, r8, r14, r15\n\tshl.s\t128, r13, r15\n\tor\tr15, r11, r15\n\tsub!\tr14, r15, r14\n\tjump.gt\t@.BB1_275\n.BB1_276:\n\tand\t@CPI1_25[0], r12, r12\n\tmul\tr12, r6, r12, r13\n\tshl.s\t128, r10, r10\n\tor\tr10, r11, r10\n\tsub\tr10, r12, r10\n\tdiv\tr10, r7, r11, r12\n\tand\t@CPI1_25[0], r9, r9\n\tjump\t@.BB1_277\n.BB1_279:\n\tadd\tr12, r7, r12\n\tsub.s\t1, r11, r11\n\tsub.s!\t@CPI1_25[0], r12, r13\n\tjump.ge\t@.BB1_280\n.BB1_277:\n\tsub.s!\t@CPI1_40[0], r11, r13\n\tjump.gt\t@.BB1_279\n\tmul\tr11, r8, r13, r14\n\tshl.s\t128, r12, r14\n\tor\tr14, r9, r14\n\tsub!\tr13, r14, r13\n\tjump.gt\t@.BB1_279\n.BB1_280:\n\tand\t@CPI1_25[0], r11, r7\n\tmul\tr7, r6, r6, r7\n\tshl.s\t128, r10, r7\n\tor\tr7, r9, r7\n\tsub\tr7, r6, r6\n\tshr\tr6, r5, r5\n.BB1_281:\n\tsub\t0, r4, r6\n\tand!\tr4, r6, r6\n\tadd\tr0, r0, r7\n\tjump.eq\t@.BB1_674\n\tdiv\tr4, r6, r7, r4\n.BB1_674:\n\tmul\t3, r7, r4, r8\n\txor\t2, r4, r4\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r4, r4, r7\n\tsub.s!\t0, r6, r7\n\tjump.ne\t@.BB1_676\n\tsub.s\t1, r0, r6\n\tsub!\tr2, r5, r2\n\tadd\t0, r0, r2\n\tadd.lt\tr6, r0, r2\n\tadd\tr3, r2, r3\n\tadd\tr0, r0, r2\n\tjump\t@.BB1_677\n.BB1_676:\n\tsub.s\t1, r0, r7\n\tsub!\tr2, r5, r8\n\tadd.ge\t0, r0, r7\n\tadd\tr3, r7, r3\n\tsub\t0, r6, r7\n\tdiv\tr7, r6, r7, r8\n\tadd\t1, r7, r7\n\tmul\tr7, r3, r3, r7\n\tsub\tr2, r5, r2\n\tdiv\tr2, r6, r2, r5\n.BB1_677:\n\tor\tr2, r3, r2\n\tmul\tr4, r2, r3, r2\n\tadd\tr3, r0, stack-[18]\n.BB1_217:\n\tadd\tstack-[7], r0, r3\n\tsload\tr3, r2\n\tadd\tr2, r1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tand\t@CPI1_28[0], r2, r2\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r1\n\tadd\tstack-[18], r0, r3\n\tsub\tr1, r3, r1\n\tsstore\tr2, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[18], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI1_24[0], r2, r2\n\tjump.lt\t@.BB1_134\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_41[0], r2, r2\n\tsstore\tr1, r2\n.BB1_134:\n\tld.1\t64, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_42[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[17], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB1_40\n\tjump\t@.BB1_11\n.BB1_550:\n\tld.1\t64, r4\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI1_58[0], r0, r1\n\tadd\t132, r0, r2\n\tadd\t@CPI1_59[0], r0, r3\n\tadd\t100, r0, r5\n\tadd\t@CPI1_51[0], r0, r6\n\tadd\tr6, r0, stack-[18]\n\tadd\t68, r0, r6\n\tadd\t65, r0, r7\n\tadd\t36, r0, r8\n\tadd\t32, r0, r9\n\tadd\t4, r4, r10\n.BB1_70:\n\tst.1\tr10, r9\n\tadd\tr4, r8, r8\n\tst.1\tr8, r7\n\tadd\tr4, r6, r6\n\tadd\tstack-[18], r0, r7\n\tst.1\tr6, r7\n\tadd\tr4, r5, r5\n\tst.1\tr5, r3\n\tadd\tr4, r2, r2\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tadd\tr4, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_173:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_26[0], r2, r3\n\tadd\t@CPI1_9[0], r2, r2\n\tand\t@CPI1_27[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\t@CPI1_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r3\n\tand!\t@CPI1_29[0], r3, r1\n\tadd\t@CPI1_15[0], r0, r1\n\tadd\tr1, r0, r2\n\tadd.eq\t0, r0, r2\n\tand\t@CPI1_16[0], r3, r3\n\tor\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_30[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[13], r0, r3\n\tand!\t@CPI1_29[0], r3, r2\n\tadd.eq\t0, r0, r1\n\tand\t@CPI1_16[0], r3, r2\n\tor\tr1, r2, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_31[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_583\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_182\n.BB1_137:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\t@CPI1_17[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_18[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_47[0], r0, r4\n\tadd\t44, r0, r3\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r5\n\tsub!\tr1, r5, r1\n\tjump.ge\t@.BB1_65\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub\tr3, r1, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI1_11[0], r0, r2\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_11[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_48[0], r0, r4\n\tadd\t@CPI1_49[0], r0, r3\n\tadd\t51, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB1_152\n.BB1_64:\n\tld.1\t64, r1\n\tadd\t100, r1, r5\n\tst.1\tr5, r4\n\tadd\t68, r1, r4\n\tst.1\tr4, r3\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_65:\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tadd\t68, r2, r1\n\tadd\t@CPI1_64[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t132, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_583:\n\tadd\tstack-[18], r0, r5\n\tadd\tstack-[13], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\t96, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_692\n\tadd\tr0, r0, r6\n.BB1_585:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[18], r0, r8\n\tadd\tr8, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_585\n.BB1_692:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_587\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[18], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_587:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_588\n.BB1_182:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t95, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tadd\tr3, r0, stack-[18]\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI1_33[0], r3, r4\n\tadd\t@CPI1_34[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_35[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB1_11\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_36[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI1_24[0], r1, r1\n\tjump.ge\t@.BB1_599\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[14], r0, r2\n\tshl.s\t160, r2, r2\n\tadd\tstack-[17], r0, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB1_194\n.BB1_588:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_705\n\tadd\tr0, r0, r3\n.BB1_590:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_590\n.BB1_705:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_592\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_592:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_152:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\t@CPI1_50[0], r0, r4\n\tadd\t@CPI1_51[0], r0, r3\n\tadd\t49, r0, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI1_9[0], r1, r1\n\tjump.ge\t@.BB1_64\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI1_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t36, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_53[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t@CPI1_54[0], r0, r2\n\tst.1\tr3, r2\n\tadd\tr3, r0, stack-[13]\n\tadd\t4, r3, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[19]\n\tadd\t@CPI1_31[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_616\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_228\n.BB1_599:\n\tadd\tstack-[18], r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t64, r2, r3\n\tadd\tstack-[15], r0, r1\n\tadd\tr3, r0, stack-[14]\n\tst.1\tr3, r1\n\tadd\tstack-[17], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t@CPI1_24[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_25[0], r2, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tand\t@CPI1_41[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n.BB1_194:\n\tld.1\t64, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_60[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[19], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB1_40\n\tjump\t@.BB1_11\n.BB1_484:\n\tadd\t@CPI1_63[0], r0, r4\n\tadd\t50, r0, r3\n\tld.1\t64, r2\n.BB1_62:\n\tadd\t100, r2, r1\n\tst.1\tr1, r4\n\tadd\t68, r2, r1\n\tadd\t@CPI1_64[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t132, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_61:\n\tld.1\t64, r1\n\tadd\t100, r1, r5\n\tst.1\tr5, r4\n\tadd\t68, r1, r4\n\tst.1\tr4, r3\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t132, r1, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_611:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_704\n\tadd\tr0, r0, r3\n.BB1_613:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_613\n.BB1_704:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_615\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_615:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_548:\n\tld.1\t64, r4\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t164, r0, r1\n\tadd\t@CPI1_58[0], r0, r2\n\tadd\t132, r0, r3\n\tadd\t@CPI1_59[0], r0, r5\n\tadd\t100, r0, r6\n\tadd\t@CPI1_51[0], r0, r7\n\tadd\tr7, r0, stack-[12]\n\tadd\t68, r0, r7\n\tadd\t65, r0, r8\n\tadd\t36, r0, r9\n\tadd\tr9, r0, stack-[1]\n\tadd\t32, r0, r9\n\tadd\t4, r4, r10\n\tjump\t@.BB1_60\n.BB1_551:\n\tadd\t132, r0, r1\n\tadd\t@CPI1_61[0], r0, r2\n\tadd\t100, r0, r3\n\tadd\t@CPI1_62[0], r0, r5\n\tadd\t68, r0, r6\n\tadd\t36, r0, r7\n\tadd\t32, r0, r8\n\tadd\t@CPI1_19[0], r0, r9\n\tld.1\t64, r10\n\tadd\tr10, r0, r4\n.BB1_60:\n\tst.1\tr10, r9\n\tadd\tstack-[1], r0, r9\n\tadd\tr4, r9, r9\n\tst.1\tr9, r8\n\tadd\tr4, r7, r7\n\tadd\tstack-[12], r0, r8\n\tst.1\tr7, r8\n\tadd\tr4, r6, r6\n\tst.1\tr6, r5\n\tadd\tr4, r3, r3\n\tst.1\tr3, r2\n\tadd\tr4, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_568:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_707\n\tadd\tr0, r0, r3\n.BB1_570:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_570\n.BB1_707:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_572\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_572:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_616:\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[13], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t36, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t384, r3, r4\n\tadd\t384, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_690\n\tadd\tr0, r0, r6\n.BB1_618:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[19], r0, r8\n\tadd\tr8, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_618\n.BB1_690:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_620\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[19], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_620:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_621\n.BB1_228:\n\tsub.s!\t383, r3, r1\n\tjump.le\t@.BB1_11\n\tld.1\t64, r4\n\tadd\t224, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t192, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t160, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\t128, r4, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tld.1\tr2, r3\n\tadd\t96, r4, r5\n\tld.1\tr5, r6\n\tst.1\t64, r5\n\tand\t@CPI1_55[0], r1, r1\n\tst.1\tr2, r1\n\tand\t@CPI1_10[0], r6, r2\n\tadd\t32, r4, r5\n\tst.1\tr5, r2\n\tand\t@CPI1_10[0], r3, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB1_11\n\tld.1\t64, r5\n\tadd\t64, r5, r4\n\tst.1\tr4, r2\n\tadd\t32, r5, r2\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tr5, r0, stack-[14]\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r4\n\tadd\t160, r4, r2\n\tadd\t@CPI1_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[11], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t161, r4, r3\n\tst.1\tr3, r2\n\tadd\t181, r4, r2\n\tst.1\tr2, r1\n\tadd\t213, r4, r1\n\tadd\t@CPI1_57[0], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t245, r4, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tld\tr1, r1\n\tand\t@CPI1_10[0], r1, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB1_549\n\tadd\tstack-[13], r0, r1\n\tand!\t@CPI1_25[0], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tjump.ne\t@.BB1_172\n\tadd\t132, r0, r1\n\tadd\t@CPI1_61[0], r0, r2\n\tadd\t100, r0, r3\n\tadd\t@CPI1_62[0], r0, r4\n\tadd\t68, r0, r6\n\tadd\t36, r0, r7\n\tadd\t32, r0, r8\n\tadd\t4, r0, r9\n\tadd\t@CPI1_19[0], r0, r10\n\tld.1\t64, r11\n\tadd\tr11, r0, r5\n\tjump\t@.BB1_63\n.BB1_621:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_703\n\tadd\tr0, r0, r3\n.BB1_623:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_623\n.BB1_703:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_625\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_625:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_549:\n\tld.1\t64, r5\n\tadd\t@CPI1_19[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t164, r0, r1\n\tadd\t@CPI1_58[0], r0, r2\n\tadd\t132, r0, r3\n\tadd\t@CPI1_59[0], r0, r4\n\tadd\t100, r0, r6\n\tadd\t@CPI1_51[0], r0, r7\n\tadd\tr7, r0, stack-[12]\n\tadd\t68, r0, r7\n\tadd\t65, r0, r8\n\tadd\t36, r0, r9\n\tadd\t32, r0, r10\n\tadd\t4, r5, r11\n.BB1_63:\n\tst.1\tr11, r10\n\tadd\tr5, r9, r9\n\tst.1\tr9, r8\n\tadd\tr5, r7, r7\n\tadd\tstack-[12], r0, r8\n\tst.1\tr7, r8\n\tadd\tr5, r6, r6\n\tst.1\tr6, r4\n\tadd\tr5, r3, r3\n\tst.1\tr3, r2\n\tadd\tr5, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_172:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI1_26[0], r2, r3\n\tadd\t@CPI1_9[0], r2, r2\n\tand\t@CPI1_27[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r2\n\tadd\t@CPI1_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tand!\t@CPI1_29[0], r3, r1\n\tadd\t@CPI1_15[0], r0, r1\n\tadd\tr1, r0, r2\n\tadd.eq\t0, r0, r2\n\tand\t@CPI1_16[0], r3, r3\n\tor\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI1_30[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[19], r0, r3\n\tand!\t@CPI1_29[0], r3, r2\n\tadd.eq\t0, r0, r1\n\tand\t@CPI1_16[0], r3, r2\n\tor\tr1, r2, r1\n\tadd\tr4, r0, stack-[12]\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_31[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[19]\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_32[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB1_11\n\tcontext.gas_left\tr1\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB1_573\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_180\n.BB1_573:\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[12], r0, r2\n\tsub\tr2, r5, r2\n\tadd\t68, r2, r2\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI1_11[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_11[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\t96, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_693\n\tadd\tr0, r0, r6\n.BB1_575:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[19], r0, r8\n\tadd\tr8, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_575\n.BB1_693:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB1_577\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[19], r0, r7\n\tadd\tr7, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_577:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_578\n.BB1_180:\n\tadd\t@CPI1_7[0], r0, r1\n\tsub.s!\t95, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI1_7[0], r3, r4\n\tsub.s!\t0, r4, r5\n\tadd.ge\t0, r0, r1\n\tsub.s!\t@CPI1_7[0], r4, r4\n\tadd.eq\tr1, r0, r2\n\tadd\t31, r3, r1\n\tadd\tstack-[10], r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr3, r1, r3\n\tadd\tr3, r0, stack-[19]\n\tst.1\t64, r3\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB1_11\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI1_33[0], r3, r4\n\tadd\t@CPI1_34[0], r0, r4\n\tadd.eq\t0, r0, r4\n\tand\t@CPI1_35[0], r3, r5\n\tor\tr4, r5, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB1_11\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI1_9[0], r2, r2\n\tjump.ge\t@.BB1_11\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_36[0], r1, r1\n\tjump.ge\t@.BB1_11\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI1_24[0], r1, r1\n\tjump.ge\t@.BB1_596\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[13], r0, r2\n\tshl.s\t160, r2, r2\n\tadd\tstack-[14], r0, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB1_193\n.BB1_578:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB1_706\n\tadd\tr0, r0, r3\n.BB1_580:\n\tshl.s\t5, r3, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB1_580\n.BB1_706:\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB1_582\n\tshl.s\t3, r4, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB1_582:\n\tadd\t@CPI1_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_596:\n\tadd\tstack-[19], r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t64, r2, r3\n\tadd\tstack-[16], r0, r1\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr3, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t@CPI1_24[0], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI1_11[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_11\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_10[0], r2, r2\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI1_25[0], r2, r2\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tand\t@CPI1_41[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n.BB1_193:\n\tld.1\t64, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI1_11[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_11[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI1_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_60[0], r0, r4\n\tadd\tstack-[17], r0, r5\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB1_77\n\tjump\t@.BB1_11\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__delegatecall:\n.func_begin4:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB4_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_11:\n\t.cell 4294967295\nCPI0_1:\nCPI1_7:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_2:\nCPI1_10:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\nCPI1_128:\n\t.cell 53919893334301279589334030174039261372627300854368099475010929819648\nCPI1_0:\n\t.cell -36106818591136920424257432305800372128661966575722973723834872370942051352576\nCPI1_1:\n\t.cell -26979745485824115214368782854892221062991619395024453404181710637407208996864\nCPI1_2:\n\t.cell 3294232917\nCPI1_3:\n\t.cell 3646101614\nCPI1_4:\n\t.cell 3876298279\nCPI1_5:\n\t.cell 4073885851\nCPI1_6:\n\t.cell 4115245890\nCPI1_8:\n\t.cell 18446744073709551456\nCPI1_9:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI1_12:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI1_13:\n\t.cell 281474976710655\nCPI1_14:\n\t.cell 3450873173395281893717377931138512726225554486085193277581262111899648\nCPI1_15:\n\t.cell -8388608\nCPI1_16:\n\t.cell 8388607\nCPI1_17:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI1_18:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI1_19:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI1_20:\n\t.cell 50408844708329825842861318922208505653979956749680195883877564986100939751424\nCPI1_21:\n\t.cell 49946068812920418771460078192325698481179497283219259398580991070316360000870\nCPI1_22:\n\t.cell 38641673103035791731731533816156024167564805489701907623622897326854046883951\nCPI1_23:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI1_24:\n\t.cell 79228162514264337593543950335\nCPI1_25:\n\t.cell 340282366920938463463374607431768211455\nCPI1_26:\n\t.cell -411376139330300049037104964736419422560851250125375309904609281\nCPI1_27:\n\t.cell 411376139330300049037104964736419422560851250125375309904609280\nCPI1_28:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI1_29:\n\t.cell 8388608\nCPI1_30:\n\t.cell -41824748880902392865494476084877680108739408628887896529130235432255648432128\nCPI1_31:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI1_32:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI1_33:\n\t.cell 36028797018963968\nCPI1_34:\n\t.cell -36028797018963968\nCPI1_35:\n\t.cell 36028797018963967\nCPI1_36:\n\t.cell 4294967296\nCPI1_37:\n\t.cell -680564733841876926926749214863536422912\nCPI1_38:\n\t.cell 6277101735386680763835789423207666416102355444464034512896\nCPI1_39:\n\t.cell 65536\nCPI1_40:\n\t.cell 340282366920938463463374607431768211454\nCPI1_41:\n\t.cell -340282366920938463463374607431768211456\nCPI1_42:\n\t.cell -13692347616642342790661092917715279608201635153594486271545759703002679052401\nCPI1_43:\n\t.cell 52640415814167434258075003472292873845032032925368861658721866594941883383808\nCPI1_44:\n\t.cell 38641673103035791731731533816156024167564805489701907623622897326854046883955\nCPI1_45:\n\t.cell 54787163098352372903080186667173874034609631450403966903192706456308150173696\nCPI1_46:\n\t.cell 38641673103035791731731533816156024167564795225373760612807483933520187846252\nCPI1_47:\n\t.cell 45878754329874606723850032004460419939716098033419033652300536115191537991680\nCPI1_48:\n\t.cell 20533360792304415380676639524334759646011704657453360513009942507813251055616\nCPI1_49:\n\t.cell 38641673103035791731731533816156024167564795225373760612807483933520187780974\nCPI1_50:\n\t.cell 45878174366454238805785924429552843152368383506000281206751252761164313001984\nCPI1_51:\n\t.cell 38641673103035791731731533816156024167564795225373760612807483933520188174187\nCPI1_52:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI1_53:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI1_54:\n\t.cell -46143560925639015616832317408936301671844256180414657727643198937426087116800\nCPI1_55:\n\t.cell 16777215\nCPI1_56:\n\t.cell -452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI1_57:\n\t.cell -12977314965640506700245935054189128761941515225353915177568389290540451263660\nCPI1_58:\n\t.cell 48849787646992769944319009300540211125598274780817112954146168253338351566848\nCPI1_59:\n\t.cell 45878174771168152400309923968023696903920825062663897083177029169715950415727\nCPI1_60:\n\t.cell 28907473175659252811574821966264537227839605826712250529656662024386069622205\nCPI1_61:\n\t.cell 49951334845803014157035411107155628947397656118878371606996546536304819139705\nCPI1_62:\n\t.cell 38641673103035791731731533816156024167564795225373760612807483933520187056494\nCPI1_63:\n\t.cell 45878754329874606780369974253757285743832636260928857160963387720769025867776\nCPI1_64:\n\t.cell 38641673103035791731731533816156024167564795225373760612807483933520187453027\nCPI1_65:\n\t.cell 52221604211349726203002883904185165144418282302632944242954468857441217937408\nCPI1_66:\n\t.cell 38641673103035791731731533816156024167564732615072912267651450560546203449888\nCPI1_67:\n\t.cell 2955690960\nCPI1_68:\n\t.cell 3024758562\nCPI1_69:\n\t.cell 3048056548\nCPI1_70:\n\t.cell 3278642853\nCPI1_71:\n\t.cell 52671701331153541647886578042518376880665720886312461568675947943642852753408\nCPI1_72:\n\t.cell 44069461686584241827894202953525641074323106413802660119500043478919780725609\nCPI1_73:\n\t.cell 38641673103035791731731533816156024167564722411750456451503155966970273865827\nCPI1_74:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI1_75:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI1_76:\n\t.cell 45715941917797510482745793423169299555528967264781803224996866946803628349283\nCPI1_77:\n\t.cell 50264054831643787064655527234739241834375465970832041585729898152622993440768\nCPI1_78:\n\t.cell 38641673103035791731731533816156024167564722411750456451503155966970273865838\nCPI1_79:\n\t.cell 47686132507684840518066147157892717803238660454782269269786101181633118863360\nCPI1_80:\n\t.cell 44069461686584241827894202953525641074323106413796157293405533267930290331764\nCPI1_81:\n\t.cell 27255817927850617812327593377416750434974208423077133430283169792305764761600\nCPI1_82:\n\t.cell 1010974475\nCPI1_83:\n\t.cell 1036022091\nCPI1_84:\n\t.cell 1556472793\nCPI1_85:\n\t.cell 1618442133\nCPI1_86:\n\t.cell 2895532248\nCPI1_87:\n\t.cell 18446744073709551615\nCPI1_88:\n\t.cell 18446744073709551616\nCPI1_89:\n\t.cell 52654564390767044959579298469397226674931862819019873819714319711326391238656\nCPI1_90:\n\t.cell 26291481162348428908777738701870256371083620486985601143280217340759071679520\nCPI1_91:\n\t.cell 38641673103035791731731533816156024167564712108373040861687694250953274914405\nCPI1_92:\n\t.cell 26291411983330548579141649102431886771690016389848701039356489213959681830503\nCPI1_93:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI1_94:\n\t.cell -39594681723697725257243517806886730047832782969350256670158671209975033918718\nCPI1_95:\n\t.cell 37690864708096769858136022718758297171413558065778755541708964862669831012352\nCPI1_96:\n\t.cell 52196896144916912119100159651140989954555673199733288574663053516145272553472\nCPI1_97:\n\t.cell 38196372293521921434392468485229503230669824486605469169408008389775567511918\nCPI1_98:\n\t.cell 26291481162348428908777738701870411952153873432984087678595340726594593714789\nCPI1_99:\n\t.cell 47219211424369425042720877424439654303541804994005348883422379512790530392064\nCPI1_100:\n\t.cell 26291481162348428908777738701870256371083620486985615697921618814198474481780\nCPI1_101:\n\t.cell 26291473858512756344201538948153621065951163635371730674420353776736094126080\nCPI1_102:\n\t.cell 45860282413387743658664069929283192996818172027303565677004410560751238905856\nCPI1_103:\n\t.cell 44951118344456592256466094609461048929432351838138706330005115045606598140267\nCPI1_104:\n\t.cell 38641673103035791731731533816156024167564815772959094677178962132950122904096\nCPI1_105:\n\t.cell 50401828024043039495264997711549544805445889824880163546009268812299504713728\nCPI1_106:\n\t.cell -22621892943899263229371131098194708313119937222285178723572884446942106278385\nCPI1_107:\n\t.cell -32316848438791871210426852824298253369631754772697083098457350383428152852480\nCPI1_108:\n\t.cell 44951118344456592256466094609461048929432350318069115764843616978383006597120\nCPI1_109:\n\t.cell 28791872\nCPI1_110:\n\t.cell 353073666\nCPI1_111:\n\t.cell 650112516\nCPI1_112:\n\t.cell 791509053\nCPI1_113:\n\t.cell 7434134971103451013406255753710749417164742844230721285380594275825725960769\nCPI1_114:\n\t.cell 37690381585852494518670902285847937779631886488150703614650103485974165061632\nCPI1_115:\n\t.cell 52196896143619412418303887500998031661671815423143591609806485568207756197888\nCPI1_116:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI1_117:\n\t.cell 26291370223503212986890200668719106414217348795512020878118229869404610982944\nCPI1_118:\n\t.cell 38641673103035791731731533816156024167564800377106745405141334611874836343156\nCPI1_119:\n\t.cell 26291411985329833333231875761606848204163173475395248746863642488020186169344\nCPI1_120:\n\t.cell 45333985821298451852124155319093799469965478464961701256152226924980269481984\nCPI1_121:\n\t.cell 38641673103035791731731533816156024167564774332265701934386081201208968181349\nCPI1_122:\n\t.cell 16777216\nCPI1_123:\n\t.cell -6901745935414424457133245323534729813113482726486420146767558386647041\nCPI1_124:\n\t.cell 6901745935414424457133245323534729813113482726486420146767558386647040\nCPI1_125:\n\t.cell 6901746346790563787434755862277025452451108972170386555162524223799295\nCPI1_126:\n\t.cell 18446744073709551455\nCPI1_127:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\n",
            "bytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "claimReward(address,address,uint256)": "2f2d783d",
              "createIncentive((address,address,uint256,uint256,address),uint256)": "5cc5e3d9",
              "deposits(uint256)": "b02c43d0",
              "endIncentive((address,address,uint256,uint256,address))": "b5ada6e4",
              "factory()": "c45a0155",
              "getRewardInfo((address,address,uint256,uint256,address),uint256)": "d953186e",
              "incentives(bytes32)": "60777795",
              "maxIncentiveDuration()": "3dc0714b",
              "maxIncentiveStartLeadTime()": "01b75440",
              "multicall(bytes[])": "ac9650d8",
              "nonfungiblePositionManager()": "b44a2722",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "rewards(address,address)": "e70b9e27",
              "stakeToken((address,address,uint256,uint256,address),uint256)": "f2d2909b",
              "stakes(uint256,bytes32)": "c36c1ea5",
              "transferDeposit(uint256,address)": "26bfee04",
              "unstakeToken((address,address,uint256,uint256,address),uint256)": "f549ab42",
              "withdrawToken(uint256,address,bytes)": "3c423f0b"
            }
          },
          "hash": "010007f30857debd474add72233a9751218ea3021a9cb24f8326a3e84e6d33a4",
          "factoryDependencies": {}
        }
      },
      "contracts/interfaces/IUniswapV3Staker.sol": {
        "IUniswapV3Staker": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "DepositTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IUniswapV3Pool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "refundee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveEnded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "TokenStaked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "TokenUnstaked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "createIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "deposits",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "numberOfStakes",
                  "type": "uint48"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "endIncentive",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract IUniswapV3Factory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsInsideX128",
                  "type": "uint160"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "incentives",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalRewardUnclaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "totalSecondsClaimedX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint96",
                  "name": "numberOfStakes",
                  "type": "uint96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveStartLeadTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardsOwed",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "stakeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "stakes",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideInitialX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "transferDeposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "unstakeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "withdrawToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"DepositTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"IncentiveCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"IncentiveEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"createIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"numberOfStakes\",\"type\":\"uint48\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"endIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"secondsInsideX128\",\"type\":\"uint160\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"incentives\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRewardUnclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"totalSecondsClaimedX128\",\"type\":\"uint160\"},{\"internalType\":\"uint96\",\"name\":\"numberOfStakes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveStartLeadTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardsOwed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideInitialX128\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DepositTransferred(uint256,address,address)\":{\"params\":{\"newOwner\":\"The owner after the deposit was transferred\",\"oldOwner\":\"The owner before the deposit was transferred\",\"tokenId\":\"The ID of the deposit (and token) that is being transferred\"}},\"IncentiveCreated(address,address,uint256,uint256,address,uint256)\":{\"params\":{\"endTime\":\"The time when rewards stop accruing\",\"pool\":\"The Uniswap V3 pool\",\"refundee\":\"The address which receives any remaining reward tokens after the end time\",\"reward\":\"The amount of reward tokens to be distributed\",\"rewardToken\":\"The token being distributed as a reward\",\"startTime\":\"The time when the incentive program begins\"}},\"IncentiveEnded(bytes32,uint256)\":{\"params\":{\"incentiveId\":\"The incentive which is ending\",\"refund\":\"The amount of reward tokens refunded\"}},\"RewardClaimed(address,uint256)\":{\"params\":{\"reward\":\"The amount of reward tokens claimed\",\"to\":\"The address where claimed rewards were sent to\"}},\"TokenStaked(uint256,bytes32,uint128)\":{\"params\":{\"incentiveId\":\"The incentive in which the token is staking\",\"liquidity\":\"The amount of liquidity staked\",\"tokenId\":\"The unique identifier of an Uniswap V3 LP token\"}},\"TokenUnstaked(uint256,bytes32)\":{\"params\":{\"incentiveId\":\"The incentive in which the token is staking\",\"tokenId\":\"The unique identifier of an Uniswap V3 LP token\"}}},\"kind\":\"dev\",\"methods\":{\"claimReward(address,address,uint256)\":{\"params\":{\"amountRequested\":\"The amount of reward tokens to claim. Claims entire reward amount if set to 0.\",\"rewardToken\":\"The token being distributed as a reward\",\"to\":\"The address where claimed rewards will be sent to\"},\"returns\":{\"reward\":\"The amount of reward tokens claimed\"}},\"createIncentive((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"Details of the incentive to create\",\"reward\":\"The amount of reward tokens to be distributed\"}},\"deposits(uint256)\":{\"returns\":{\"numberOfStakes\":\"Counter of how many incentives for which the liquidity is staked\",\"owner\":\"The owner of the deposited NFT\",\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"}},\"endIncentive((address,address,uint256,uint256,address))\":{\"params\":{\"key\":\"Details of the incentive to end\"},\"returns\":{\"refund\":\"The remaining reward tokens when the incentive is ended\"}},\"getRewardInfo((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive\",\"tokenId\":\"The ID of the token\"},\"returns\":{\"reward\":\"The reward accrued to the NFT for the given incentive thus far\"}},\"incentives(bytes32)\":{\"params\":{\"incentiveId\":\"The ID of the incentive computed from its parameters\"},\"returns\":{\"numberOfStakes\":\"The count of deposits that are currently staked for the incentive\",\"totalRewardUnclaimed\":\"The amount of reward token not yet claimed by users\",\"totalSecondsClaimedX128\":\"Total liquidity-seconds claimed, represented as a UQ32.128\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"},\"rewards(address,address)\":{\"params\":{\"owner\":\"The owner for which the rewards owed are checked\",\"rewardToken\":\"The token for which to check rewards\"},\"returns\":{\"rewardsOwed\":\"The amount of the reward token claimable by the owner\"}},\"stakeToken((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive for which to stake the NFT\",\"tokenId\":\"The ID of the token to stake\"}},\"stakes(uint256,bytes32)\":{\"params\":{\"incentiveId\":\"The ID of the incentive for which the token is staked\",\"tokenId\":\"The ID of the staked token\"},\"returns\":{\"liquidity\":\"The amount of liquidity in the NFT as of the last time the rewards were computed\",\"secondsPerLiquidityInsideInitialX128\":\"secondsPerLiquidity represented as a UQ32.128\"}},\"transferDeposit(uint256,address)\":{\"params\":{\"to\":\"The new owner of the deposit\",\"tokenId\":\"The ID of the token (and the deposit) to transfer\"}},\"unstakeToken((address,address,uint256,uint256,address),uint256)\":{\"params\":{\"key\":\"The key of the incentive for which to unstake the NFT\",\"tokenId\":\"The ID of the token to unstake\"}},\"withdrawToken(uint256,address,bytes)\":{\"params\":{\"data\":\"An optional data array that will be passed along to the `to` address via the NFT safeTransferFrom\",\"to\":\"The address where the LP token will be sent\",\"tokenId\":\"The unique identifier of an Uniswap V3 LP token\"}}},\"title\":\"Uniswap V3 Staker Interface\",\"version\":1},\"userdoc\":{\"events\":{\"DepositTransferred(uint256,address,address)\":{\"notice\":\"Emitted when ownership of a deposit changes\"},\"IncentiveCreated(address,address,uint256,uint256,address,uint256)\":{\"notice\":\"Event emitted when a liquidity mining incentive has been created\"},\"IncentiveEnded(bytes32,uint256)\":{\"notice\":\"Event that can be emitted when a liquidity mining incentive has ended\"},\"RewardClaimed(address,uint256)\":{\"notice\":\"Event emitted when a reward token has been claimed\"},\"TokenStaked(uint256,bytes32,uint128)\":{\"notice\":\"Event emitted when a Uniswap V3 LP token has been staked\"},\"TokenUnstaked(uint256,bytes32)\":{\"notice\":\"Event emitted when a Uniswap V3 LP token has been unstaked\"}},\"kind\":\"user\",\"methods\":{\"claimReward(address,address,uint256)\":{\"notice\":\"Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\"},\"createIncentive((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Creates a new liquidity mining incentive program\"},\"deposits(uint256)\":{\"notice\":\"Returns information about a deposited NFT\"},\"endIncentive((address,address,uint256,uint256,address))\":{\"notice\":\"Ends an incentive after the incentive end time has passed and all stakes have been withdrawn\"},\"factory()\":{\"notice\":\"The Uniswap V3 Factory\"},\"getRewardInfo((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Calculates the reward amount that will be received for the given stake\"},\"incentives(bytes32)\":{\"notice\":\"Represents a staking incentive\"},\"maxIncentiveDuration()\":{\"notice\":\"The max duration of an incentive in seconds\"},\"maxIncentiveStartLeadTime()\":{\"notice\":\"The max amount of seconds into the future the incentive startTime can be set\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"nonfungiblePositionManager()\":{\"notice\":\"The nonfungible position manager with which this staking contract is compatible\"},\"rewards(address,address)\":{\"notice\":\"Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated\"},\"stakeToken((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Stakes a Uniswap V3 LP token\"},\"stakes(uint256,bytes32)\":{\"notice\":\"Returns information about a staked liquidity NFT\"},\"transferDeposit(uint256,address)\":{\"notice\":\"Transfers ownership of a deposit from the sender to the given recipient\"},\"unstakeToken((address,address,uint256,uint256,address),uint256)\":{\"notice\":\"Unstakes a Uniswap V3 LP token\"},\"withdrawToken(uint256,address,bytes)\":{\"notice\":\"Withdraws a Uniswap V3 LP token `tokenId` from this contract to the recipient `to`\"}},\"notice\":\"Allows staking nonfungible liquidity tokens in exchange for reward tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV3Staker.sol\":\"IUniswapV3Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]},\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/interfaces/IUniswapV3Staker.sol\":{\"keccak256\":\"0xb6251b51152cee46a5e9373e606ce80e0ff035244251afca9d2ec1e874ae9fe5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6083f93192635e35b77b7de5438e153fa2f0a026b9c2f3b66f5627316175fa4\",\"dweb:/ipfs/QmPDwtkgoMvXNT9wYayD6TBufcNMLDDL4hjXw2nkeVGtA6\"]}},\"version\":1}",
          "evm": {
            "legacyAssembly": null,
            "assembly": null,
            "bytecode": null,
            "methodIdentifiers": {
              "claimReward(address,address,uint256)": "2f2d783d",
              "createIncentive((address,address,uint256,uint256,address),uint256)": "5cc5e3d9",
              "deposits(uint256)": "b02c43d0",
              "endIncentive((address,address,uint256,uint256,address))": "b5ada6e4",
              "factory()": "c45a0155",
              "getRewardInfo((address,address,uint256,uint256,address),uint256)": "d953186e",
              "incentives(bytes32)": "60777795",
              "maxIncentiveDuration()": "3dc0714b",
              "maxIncentiveStartLeadTime()": "01b75440",
              "multicall(bytes[])": "ac9650d8",
              "nonfungiblePositionManager()": "b44a2722",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "rewards(address,address)": "e70b9e27",
              "stakeToken((address,address,uint256,uint256,address),uint256)": "f2d2909b",
              "stakes(uint256,bytes32)": "c36c1ea5",
              "transferDeposit(uint256,address)": "26bfee04",
              "unstakeToken((address,address,uint256,uint256,address),uint256)": "f549ab42",
              "withdrawToken(uint256,address,bytes)": "3c423f0b"
            }
          }
        }
      },
      "contracts/libraries/IncentiveId.sol": {
        "IncentiveId": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/IncentiveId.sol\":\"IncentiveId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]},\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/interfaces/IUniswapV3Staker.sol\":{\"keccak256\":\"0xb6251b51152cee46a5e9373e606ce80e0ff035244251afca9d2ec1e874ae9fe5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6083f93192635e35b77b7de5438e153fa2f0a026b9c2f3b66f5627316175fa4\",\"dweb:/ipfs/QmPDwtkgoMvXNT9wYayD6TBufcNMLDDL4hjXw2nkeVGtA6\"]},\"contracts/libraries/IncentiveId.sol\":{\"keccak256\":\"0x30c6f4161b0c3bc5758c0132baadfd21ddd62ee5097e9da57f1ceff9122e0c45\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6c46af685b35e3eb1c6e0d198f344655feea1020fd17327f1e49926a6064de58\",\"dweb:/ipfs/QmWHsRo2XGbiyc3VAckRnRpoPz7KrNkn9NhVVLiR7pZmRV\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"IncentiveId.sol:IncentiveId\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "contracts/libraries/NFTPositionInfo.sol": {
        "NFTPositionInfo": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Encapsulates the logic for getting info about a NFT token ID\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/NFTPositionInfo.sol\":\"NFTPositionInfo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/libraries/NFTPositionInfo.sol\":{\"keccak256\":\"0x9fb098fadc483b14181f0562890fcd1340ec82d13cd922f3664891e85cfc3b40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc186de72381918380069f176d024952e041ce817155ffa63e2474dc78ee709\",\"dweb:/ipfs/QmUTVt6mrAdLVcyLSvScqzSYDDdUqyGzU4aXqQ2zsJNhaT\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"NFTPositionInfo.sol:NFTPositionInfo\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "contracts/libraries/RewardMath.sol": {
        "RewardMath": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math for computing rewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows computing rewards given some parameters of stakes and incentives\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/RewardMath.sol\":\"RewardMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0xa4fdec0ea7d943692cac780111ff2ff9d89848cad0494a59cfaed63a705054b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33ce43e57ca89276dc54f022f92ebf1b57bb50c8a5ec18415ce3ae3513f8bbf1\",\"dweb:/ipfs/QmcMEoXaS9dCa9EYN4y4zvq75Pmehy7DA6Q4VLiPaPCc9e\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xe511530871deaef86692cea9adb6076d26d7b47fd4815ce51af52af981026057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5a6ae776be3e7dcbd23d49ffbc9d792fed0ddf4b111ebb64b9bb2133ec263e\",\"dweb:/ipfs/QmbAUtWqvipzEARQpFpkzYKBELy3qeW5WXnZxHFU84sxG7\"]},\"contracts/libraries/RewardMath.sol\":{\"keccak256\":\"0x1a416c0d17acda6f2bb819da7e88ceaf61d9299cae4ada790082e2aa0830d193\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ac5402045285b70b286d622495fc301ab6c8604ca4dcb9d931122aa387114f7\",\"dweb:/ipfs/QmTxJcsSbandYCK67EARcFw6g1EnGkyM2SeUX15VXKkWNn\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"RewardMath.sol:RewardMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "contracts/libraries/TransferHelperExtended.sol": {
        "TransferHelperExtended": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelperExtended.sol\":\"TransferHelperExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/libraries/TransferHelperExtended.sol\":{\"keccak256\":\"0xa7f6489e883fe4e36009910115589e08c90f6827f1eb20ab47f0946ccbb5b661\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dd21aaa84d9071cc966e5d076b079a327be0a96de1af5896bca8145d66aa51f9\",\"dweb:/ipfs/QmUepX5wviBUufPZTqp6Ub2u7PquW9N5voAPamtYvfAdYN\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"TransferHelperExtended.sol:TransferHelperExtended\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff730000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b118c42475cc6cc9b920061a8df49fb58477456f7d6628fc0f4af15d5",
          "factoryDependencies": {}
        }
      },
      "contracts/test/TestERC20.sol": {
        "TestERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToMint",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"stateVariables\":{\"allowance\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"return\":\"The current allowance granted by `owner` to `spender`\"},\"balanceOf\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"return\":\"The number of tokens held by the account\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"contracts/test/TestERC20.sol\":{\"keccak256\":\"0xa56e9c2315296820ff565e98c60faa4348d5490c69c9c978b82c7f563e10e3f5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://347356ca743a79f030254adaa155d52a96a866a866ae46ab08aade3db62ceff0\",\"dweb:/ipfs/QmaAuiUUfY1pGDpHDDmTXHqRr5uQdNNoKaYju4kLqzN8u7\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"TestERC20.sol:TestERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_8\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.ne\t@.BB0_50\n\tsub.s\t68, r2, r2\n\tsub.s\t64, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI0_1[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_19[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n.BB0_19:\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t32, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_8\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tld.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_61\n\tadd\tr0, r0, r6\n.BB0_4:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_4\n.BB0_61:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB0_6\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_6:\n\tadd\tr2, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_8\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tand\t@CPI0_1[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_10\n.BB0_11:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_50:\n\tsub.s!\t@CPI0_5[0], r3, r4\n\tjump.ne\t@.BB0_51\n\tsub.s\t100, r2, r2\n\tsub.s\t96, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_1[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI0_1[0], r3, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_34\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_10:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.ne\t@.BB0_52\n\tsub.s\t68, r2, r2\n\tsub.s\t64, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_1[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_11\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_52:\n\tsub.s!\t@CPI0_7[0], r3, r4\n\tjump.ne\t@.BB0_53\n\tsub.s\t36, r2, r2\n\tsub.s\t32, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t32, r0\n\tand\t@CPI0_1[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n.BB0_28:\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_53:\n\tsub.s!\t@CPI0_8[0], r3, r4\n\tjump.ne\t@.BB0_54\n\tsub.s\t68, r2, r2\n\tsub.s\t64, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI0_1[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[5], r0, r2\n\tsub!\tr3, r2, r1\n\tjump.ge\t@.BB0_44\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tsub.s!\t@CPI0_9[0], r3, r3\n\tjump.ne\t@.BB0_8\n\tsub.s\t68, r2, r2\n\tsub.s\t64, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_8\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tst.1\t32, r2\n\tand\t@CPI0_1[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tst.1\t32, r1\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_1[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_28\n\tjump\t@.BB0_8\n.BB0_34:\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_38\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_44:\n\tadd\tr3, r0, stack-[3]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[3], r0, r4\n\tsub\tr4, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tst.1\t0, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_47\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_41\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r6\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_19\n\tjump\t@.BB0_8\n.BB0_41:\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[5], r0, r3\n\tadd\tstack-[3], r0, r2\n\tsub\tr2, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_19\n.BB0_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_2:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 157198259\nCPI0_5:\n\t.cell 599290589\nCPI0_6:\n\t.cell 1086394137\nCPI0_7:\n\t.cell 1889567281\nCPI0_8:\n\t.cell 2835717307\nCPI0_9:\n\t.cell 3714247998\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_11:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_12:\n\t.cell 51742802407556051564058162932915720569637124328340387463328349427592966701056\nCPI0_13:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_14:\n\t.cell 47687999144296217495830161024900803883598939680655768600309757961416992620544\nCPI0_15:\n\t.cell 50415914306987825853577863956359873419026919320029950410234220354580047200256\nCPI0_16:\n\t.cell 53115649371004818019941708150225162236634068472966818012623374674217928753152\nCPI0_17:\n\t.cell 50415914306987825853577863956359873419070048594136530569690275807406332051456\nCPI0_18:\n\t.cell 44065914189304682195588401817695748675301014518403297677065912652591261548544\nCPI0_19:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\n",
            "bytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "mint(address,uint256)": "40c10f19",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "hash": "010000d9f64802aecdc8257a855405c4ec90751d5c38cb3f4476b5b6df0aa21c",
          "factoryDependencies": {}
        }
      },
      "contracts/test/TestIncentiveId.sol": {
        "TestIncentiveId": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IUniswapV3Pool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "refundee",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IUniswapV3Staker.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "compute",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"compute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Test contract for IncentiveId\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestIncentiveId.sol\":\"TestIncentiveId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]},\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/interfaces/IUniswapV3Staker.sol\":{\"keccak256\":\"0xb6251b51152cee46a5e9373e606ce80e0ff035244251afca9d2ec1e874ae9fe5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6083f93192635e35b77b7de5438e153fa2f0a026b9c2f3b66f5627316175fa4\",\"dweb:/ipfs/QmPDwtkgoMvXNT9wYayD6TBufcNMLDDL4hjXw2nkeVGtA6\"]},\"contracts/libraries/IncentiveId.sol\":{\"keccak256\":\"0x30c6f4161b0c3bc5758c0132baadfd21ddd62ee5097e9da57f1ceff9122e0c45\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6c46af685b35e3eb1c6e0d198f344655feea1020fd17327f1e49926a6064de58\",\"dweb:/ipfs/QmWHsRo2XGbiyc3VAckRnRpoPz7KrNkn9NhVVLiR7pZmRV\"]},\"contracts/test/TestIncentiveId.sol\":{\"keccak256\":\"0x2fa8e28d045886ad94bbcff21d6ea6c18da65f174bcf5ff0c371151a6770bb54\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4ee76ff0209befbf042aba8607eb7f65f345ca3b25797a8749671e52376af6e5\",\"dweb:/ipfs/QmNtk6aHpZSHFdCANce8SB6tXvtE5VKyJ6Mu3t4X9ntrja\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"TestIncentiveId.sol:TestIncentiveId\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_3\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tsub.s!\t159, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_3\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_3\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_3\n\tst.1.inc\tr1, r2, r2\n\tadd\t36, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_3\n\tst.1\tr2, r3\n\tadd\t68, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t100, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r5\n\tadd\t96, r1, r4\n\tst.1\tr4, r5\n\tadd\t132, r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_3\n\tadd\t128, r1, r6\n\tst.1\tr6, r5\n\tld.1\tr1, r1\n\tand\t@CPI0_6[0], r1, r1\n\tld.1\t64, r5\n\tadd\t32, r5, r7\n\tst.1\tr7, r1\n\tld.1\tr2, r1\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t64, r5, r2\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tld.1\tr4, r1\n\tadd\t128, r5, r2\n\tst.1\tr2, r1\n\tld.1\tr6, r1\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t160, r5, r2\n\tst.1\tr2, r1\n\tld.1\t64, r3\n\tsub\tr2, r3, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t192, r5, r2\n\tst.1\t64, r2\n\tld.1\tr3, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 48269989190764761656946084047439973909901488243837509205613352499607532208128\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 18446744073709551455\nCPI0_6:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\n",
            "bytecode": {
              "object": "000200000000000200010000000103550000006001100270000000250010019d0000008001000039000000400010043f000000000100041600000001022001900000006a0000c13d000000000110004c000000710000c13d0000000001000031000000040210008c000000710000413d0000000102000367000000000202043b0000002702200197000000280220009c000000710000c13d000000040110008a00000029020000410000009f0310008c000000000300001900000000030220190000002901100197000000000410004c0000000002008019000000290110009c00000000010300190000000001026019000000000110004c000000710000613d000000400100043d0000002a0210009c000000710000213d000000a002100039000000400020043f00000004020000390000000102200367000000000202043b0000002b0320009c000000710000213d000000000221043600000024030000390000000103300367000000000303043b0000002b0430009c000000710000213d000000000032043500000044030000390000000103300367000000000403043b0000004003100039000000000043043500000064040000390000000104400367000000000504043b0000006004100039000000000054043500000084050000390000000105500367000000000505043b0000002b0650009c000000710000213d0000008006100039000000000056043500000000010104330000002b01100197000000400500043d0000002007500039000000000017043500000000010204330000002b011001970000004002500039000000000012043500000000010304330000006002500039000000000012043500000000010404330000008002500039000000000012043500000000010604330000002b01100197000000a0025000390000000000120435000000400300043d00000000013200490000000001130436000000c002500039000000400020043f0000000002030433008e00730000040f000000400200043d0000000000120435000000400100043d000000000212004900000020022000390000002503000041000000250420009c0000000002038019000000250410009c000000000103801900000040011002100000006002200210000000000112019f0000008f0001042e000000000110004c000000710000c13d00000020010000390000010000100443000001200000044300000026010000410000008f0001042e000000000100001900000090000104300000002503000041000000250410009c00000000010380190000004001100210000000250420009c00000000020380190000006002200210000000000112019f0000000002000414000000250420009c0000000002038019000000c002200210000000000112019f0000002c011001c70000801002000039008e00890000040f0000000102200190000000870000613d000000000101043b000000000001042d000000000100001900000090000104300000008c002104230000000102000039000000000001042d0000000002000019000000000001042d0000008e000004320000008f0001042e000000900001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000006ab7d880000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff5f000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0200000000000000000000000000000000000000000000000000000000000000"
            },
            "methodIdentifiers": {
              "compute((address,address,uint256,uint256,address))": "6ab7d880"
            }
          },
          "hash": "0100002d2939442015c119fe9d6fd37940d2edf4d56bb28f7e64cb3d63294d19",
          "factoryDependencies": {}
        }
      },
      "contracts/test/TestRewardMath.sol": {
        "TestRewardMath": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "totalRewardUnclaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "totalSecondsClaimedX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideInitialX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityInsideX128",
                  "type": "uint160"
                },
                {
                  "internalType": "uint256",
                  "name": "currentTime",
                  "type": "uint256"
                }
              ],
              "name": "computeRewardAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsInsideX128",
                  "type": "uint160"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRewardUnclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"totalSecondsClaimedX128\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideInitialX128\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"}],\"name\":\"computeRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"secondsInsideX128\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Test contract for RewardMatrh\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestRewardMath.sol\":\"TestRewardMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0xa4fdec0ea7d943692cac780111ff2ff9d89848cad0494a59cfaed63a705054b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33ce43e57ca89276dc54f022f92ebf1b57bb50c8a5ec18415ce3ae3513f8bbf1\",\"dweb:/ipfs/QmcMEoXaS9dCa9EYN4y4zvq75Pmehy7DA6Q4VLiPaPCc9e\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf\",\"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1\",\"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc\",\"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39\"]},\"@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xe511530871deaef86692cea9adb6076d26d7b47fd4815ce51af52af981026057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5a6ae776be3e7dcbd23d49ffbc9d792fed0ddf4b111ebb64b9bb2133ec263e\",\"dweb:/ipfs/QmbAUtWqvipzEARQpFpkzYKBELy3qeW5WXnZxHFU84sxG7\"]},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfd939085b3618101b955f87c7fabf38338ba1aad480295acb8102ebc5d72471\",\"dweb:/ipfs/QmauQD8bGDHTztmTDfaKXjzM7Wacrq2XU7VcTbwn1WrDBL\"]},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e3b10f75c101de044c1253672207399c1513fd1f0f17be31069c18c0b9a1460\",\"dweb:/ipfs/QmXrkXNY6njQfepE7KbRtJMruGXfrZwsMMsW7m5e3XS9Hf\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f\",\"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu\"]},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"contracts/interfaces/IUniswapV3Staker.sol\":{\"keccak256\":\"0xb6251b51152cee46a5e9373e606ce80e0ff035244251afca9d2ec1e874ae9fe5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6083f93192635e35b77b7de5438e153fa2f0a026b9c2f3b66f5627316175fa4\",\"dweb:/ipfs/QmPDwtkgoMvXNT9wYayD6TBufcNMLDDL4hjXw2nkeVGtA6\"]},\"contracts/libraries/RewardMath.sol\":{\"keccak256\":\"0x1a416c0d17acda6f2bb819da7e88ceaf61d9299cae4ada790082e2aa0830d193\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ac5402045285b70b286d622495fc301ab6c8604ca4dcb9d931122aa387114f7\",\"dweb:/ipfs/QmTxJcsSbandYCK67EARcFw6g1EnGkyM2SeUX15VXKkWNn\"]},\"contracts/test/TestRewardMath.sol\":{\"keccak256\":\"0xd4fa8f19d5a52f8cae135b2a89d1f7d6f12a5d8caaf9214d2f3e4de4e62b2d59\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad047cf869e89f536e141e3398fc979e98f2670bdf999ee9890a948c1bb5d97e\",\"dweb:/ipfs/QmX93jHMaHHAFBLyFKx15itRFvxkBkDsxwmKwu6M4HkEqn\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"TestRewardMath.sol:TestRewardMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_3\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r3\n\tand\t@CPI0_2[0], r3, r3\n\tsub.s!\t@CPI0_3[0], r3, r3\n\tjump.ne\t@.BB0_3\n\tsub.s\t4, r2, r2\n\tadd\t@CPI0_4[0], r0, r3\n\tsub.s!\t255, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.ge\t0, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB0_3\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_5[0], r2, r7\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tptr.add.s\t132, r1, r4\n\tld\tr4, r4\n\tand\t@CPI0_7[0], r4, r5\n\tsub.s!\t@CPI0_8[0], r4, r4\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t164, r1, r4\n\tld\tr4, r8\n\tsub.s!\t@CPI0_6[0], r8, r4\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t196, r1, r4\n\tld\tr4, r9\n\tsub.s!\t@CPI0_5[0], r9, r4\n\tjump.gt\t@.BB0_3\n\tptr.add.s\t228, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r2, r1\n\tjump.lt\t@.BB0_3\n\tsub\tr9, r8, r1\n\tmul\tr1, r5, r1, r5\n\tsub.s\t1, r0, r5\n\tsub!\tr6, r5, r8\n\tadd\tr6, r0, r8\n\tadd.eq\t0, r0, r8\n\tand\t@CPI0_5[0], r1, r1\n\tmul\tr1, r8, r8, r9\n\tdiv.s\t@CPI0_7[0], r9, r10, r11\n\tmul\t@CPI0_7[0], r10, r12, r13\n\tshl.s\t128, r11, r11\n\tshr.s\t128, r8, r13\n\tor\tr11, r13, r11\n\tsub!\tr12, r11, r11\n\tadd\t0, r0, r11\n\tadd.gt\tr5, r0, r11\n\tadd\tr10, r11, r10\n\tshl.s\t128, r9, r9\n\tor\tr9, r13, r9\n\tand\t@CPI0_7[0], r10, r10\n\tadd\tr9, r10, r10\n\tdiv.s\t@CPI0_7[0], r10, r9, r11\n\tsub!\tr3, r4, r12\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI0_7[0], r8, r3\n\tsub\tr4, r2, r2\n\tshl.s\t128, r2, r8\n\tsub.s!\t@CPI0_9[0], r10, r2\n\tjump.gt\t@.BB0_8\n\tshl.s\t128, r11, r2\n\tor\tr2, r3, r2\n\tmul\t@CPI0_7[0], r9, r4, r11\n\tsub!\tr4, r2, r2\n\tjump.le\t@.BB0_9\n.BB0_8:\n\tsub.s\t1, r9, r9\n.BB0_9:\n\tsub\tr8, r7, r4\n\tmul\tr1, r6, r2, r11\n\tshl.s\t128, r10, r10\n\tor\tr10, r3, r3\n\tand\t@CPI0_7[0], r9, r9\n\tadd\tr3, r9, r3\n\tsub!\tr3, r2, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tsub\tr3, r2, r3\n\tadd!\tr3, r9, r3\n\tjump.ne\t@.BB0_11\n\tsub!\tr8, r7, r3\n\tjump.eq\t@.BB0_3\n\tdiv\tr2, r4, r2, r3\n\tjump\t@.BB0_10\n.BB0_1:\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub!\tr4, r3, r7\n\tjump.le\t@.BB0_3\n\tdiv\tr1, r4, r8, r7\n\tdiv\tr6, r4, r8, r6\n\tsub.s!\t@CPI0_7[0], r4, r8\n\tjump.gt\t@.BB0_15\n\tmul\tr7, r6, r5, r6\n\tdiv\tr5, r4, r6, r5\n\tjump\t@.BB0_25\n.BB0_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tmul\tr7, r6, r8, r6\n\tsub!\tr4, r6, r7\n\tjump.le\t@.BB0_25\n\tsub.s!\t@CPI0_10[0], r4, r5\n\tadd\t192, r0, r5\n\tadd.lt\t128, r0, r5\n\tshr\tr4, r5, r5\n\tsub.s!\t@CPI0_10[0], r4, r7\n\tadd\t64, r0, r7\n\tadd.lt\t128, r0, r7\n\tsub.s\t32, r7, r9\n\tsub.s!\t@CPI0_11[0], r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t32, r5, r9\n\tsub.s!\t@CPI0_11[0], r5, r10\n\tadd.ge\tr9, r0, r5\n\tsub.s\t16, r7, r9\n\tsub.s!\t@CPI0_12[0], r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t16, r5, r9\n\tsub.s!\t@CPI0_12[0], r5, r10\n\tadd.ge\tr9, r0, r5\n\tsub.s\t8, r7, r9\n\tsub.s!\t256, r5, r10\n\tadd.ge\tr9, r0, r7\n\tshr.s\t8, r5, r9\n\tadd.ge\tr9, r0, r5\n\tshr.s\t4, r5, r9\n\tsub.s!\t16, r5, r10\n\tadd.lt\tr5, r0, r9\n\tshr.s\t2, r9, r10\n\tsub.s!\t4, r9, r11\n\tadd.lt\tr9, r0, r10\n\tsub.s\t2, r0, r11\n\tsub\t0, r10, r12\n\tsub.s!\t2, r10, r10\n\tadd\tr11, r0, r10\n\tadd.lt\tr12, r0, r10\n\tsub.s\t4, r7, r11\n\tsub.s!\t16, r5, r5\n\tadd\tr11, r0, r5\n\tadd.lt\tr7, r0, r5\n\tsub.s\t2, r5, r7\n\tsub.s!\t4, r9, r9\n\tadd.ge\tr7, r0, r5\n\tadd\tr10, r5, r5\n\tand\t255, r5, r7\n\tshl\tr6, r7, r6\n\tsub.s\t1, r0, r7\n\txor\tr5, r7, r7\n\tand\t255, r7, r7\n\tshr.s\t1, r8, r9\n\tshr\tr9, r7, r7\n\tor\tr6, r7, r10\n\tshl\tr4, r5, r6\n\tshr.s\t128, r6, r7\n\tdiv\tr10, r7, r12, r13\n\tshl\tr8, r5, r9\n\tshr.s\t128, r9, r11\n\tand\t@CPI0_7[0], r6, r8\n\tjump\t@.BB0_17\n.BB0_19:\n\tadd\tr13, r7, r13\n\tsub.s\t1, r12, r12\n\tsub.s!\t@CPI0_7[0], r13, r14\n\tjump.ge\t@.BB0_20\n.BB0_17:\n\tsub.s!\t@CPI0_13[0], r12, r14\n\tjump.gt\t@.BB0_19\n\tmul\tr12, r8, r14, r15\n\tshl.s\t128, r13, r15\n\tor\tr15, r11, r15\n\tsub!\tr14, r15, r14\n\tjump.gt\t@.BB0_19\n.BB0_20:\n\tand\t@CPI0_7[0], r12, r12\n\tmul\tr12, r6, r12, r13\n\tshl.s\t128, r10, r10\n\tor\tr10, r11, r10\n\tsub\tr10, r12, r10\n\tdiv\tr10, r7, r11, r12\n\tand\t@CPI0_7[0], r9, r9\n\tjump\t@.BB0_21\n.BB0_23:\n\tadd\tr12, r7, r12\n\tsub.s\t1, r11, r11\n\tsub.s!\t@CPI0_7[0], r12, r13\n\tjump.ge\t@.BB0_24\n.BB0_21:\n\tsub.s!\t@CPI0_13[0], r11, r13\n\tjump.gt\t@.BB0_23\n\tmul\tr11, r8, r13, r14\n\tshl.s\t128, r12, r14\n\tor\tr14, r9, r14\n\tsub!\tr13, r14, r13\n\tjump.gt\t@.BB0_23\n.BB0_24:\n\tand\t@CPI0_7[0], r11, r7\n\tmul\tr7, r6, r6, r7\n\tshl.s\t128, r10, r7\n\tor\tr7, r9, r7\n\tsub\tr7, r6, r6\n\tshr\tr6, r5, r5\n.BB0_25:\n\tsub\t0, r4, r6\n\tand!\tr4, r6, r6\n\tadd\tr0, r0, r7\n\tjump.eq\t@.BB0_35\n\tdiv\tr4, r6, r7, r4\n.BB0_35:\n\tmul\t3, r7, r4, r8\n\txor\t2, r4, r4\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r8, r9\n\tsub\t2, r8, r8\n\tmul\tr8, r4, r4, r8\n\tmul\tr4, r7, r7, r8\n\tsub\t2, r7, r7\n\tmul\tr7, r4, r4, r7\n\tsub.s!\t0, r6, r7\n\tjump.ne\t@.BB0_37\n\tsub.s\t1, r0, r6\n\tsub!\tr2, r5, r2\n\tadd\t0, r0, r2\n\tadd.lt\tr6, r0, r2\n\tadd\tr3, r2, r3\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_38\n.BB0_37:\n\tsub.s\t1, r0, r7\n\tsub!\tr2, r5, r8\n\tadd.ge\t0, r0, r7\n\tadd\tr3, r7, r3\n\tsub\t0, r6, r7\n\tdiv\tr7, r6, r7, r8\n\tadd\t1, r7, r7\n\tmul\tr7, r3, r3, r7\n\tsub\tr2, r5, r2\n\tdiv\tr2, r6, r2, r5\n.BB0_38:\n\tor\tr2, r3, r2\n\tmul\tr4, r2, r2, r3\n.BB0_10:\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tst.1\tr3, r2\n\tld.1\t64, r1\n\tsub\tr3, r1, r2\n\tadd\t64, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -6311860287318107745169860052141678101545167624862200800624453932221527490560\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_7:\n\t.cell 340282366920938463463374607431768211455\nCPI0_8:\n\t.cell 340282366920938463463374607431768211456\nCPI0_9:\n\t.cell -680564733841876926926749214863536422912\nCPI0_10:\n\t.cell 6277101735386680763835789423207666416102355444464034512896\nCPI0_11:\n\t.cell 4294967296\nCPI0_12:\n\t.cell 65536\nCPI0_13:\n\t.cell 340282366920938463463374607431768211454\n",
            "bytecode": {
              "object": "000200000000000200010000000103550000006001100270000000490010019d0000008001000039000000400010043f000000000100041600000001022001900000006f0000c13d000000000110004c0000007f0000c13d0000000002000031000000040120008c0000007f0000413d0000000101000367000000000301043b0000004b033001970000004c0330009c0000007f0000c13d000000040220008a0000004d03000041000000ff0420008c000000000400001900000000040320190000004d02200197000000000520004c00000000030080190000004d0220009c00000000020400190000000002036019000000000220004c0000007f0000613d0000002402100370000000000202043b0000004e072001970000000403100370000000000603043b0000004f0220009c0000007f0000813d0000006402100370000000000302043b0000004402100370000000000202043b0000008404100370000000000404043b0000005005400197000000510440009c0000007f0000813d000000a404100370000000000804043b0000004f0480009c0000007f0000813d000000c404100370000000000904043b0000004e0490009c0000007f0000213d000000e401100370000000000401043b000000000124004b0000007f0000413d000000000189004900000000515100a9000000010500008a000000000856004b000000000806001900000000080060190000004e0110019700000000988100a900000050ba90012a00000050dca000d1000000800bb00210000000800d800270000000000bdb019f000000000bbc004b000000000b000019000000000b052019000000000aba001900000080099002100000000009d9019f000000500aa00197000000000aa9001900000050b9a0012a000000000c43004b00000000040320190000005003800197000000000224004900000080082002100000005202a0009c0000005e0000213d0000008002b00210000000000232019f00000050b49000d1000000000224004b0000005f0000a13d000000010990008a000000000478004900000000b26100a9000000800aa0021000000000033a019f00000050099001970000000003930019000000000923004b000000000900001900000000090540190000000003230049000000000393001a000000760000c13d000000000378004b0000007f0000613d00000000324200d9000001100000013d000000000110004c0000007f0000c13d0000002001000039000001000010044300000120000004430000004a01000041000001210001042e000000000734004b0000007f0000a13d00000000784100d900000000684600d9000000500840009c000000810000213d00000000656700a900000000564500d9000000e20000013d0000000001000019000001220001043000000000686700a9000000000764004b000000e20000a13d000000530540009c000000c0050000390000008005004039000000000554022f000000530740009c00000040070000390000008007004039000000200970008a000000540a50009c00000000070980190000002009500270000000540a50009c0000000005098019000000100970008a000000550a50009c00000000070980190000001009500270000000550a50009c0000000005098019000000080970008a000001000a50008c0000000007098019000000080950027000000000050980190000000409500270000000100a50008c0000000009054019000000020a900270000000040b90008c000000000a094019000000020b00008a000000000ca00049000000020aa0008c000000000a0b0019000000000a0c4019000000040b70008a000000100550008c00000000050b00190000000005074019000000020750008a000000040990008c000000000507801900000000055a0019000000ff0750018f00000000067601cf000000010700008a000000000775013f000000ff0770018f0000000109800270000000000779022f000000000a76019f00000000065401cf000000800760027000000000dc7a00d900000000095801cf000000800b9002700000005008600197000000c20000013d000000000d7d0019000000010cc0008a000000500ed0009c000000c90000813d000000560ec0009c000000be0000213d00000000fe8c00a9000000800fd00210000000000fbf019f000000000efe004b000000be0000213d000000500cc0019700000000dc6c00a9000000800aa00210000000000aba019f000000000aca004900000000cb7a00d90000005009900197000000d50000013d000000000c7c0019000000010bb0008a000000500dc0009c000000dc0000813d000000560db0009c000000d10000213d00000000ed8b00a9000000800ec00210000000000e9e019f000000000ded004b000000d10000213d0000005007b0019700000000766700a90000008007a00210000000000797019f0000000006670049000000000556022f000000000640004900000000066401700000000007000019000000e70000613d00000000476400d900000003847000c9000000020440015f00000000987400a9000000020880008900000000844800a900000000987400a9000000020880008900000000844800a900000000987400a9000000020880008900000000844800a900000000987400a9000000020880008900000000844800a900000000987400a9000000020880008900000000844800a900000000877400a9000000020770008900000000744700a9000000000760004c000001040000c13d000000010600008a000000000252004b00000000020000190000000002064019000000000323001900000000020000190000010e0000013d000000010700008a000000000852004b00000000070080190000000003730019000000000760004900000000876700d9000000010770003900000000733700a9000000000252004900000000526200d9000000000232019f00000000322400a9000000400300043d000000200430003900000000001404350000000000230435000000400100043d000000000213004900000040022000390000004903000041000000490420009c0000000002038019000000490410009c000000000103801900000040011002100000006002200210000000000112019f000001210001042e0000012000000432000001210001042e0000012200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000f20b9d1a000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff0000000000000000000000000000000100000000000000000000000000000000fffffffffffffffffffffffffffffffe0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000fffffffffffffffffffffffffffffffe"
            },
            "methodIdentifiers": {
              "computeRewardAmount(uint256,uint160,uint256,uint256,uint128,uint160,uint160,uint256)": "f20b9d1a"
            }
          },
          "hash": "01000057d8e0c823b1856d0c62ee5733503709cc01a38f16aca8db5482150525",
          "factoryDependencies": {}
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ]
          },
          "id": 12,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:279:0",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 11,
              "linearizedBaseContracts": [
                11
              ],
              "name": "IERC165",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "362:340:0",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 10,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "734:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:20:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "777:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:6:0"
                  },
                  "scope": 11,
                  "src": "707:76:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 12,
              "src": "338:447:0"
            }
          ],
          "src": "33:753:0"
        }
      },
      "@openzeppelin/contracts/math/Math.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/math/Math.sol",
          "exportedSymbols": {
            "Math": [
              84
            ]
          },
          "id": 85,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 13,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 14,
                "nodeType": "StructuredDocumentation",
                "src": "58:73:1",
                "text": " @dev Standard math utilities missing in the Solidity language."
              },
              "fullyImplemented": true,
              "id": 84,
              "linearizedBaseContracts": [
                84
              ],
              "name": "Math",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "282:38:1",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 24,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "299:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 25,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "304:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "299:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 28,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "312:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "299:14:1",
                          "trueExpression": {
                            "id": 27,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "308:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 23,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "292:21:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 15,
                    "nodeType": "StructuredDocumentation",
                    "src": "151:59:1",
                    "text": " @dev Returns the largest of two numbers."
                  },
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "max",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "228:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "228:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "239:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "239:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "227:22:1"
                  },
                  "returnParameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "273:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "273:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "272:9:1"
                  },
                  "scope": 84,
                  "src": "215:105:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "458:37:1",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 42,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "475:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 43,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "479:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "475:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 46,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "487:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "475:13:1",
                          "trueExpression": {
                            "id": 45,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "483:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 41,
                        "id": 48,
                        "nodeType": "Return",
                        "src": "468:20:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "326:60:1",
                    "text": " @dev Returns the smallest of two numbers."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "min",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "404:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "415:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "415:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:22:1"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "449:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "448:9:1"
                  },
                  "scope": 84,
                  "src": "391:104:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "679:119:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 62,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 60,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53,
                                    "src": "751:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 61,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "755:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "751:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 63,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "750:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 66,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 64,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "761:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 65,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "765:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "761:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 67,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "760:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "750:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 75,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 71,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 69,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 53,
                                          "src": "772:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 70,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "776:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "772:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 74,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 72,
                                          "name": "b",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55,
                                          "src": "780:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 73,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "784:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "780:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "772:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 76,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "771:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "789:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "771:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "770:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "750:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 59,
                        "id": 81,
                        "nodeType": "Return",
                        "src": "743:48:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "501:102:1",
                    "text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
                  },
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "average",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "625:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "625:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "636:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "624:22:1"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "670:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "669:9:1"
                  },
                  "scope": 84,
                  "src": "608:190:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 85,
              "src": "132:668:1"
            }
          ],
          "src": "33:768:1"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              162
            ]
          },
          "id": 163,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 86,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 87,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:2",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 162,
              "linearizedBaseContracts": [
                162
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 88,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:2",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 93,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:2"
                  },
                  "returnParameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "269:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:2"
                  },
                  "scope": 162,
                  "src": "223:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:2",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 101,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "380:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:2"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "420:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:2"
                  },
                  "scope": 162,
                  "src": "361:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:2",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 111,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "667:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "686:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:2"
                  },
                  "returnParameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "720:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:2"
                  },
                  "scope": 162,
                  "src": "649:77:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 121,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "1020:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "1035:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:2"
                  },
                  "returnParameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "1075:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:2"
                  },
                  "scope": 162,
                  "src": "1001:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 122,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:2",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 131,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "1754:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "1771:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:2"
                  },
                  "returnParameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "1805:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:2"
                  },
                  "scope": 162,
                  "src": "1737:74:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 132,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:2",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "2140:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "2156:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "2175:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:51:2"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "2209:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2209:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2208:6:2"
                  },
                  "scope": 162,
                  "src": "2118:97:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 144,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 152,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "2399:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 148,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "2421:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2421:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 150,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "2441:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:57:2"
                  },
                  "src": "2384:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "2462:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 161,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "2630:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "2653:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 159,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "2678:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2678:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2629:63:2"
                  },
                  "src": "2615:78:2"
                }
              ],
              "scope": 163,
              "src": "129:2566:2"
            }
          ],
          "src": "33:2663:2"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 164,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
              "file": "../../introspection/IERC165.sol",
              "id": 165,
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 12,
              "src": "58:41:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 167,
                    "name": "IERC165",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "190:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC165_$11",
                      "typeString": "contract IERC165"
                    }
                  },
                  "id": 168,
                  "nodeType": "InheritanceSpecifier",
                  "src": "190:7:3"
                }
              ],
              "contractDependencies": [
                11
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 166,
                "nodeType": "StructuredDocumentation",
                "src": "101:67:3",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                11
              ],
              "name": "IERC721",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "204:88:3",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 177,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "312:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "334:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "354:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "354:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:67:3"
                  },
                  "src": "297:82:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 178,
                    "nodeType": "StructuredDocumentation",
                    "src": "385:94:3",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 186,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "499:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "522:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "548:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "548:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "498:74:3"
                  },
                  "src": "484:89:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "579:117:3",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 195,
                  "name": "ApprovalForAll",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "722:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "745:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "771:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "721:64:3"
                  },
                  "src": "701:85:3"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "792:76:3",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "892:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "891:15:3"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "930:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:3"
                  },
                  "scope": 278,
                  "src": "873:74:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "953:131:3",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 211,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "1106:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:17:3"
                  },
                  "returnParameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "1146:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1146:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1145:15:3"
                  },
                  "scope": 278,
                  "src": "1089:72:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "1167:690:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 221,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "1888:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "1902:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "1914:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1914:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1887:43:3"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1939:0:3"
                  },
                  "scope": 278,
                  "src": "1862:78:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "1946:504:3",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "2477:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2477:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "2491:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2491:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "2503:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2476:43:3"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2528:0:3"
                  },
                  "scope": 278,
                  "src": "2455:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "2535:452:3",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 239,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "3009:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3009:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "3021:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3021:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3008:29:3"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3046:0:3"
                  },
                  "scope": 278,
                  "src": "2992:55:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "3053:139:3",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "3218:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:17:3"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "3258:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3258:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3257:18:3"
                  },
                  "scope": 278,
                  "src": "3197:79:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 248,
                    "nodeType": "StructuredDocumentation",
                    "src": "3282:309:3",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 255,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "3623:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3623:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "3641:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3641:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3622:34:3"
                  },
                  "returnParameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3665:0:3"
                  },
                  "scope": 278,
                  "src": "3596:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 256,
                    "nodeType": "StructuredDocumentation",
                    "src": "3672:138:3",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 265,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "3841:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3841:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "3856:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3856:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3840:33:3"
                  },
                  "returnParameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "3897:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3896:6:3"
                  },
                  "scope": 278,
                  "src": "3815:88:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 266,
                    "nodeType": "StructuredDocumentation",
                    "src": "3909:568:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 277,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4508:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4508:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4522:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4534:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4551:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4551:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4507:64:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4580:0:3"
                  },
                  "scope": 278,
                  "src": "4482:99:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 279,
              "src": "169:4414:3"
            }
          ],
          "src": "33:4551:3"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ]
          },
          "id": 310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "./IERC721.sol",
              "id": 281,
              "nodeType": "ImportDirective",
              "scope": 310,
              "sourceUnit": 279,
              "src": "58:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 283,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 278,
                    "src": "251:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$278",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 284,
                  "nodeType": "InheritanceSpecifier",
                  "src": "251:7:4"
                }
              ],
              "contractDependencies": [
                11,
                278
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 282,
                "nodeType": "StructuredDocumentation",
                "src": "83:136:4",
                "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
              },
              "fullyImplemented": false,
              "id": 309,
              "linearizedBaseContracts": [
                309,
                278,
                11
              ],
              "name": "IERC721Enumerable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 285,
                    "nodeType": "StructuredDocumentation",
                    "src": "266:82:4",
                    "text": " @dev Returns the total amount of tokens stored by the contract."
                  },
                  "functionSelector": "18160ddd",
                  "id": 290,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "373:2:4"
                  },
                  "returnParameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "399:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "399:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "398:9:4"
                  },
                  "scope": 309,
                  "src": "353:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:171:4",
                    "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
                  },
                  "functionSelector": "2f745c59",
                  "id": 300,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenOfOwnerByIndex",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "619:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "634:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "618:30:4"
                  },
                  "returnParameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "672:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "672:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "671:17:4"
                  },
                  "scope": 309,
                  "src": "590:99:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 301,
                    "nodeType": "StructuredDocumentation",
                    "src": "695:164:4",
                    "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
                  },
                  "functionSelector": "4f6ccce7",
                  "id": 308,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenByIndex",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "886:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "886:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "885:15:4"
                  },
                  "returnParameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "924:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:9:4"
                  },
                  "scope": 309,
                  "src": "864:69:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 310,
              "src": "220:715:4"
            }
          ],
          "src": "33:903:4"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ],
            "IERC721Metadata": [
              336
            ]
          },
          "id": 337,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 311,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "./IERC721.sol",
              "id": 312,
              "nodeType": "ImportDirective",
              "scope": 337,
              "sourceUnit": 279,
              "src": "58:23:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 314,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 278,
                    "src": "246:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$278",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 315,
                  "nodeType": "InheritanceSpecifier",
                  "src": "246:7:5"
                }
              ],
              "contractDependencies": [
                11,
                278
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 313,
                "nodeType": "StructuredDocumentation",
                "src": "83:133:5",
                "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
              },
              "fullyImplemented": false,
              "id": 336,
              "linearizedBaseContracts": [
                336,
                278,
                11
              ],
              "name": "IERC721Metadata",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 316,
                    "nodeType": "StructuredDocumentation",
                    "src": "261:58:5",
                    "text": " @dev Returns the token collection name."
                  },
                  "functionSelector": "06fdde03",
                  "id": 321,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "337:2:5"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "363:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "362:15:5"
                  },
                  "scope": 336,
                  "src": "324:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 322,
                    "nodeType": "StructuredDocumentation",
                    "src": "384:60:5",
                    "text": " @dev Returns the token collection symbol."
                  },
                  "functionSelector": "95d89b41",
                  "id": 327,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "464:2:5"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "490:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:15:5"
                  },
                  "scope": 336,
                  "src": "449:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 328,
                    "nodeType": "StructuredDocumentation",
                    "src": "511:90:5",
                    "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
                  },
                  "functionSelector": "c87b56dd",
                  "id": 335,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenURI",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "624:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:17:5"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "664:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:15:5"
                  },
                  "scope": 336,
                  "src": "606:73:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 337,
              "src": "217:464:5"
            }
          ],
          "src": "33:649:5"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              354
            ]
          },
          "id": 355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 338,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 339,
                "nodeType": "StructuredDocumentation",
                "src": "58:152:6",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 354,
              "linearizedBaseContracts": [
                354
              ],
              "name": "IERC721Receiver",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 340,
                    "nodeType": "StructuredDocumentation",
                    "src": "243:485:6",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "759:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "777:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "791:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "808:19:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:70:6"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "847:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:8:6"
                  },
                  "scope": 354,
                  "src": "733:122:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 355,
              "src": "211:646:6"
            }
          ],
          "src": "33:825:6"
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              650
            ]
          },
          "id": 651,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 356,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 357,
                "nodeType": "StructuredDocumentation",
                "src": "58:67:7",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 650,
              "linearizedBaseContracts": [
                650
              ],
              "name": "Address",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "784:347:7",
                    "statements": [
                      {
                        "assignments": [
                          366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 366,
                            "mutability": "mutable",
                            "name": "size",
                            "nodeType": "VariableDeclaration",
                            "scope": 373,
                            "src": "981:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "981:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 367,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "981:12:7"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1068:32:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1070:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "1090:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "1078:11:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1078:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1070:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 360,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1090:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 366,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1070:4:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 368,
                        "nodeType": "InlineAssembly",
                        "src": "1059:41:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 369,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1116:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1123:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1116:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 364,
                        "id": 372,
                        "nodeType": "Return",
                        "src": "1109:15:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 358,
                    "nodeType": "StructuredDocumentation",
                    "src": "148:565:7",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
                  },
                  "id": 374,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "738:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:17:7"
                  },
                  "returnParameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "778:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "778:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:6:7"
                  },
                  "scope": 650,
                  "src": "718:413:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 407,
                    "nodeType": "Block",
                    "src": "2119:320:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 385,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2145:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$650",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$650",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2137:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 383,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2137:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2137:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2137:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 388,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "2162:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2137:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2170:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 382,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2129:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2129:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "2129:73:7"
                      },
                      {
                        "assignments": [
                          394,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 394,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 407,
                            "src": "2291:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 393,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2291:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 401,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2341:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 395,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 377,
                                "src": "2309:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2309:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 397,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "2332:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2309:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2309:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2290:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 403,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "2362:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2371:60:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 402,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2354:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2354:78:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "2354:78:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 375,
                    "nodeType": "StructuredDocumentation",
                    "src": "1137:906:7",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2067:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2067:15:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "2094:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2094:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2066:43:7"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2119:0:7"
                  },
                  "scope": 650,
                  "src": "2048:391:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "3269:82:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 419,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "3297:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 420,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "3305:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3311:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 418,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              425,
                              445
                            ],
                            "referencedDeclaration": 445,
                            "src": "3284:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3284:60:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 417,
                        "id": 423,
                        "nodeType": "Return",
                        "src": "3277:67:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 409,
                    "nodeType": "StructuredDocumentation",
                    "src": "2445:730:7",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 425,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 414,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "3202:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3202:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "3218:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3201:35:7"
                  },
                  "returnParameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 425,
                        "src": "3255:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3255:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3254:14:7"
                  },
                  "scope": 650,
                  "src": "3180:171:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 444,
                    "nodeType": "Block",
                    "src": "3690:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 438,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "3729:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 439,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3737:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3743:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 441,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 432,
                              "src": "3746:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 437,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465,
                              515
                            ],
                            "referencedDeclaration": 515,
                            "src": "3707:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3707:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 436,
                        "id": 443,
                        "nodeType": "Return",
                        "src": "3700:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 426,
                    "nodeType": "StructuredDocumentation",
                    "src": "3357:211:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 445,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3595:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3595:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3611:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3611:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3630:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3630:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3594:63:7"
                  },
                  "returnParameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3676:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3676:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3675:14:7"
                  },
                  "scope": 650,
                  "src": "3573:193:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "4241:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 458,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "4280:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 459,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "4288:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 460,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "4294:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4301:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 457,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              465,
                              515
                            ],
                            "referencedDeclaration": 515,
                            "src": "4258:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:87:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 456,
                        "id": 463,
                        "nodeType": "Return",
                        "src": "4251:94:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3772:351:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 465,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "4159:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4159:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "4175:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4175:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "4194:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4194:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4158:50:7"
                  },
                  "returnParameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "4227:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4227:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4226:14:7"
                  },
                  "scope": 650,
                  "src": "4128:224:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 514,
                    "nodeType": "Block",
                    "src": "4741:382:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 482,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4767:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$650",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$650",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4759:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 480,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4759:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4759:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "4759:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 485,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "4784:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4759:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4791:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 479,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4751:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4751:81:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "4751:81:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 492,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "4861:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 491,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "4850:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4850:18:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4870:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 490,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4842:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4842:60:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "4842:60:7"
                      },
                      {
                        "assignments": [
                          498,
                          500
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 498,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 514,
                            "src": "4973:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 497,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4973:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 500,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 514,
                            "src": "4987:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 499,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4987:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 507,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 505,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 470,
                              "src": "5042:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 501,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "5014:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5014:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 503,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "5034:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5014:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5014:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4972:75:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 509,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "5082:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 510,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "5091:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 511,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "5103:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 508,
                            "name": "_verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "5064:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5064:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 478,
                        "id": 513,
                        "nodeType": "Return",
                        "src": "5057:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 466,
                    "nodeType": "StructuredDocumentation",
                    "src": "4358:237:7",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 515,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "4631:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4631:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "4647:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4647:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "4666:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4666:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "4681:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4681:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4630:78:7"
                  },
                  "returnParameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "4727:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4727:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4726:14:7"
                  },
                  "scope": 650,
                  "src": "4600:523:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "5400:97:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 526,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "5436:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 527,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "5444:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5450:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 525,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              532,
                              567
                            ],
                            "referencedDeclaration": 567,
                            "src": "5417:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5417:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 524,
                        "id": 530,
                        "nodeType": "Return",
                        "src": "5410:80:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 516,
                    "nodeType": "StructuredDocumentation",
                    "src": "5129:166:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "5328:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5328:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "5344:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5344:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5327:35:7"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "5386:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5386:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5385:14:7"
                  },
                  "scope": 650,
                  "src": "5300:197:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "5809:288:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 535,
                                  "src": "5838:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 545,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "5827:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5827:18:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5847:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              },
                              "value": "Address: static call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              }
                            ],
                            "id": 544,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5819:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5819:67:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "5819:67:7"
                      },
                      {
                        "assignments": [
                          552,
                          554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 552,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 566,
                            "src": "5957:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 551,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5957:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 554,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 566,
                            "src": "5971:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 553,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5971:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 559,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 557,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "6016:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 555,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "5998:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "5998:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5998:23:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5956:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 561,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "6056:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 562,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "6065:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 563,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "6077:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 560,
                            "name": "_verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "6038:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6038:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 543,
                        "id": 565,
                        "nodeType": "Return",
                        "src": "6031:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "5503:173:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "5709:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "5725:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5725:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "5744:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5744:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5708:63:7"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "5795:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5795:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5794:14:7"
                  },
                  "scope": 650,
                  "src": "5681:416:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 583,
                    "nodeType": "Block",
                    "src": "6373:101:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 578,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 570,
                              "src": "6411:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 579,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 572,
                              "src": "6419:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6425:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 577,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              584,
                              619
                            ],
                            "referencedDeclaration": 619,
                            "src": "6390:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:77:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 576,
                        "id": 582,
                        "nodeType": "Return",
                        "src": "6383:84:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "6103:168:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 570,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "6306:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6306:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "6322:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6322:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6305:35:7"
                  },
                  "returnParameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "6359:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6359:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6358:14:7"
                  },
                  "scope": 650,
                  "src": "6276:198:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "6785:292:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 598,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 587,
                                  "src": "6814:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 597,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "6803:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6803:18:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6823:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              },
                              "value": "Address: delegate call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              }
                            ],
                            "id": 596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6795:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6795:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "6795:69:7"
                      },
                      {
                        "assignments": [
                          604,
                          606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 604,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 618,
                            "src": "6935:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 603,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6935:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 618,
                            "src": "6949:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6949:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 611,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 609,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "6996:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 607,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "6976:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "6976:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6976:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6934:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 613,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "7036:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 614,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 606,
                              "src": "7045:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 615,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "7057:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 612,
                            "name": "_verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "7018:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7018:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 595,
                        "id": 617,
                        "nodeType": "Return",
                        "src": "7011:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "6480:175:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "6690:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6690:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "6706:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6706:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "6725:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6725:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6689:63:7"
                  },
                  "returnParameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "6771:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6771:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6770:14:7"
                  },
                  "scope": 650,
                  "src": "6660:417:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "7212:596:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 630,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "7226:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 646,
                          "nodeType": "Block",
                          "src": "7283:519:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 634,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 623,
                                    "src": "7367:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7367:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7387:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7367:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 644,
                                "nodeType": "Block",
                                "src": "7739:53:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 641,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 625,
                                          "src": "7764:12:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 640,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "7757:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 642,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7757:20:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 643,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7757:20:7"
                                  }
                                ]
                              },
                              "id": 645,
                              "nodeType": "IfStatement",
                              "src": "7363:429:7",
                              "trueBody": {
                                "id": 639,
                                "nodeType": "Block",
                                "src": "7390:343:7",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "7574:145:7",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "7596:40:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "7625:10:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "7619:5:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7619:17:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "7600:15:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7668:2:7",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7672:10:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7664:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7664:19:7"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "7685:15:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "7657:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7657:44:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7657:44:7"
                                        }
                                      ]
                                    },
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                      {
                                        "declaration": 623,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "7625:10:7",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 623,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "7672:10:7",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 638,
                                    "nodeType": "InlineAssembly",
                                    "src": "7565:154:7"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 647,
                        "nodeType": "IfStatement",
                        "src": "7222:580:7",
                        "trueBody": {
                          "id": 633,
                          "nodeType": "Block",
                          "src": "7235:42:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 631,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "7256:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 629,
                              "id": 632,
                              "nodeType": "Return",
                              "src": "7249:17:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 649,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_verifyCallResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "7110:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7110:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "7124:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7124:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "7149:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7149:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7109:67:7"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "7198:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7198:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7197:14:7"
                  },
                  "scope": 650,
                  "src": "7083:725:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 651,
              "src": "126:7684:7"
            }
          ],
          "src": "33:7778:7"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
          "exportedSymbols": {
            "IERC20Minimal": [
              722
            ]
          },
          "id": 723,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 652,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 653,
                "nodeType": "StructuredDocumentation",
                "src": "71:132:8",
                "text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
              },
              "fullyImplemented": false,
              "id": 722,
              "linearizedBaseContracts": [
                722
              ],
              "name": "IERC20Minimal",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 654,
                    "nodeType": "StructuredDocumentation",
                    "src": "233:201:8",
                    "text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
                  },
                  "functionSelector": "70a08231",
                  "id": 661,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 656,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 661,
                        "src": "458:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "457:17:8"
                  },
                  "returnParameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 661,
                        "src": "498:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "498:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "497:9:8"
                  },
                  "scope": 722,
                  "src": "439:68:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 662,
                    "nodeType": "StructuredDocumentation",
                    "src": "513:333:8",
                    "text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
                  },
                  "functionSelector": "a9059cbb",
                  "id": 671,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "869:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "869:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "888:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "868:35:8"
                  },
                  "returnParameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "922:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "922:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "921:6:8"
                  },
                  "scope": 722,
                  "src": "851:77:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 672,
                    "nodeType": "StructuredDocumentation",
                    "src": "934:250:8",
                    "text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 681,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "1208:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1208:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "1223:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1207:32:8"
                  },
                  "returnParameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "1263:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1262:9:8"
                  },
                  "scope": 722,
                  "src": "1189:83:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:343:8",
                    "text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
                  },
                  "functionSelector": "095ea7b3",
                  "id": 691,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 691,
                        "src": "1643:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1643:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 691,
                        "src": "1660:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1660:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1642:33:8"
                  },
                  "returnParameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 691,
                        "src": "1694:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1694:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1693:6:8"
                  },
                  "scope": 722,
                  "src": "1626:74:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 692,
                    "nodeType": "StructuredDocumentation",
                    "src": "1706:371:8",
                    "text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
                  },
                  "functionSelector": "23b872dd",
                  "id": 703,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 699,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "2113:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "2137:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2137:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 698,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "2164:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 697,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2103:81:8"
                  },
                  "returnParameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "2203:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2202:6:8"
                  },
                  "scope": 722,
                  "src": "2082:127:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 704,
                    "nodeType": "StructuredDocumentation",
                    "src": "2215:369:8",
                    "text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
                  },
                  "id": 712,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "2604:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 708,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "2626:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2626:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 710,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "2646:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2603:57:8"
                  },
                  "src": "2589:72:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 713,
                    "nodeType": "StructuredDocumentation",
                    "src": "2667:321:8",
                    "text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
                  },
                  "id": 721,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 715,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "3008:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 717,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "3031:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3031:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 719,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "3056:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3007:63:8"
                  },
                  "src": "2993:78:8"
                }
              ],
              "scope": 723,
              "src": "203:2870:8"
            }
          ],
          "src": "45:3029:8"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
          "exportedSymbols": {
            "IUniswapV3Factory": [
              805
            ]
          },
          "id": 806,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 724,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 725,
                "nodeType": "StructuredDocumentation",
                "src": "71:163:9",
                "text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
              },
              "fullyImplemented": false,
              "id": 805,
              "linearizedBaseContracts": [
                805
              ],
              "name": "IUniswapV3Factory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 726,
                    "nodeType": "StructuredDocumentation",
                    "src": "268:185:9",
                    "text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
                  },
                  "id": 732,
                  "name": "OwnerChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 732,
                        "src": "477:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "477:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 730,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 732,
                        "src": "503:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "503:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "476:52:9"
                  },
                  "src": "458:71:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 733,
                    "nodeType": "StructuredDocumentation",
                    "src": "535:421:9",
                    "text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
                  },
                  "id": 745,
                  "name": "PoolCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 735,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "988:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "988:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "1020:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "1052:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1052:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tickSpacing",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "1080:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "1107:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1107:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "978:147:9"
                  },
                  "src": "961:165:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 746,
                    "nodeType": "StructuredDocumentation",
                    "src": "1132:275:9",
                    "text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
                  },
                  "id": 752,
                  "name": "FeeAmountEnabled",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 748,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "1435:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickSpacing",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "1455:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1455:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1434:47:9"
                  },
                  "src": "1412:70:9"
                },
                {
                  "documentation": {
                    "id": 753,
                    "nodeType": "StructuredDocumentation",
                    "src": "1488:163:9",
                    "text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 758,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 754,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1670:2:9"
                  },
                  "returnParameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 758,
                        "src": "1696:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1696:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1695:9:9"
                  },
                  "scope": 805,
                  "src": "1656:49:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 759,
                    "nodeType": "StructuredDocumentation",
                    "src": "1711:348:9",
                    "text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
                  },
                  "functionSelector": "22afcccb",
                  "id": 766,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeAmountTickSpacing",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 766,
                        "src": "2094:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2094:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2093:12:9"
                  },
                  "returnParameters": {
                    "id": 765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 766,
                        "src": "2129:5:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2129:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2128:7:9"
                  },
                  "scope": 805,
                  "src": "2064:72:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 767,
                    "nodeType": "StructuredDocumentation",
                    "src": "2142:471:9",
                    "text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
                  },
                  "functionSelector": "1698ee82",
                  "id": 778,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "2644:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2644:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "2668:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "2692:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2692:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2634:74:9"
                  },
                  "returnParameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 778,
                        "src": "2732:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2732:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2731:14:9"
                  },
                  "scope": 805,
                  "src": "2618:128:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 779,
                    "nodeType": "StructuredDocumentation",
                    "src": "2752:554:9",
                    "text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
                  },
                  "functionSelector": "a1671295",
                  "id": 790,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 781,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "3340:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 780,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "3364:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3364:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "3388:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3388:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3330:74:9"
                  },
                  "returnParameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 788,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "3423:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3423:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3422:14:9"
                  },
                  "scope": 805,
                  "src": "3311:126:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 791,
                    "nodeType": "StructuredDocumentation",
                    "src": "3443:144:9",
                    "text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
                  },
                  "functionSelector": "13af4035",
                  "id": 796,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "3610:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3610:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3609:16:9"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3634:0:9"
                  },
                  "scope": 805,
                  "src": "3592:43:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "3641:326:9",
                    "text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
                  },
                  "functionSelector": "8a7c195f",
                  "id": 804,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "enableFeeAmount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "3997:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3997:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "tickSpacing",
                        "nodeType": "VariableDeclaration",
                        "scope": 804,
                        "src": "4009:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "4009:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3996:31:9"
                  },
                  "returnParameters": {
                    "id": 803,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4036:0:9"
                  },
                  "scope": 805,
                  "src": "3972:65:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 806,
              "src": "234:3805:9"
            }
          ],
          "src": "45:3995:9"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
          "exportedSymbols": {
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ]
          },
          "id": 828,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 807,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:10"
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
              "file": "./pool/IUniswapV3PoolImmutables.sol",
              "id": 808,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 1114,
              "src": "71:45:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
              "file": "./pool/IUniswapV3PoolState.sol",
              "id": 809,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 1248,
              "src": "117:40:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
              "file": "./pool/IUniswapV3PoolDerivedState.sol",
              "id": 810,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 955,
              "src": "158:47:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
              "file": "./pool/IUniswapV3PoolActions.sol",
              "id": 811,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 924,
              "src": "206:42:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
              "file": "./pool/IUniswapV3PoolOwnerActions.sol",
              "id": 812,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 1140,
              "src": "249:47:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
              "file": "./pool/IUniswapV3PoolEvents.sol",
              "id": 813,
              "nodeType": "ImportDirective",
              "scope": 828,
              "sourceUnit": 1074,
              "src": "297:41:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 815,
                    "name": "IUniswapV3PoolImmutables",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1113,
                    "src": "637:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$1113",
                      "typeString": "contract IUniswapV3PoolImmutables"
                    }
                  },
                  "id": 816,
                  "nodeType": "InheritanceSpecifier",
                  "src": "637:24:10"
                },
                {
                  "baseName": {
                    "id": 817,
                    "name": "IUniswapV3PoolState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1247,
                    "src": "667:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolState_$1247",
                      "typeString": "contract IUniswapV3PoolState"
                    }
                  },
                  "id": 818,
                  "nodeType": "InheritanceSpecifier",
                  "src": "667:19:10"
                },
                {
                  "baseName": {
                    "id": 819,
                    "name": "IUniswapV3PoolDerivedState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 954,
                    "src": "692:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$954",
                      "typeString": "contract IUniswapV3PoolDerivedState"
                    }
                  },
                  "id": 820,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:26:10"
                },
                {
                  "baseName": {
                    "id": 821,
                    "name": "IUniswapV3PoolActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 923,
                    "src": "724:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolActions_$923",
                      "typeString": "contract IUniswapV3PoolActions"
                    }
                  },
                  "id": 822,
                  "nodeType": "InheritanceSpecifier",
                  "src": "724:21:10"
                },
                {
                  "baseName": {
                    "id": 823,
                    "name": "IUniswapV3PoolOwnerActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1139,
                    "src": "751:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$1139",
                      "typeString": "contract IUniswapV3PoolOwnerActions"
                    }
                  },
                  "id": 824,
                  "nodeType": "InheritanceSpecifier",
                  "src": "751:26:10"
                },
                {
                  "baseName": {
                    "id": 825,
                    "name": "IUniswapV3PoolEvents",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1073,
                    "src": "783:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$1073",
                      "typeString": "contract IUniswapV3PoolEvents"
                    }
                  },
                  "id": 826,
                  "nodeType": "InheritanceSpecifier",
                  "src": "783:20:10"
                }
              ],
              "contractDependencies": [
                923,
                954,
                1073,
                1113,
                1139,
                1247
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 814,
                "nodeType": "StructuredDocumentation",
                "src": "340:265:10",
                "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
              },
              "fullyImplemented": false,
              "id": 827,
              "linearizedBaseContracts": [
                827,
                1073,
                1139,
                923,
                954,
                1247,
                1113
              ],
              "name": "IUniswapV3Pool",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 828,
              "src": "605:203:10"
            }
          ],
          "src": "45:764:10"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
          "exportedSymbols": {
            "IUniswapV3PoolActions": [
              923
            ]
          },
          "id": 924,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 829,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 830,
                "nodeType": "StructuredDocumentation",
                "src": "71:102:11",
                "text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
              },
              "fullyImplemented": false,
              "id": 923,
              "linearizedBaseContracts": [
                923
              ],
              "name": "IUniswapV3PoolActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 831,
                    "nodeType": "StructuredDocumentation",
                    "src": "211:206:11",
                    "text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
                  },
                  "functionSelector": "f637731d",
                  "id": 836,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "442:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "442:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "441:22:11"
                  },
                  "returnParameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "472:0:11"
                  },
                  "scope": 923,
                  "src": "422:51:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 837,
                    "nodeType": "StructuredDocumentation",
                    "src": "479:1029:11",
                    "text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
                  },
                  "functionSelector": "3c8a7d8d",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1536:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1563:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1588:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1588:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1613:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1613:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1637:19:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1637:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1526:136:11"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1681:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1681:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1698:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1698:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1680:34:11"
                  },
                  "scope": 923,
                  "src": "1513:202:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1721:1053:11",
                    "text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "4f1eb3d8",
                  "id": 872,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2805:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2805:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2832:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2857:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2857:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "amount0Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2882:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 865,
                        "mutability": "mutable",
                        "name": "amount1Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2916:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 864,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2916:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2795:151:11"
                  },
                  "returnParameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2965:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2965:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "2982:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2964:34:11"
                  },
                  "scope": 923,
                  "src": "2779:220:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 873,
                    "nodeType": "StructuredDocumentation",
                    "src": "3005:631:11",
                    "text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
                  },
                  "functionSelector": "a34123a7",
                  "id": 886,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "3664:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3664:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 877,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "3689:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3689:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 879,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "3714:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 878,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3714:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3654:80:11"
                  },
                  "returnParameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 882,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "3753:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3753:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 884,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "3770:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3770:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3752:34:11"
                  },
                  "scope": 923,
                  "src": "3641:146:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 887,
                    "nodeType": "StructuredDocumentation",
                    "src": "3793:1015:11",
                    "text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
                  },
                  "functionSelector": "128acb08",
                  "id": 904,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 889,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4836:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 888,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4836:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 891,
                        "mutability": "mutable",
                        "name": "zeroForOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4863:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4863:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "amountSpecified",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4888:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4888:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "sqrtPriceLimitX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4920:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "4920:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4955:19:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4955:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4826:154:11"
                  },
                  "returnParameters": {
                    "id": 903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "4999:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4999:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 902,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "5015:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 901,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5015:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4998:32:11"
                  },
                  "scope": 923,
                  "src": "4813:218:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 905,
                    "nodeType": "StructuredDocumentation",
                    "src": "5037:657:11",
                    "text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
                  },
                  "functionSelector": "490e6cbc",
                  "id": 916,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 914,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "5723:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5723:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "5750:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5750:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "5775:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5775:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "5800:19:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5800:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5713:112:11"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5834:0:11"
                  },
                  "scope": 923,
                  "src": "5699:136:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 917,
                    "nodeType": "StructuredDocumentation",
                    "src": "5841:367:11",
                    "text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
                  },
                  "functionSelector": "32148f67",
                  "id": 922,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseObservationCardinalityNext",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "observationCardinalityNext",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "6257:33:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "6257:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6256:35:11"
                  },
                  "returnParameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6300:0:11"
                  },
                  "scope": 923,
                  "src": "6213:88:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 924,
              "src": "173:6130:11"
            }
          ],
          "src": "45:6259:11"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
          "exportedSymbols": {
            "IUniswapV3PoolDerivedState": [
              954
            ]
          },
          "id": 955,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 925,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 926,
                "nodeType": "StructuredDocumentation",
                "src": "71:222:12",
                "text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
              },
              "fullyImplemented": false,
              "id": 954,
              "linearizedBaseContracts": [
                954
              ],
              "name": "IUniswapV3PoolDerivedState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 927,
                    "nodeType": "StructuredDocumentation",
                    "src": "336:1045:12",
                    "text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
                  },
                  "functionSelector": "883bdbfd",
                  "id": 939,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "observe",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "secondsAgos",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "1403:29:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 928,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1403:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 929,
                          "nodeType": "ArrayTypeName",
                          "src": "1403:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1402:31:12"
                  },
                  "returnParameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "tickCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "1481:30:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 932,
                            "name": "int56",
                            "nodeType": "ElementaryTypeName",
                            "src": "1481:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "id": 933,
                          "nodeType": "ArrayTypeName",
                          "src": "1481:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                            "typeString": "int56[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulativeX128s",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "1513:51:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                          "typeString": "uint160[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 935,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1513:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "id": 936,
                          "nodeType": "ArrayTypeName",
                          "src": "1513:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                            "typeString": "uint160[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1480:85:12"
                  },
                  "scope": 954,
                  "src": "1386:180:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 940,
                    "nodeType": "StructuredDocumentation",
                    "src": "1572:771:12",
                    "text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
                  },
                  "functionSelector": "a38807f2",
                  "id": 953,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "snapshotCumulativesInside",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 945,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2383:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 944,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2400:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 943,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2400:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2382:34:12"
                  },
                  "returnParameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "tickCumulativeInside",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2477:26:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "2477:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2517:37:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "2517:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "secondsInside",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2568:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2568:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2463:135:12"
                  },
                  "scope": 954,
                  "src": "2348:251:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 955,
              "src": "293:2308:12"
            }
          ],
          "src": "45:2557:12"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "id": 13,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
          "exportedSymbols": {
            "IUniswapV3PoolEvents": [
              1073
            ]
          },
          "id": 1074,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 956,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 957,
                "nodeType": "StructuredDocumentation",
                "src": "71:88:13",
                "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
              },
              "fullyImplemented": true,
              "id": 1073,
              "linearizedBaseContracts": [
                1073
              ],
              "name": "IUniswapV3PoolEvents",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 958,
                    "nodeType": "StructuredDocumentation",
                    "src": "196:344:13",
                    "text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
                  },
                  "id": 964,
                  "name": "Initialize",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 960,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "562:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 959,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "562:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 962,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "584:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 961,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "561:34:13"
                  },
                  "src": "545:51:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 965,
                    "nodeType": "StructuredDocumentation",
                    "src": "602:551:13",
                    "text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
                  },
                  "id": 981,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1178:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1178:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 969,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1202:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1202:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1233:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 973,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1266:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 975,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1299:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1323:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 979,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "1348:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 978,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1348:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1168:201:13"
                  },
                  "src": "1158:212:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "1376:493:13",
                    "text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
                  },
                  "id": 996,
                  "name": "Collect",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1897:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1897:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1928:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1928:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1955:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1955:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1988:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 992,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "2021:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2021:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 994,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "2046:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2046:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1887:180:13"
                  },
                  "src": "1874:194:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 997,
                    "nodeType": "StructuredDocumentation",
                    "src": "2074:523:13",
                    "text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
                  },
                  "id": 1011,
                  "name": "Burn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2622:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2622:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2653:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2686:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2719:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2719:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2743:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1009,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "2768:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2768:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2612:177:13"
                  },
                  "src": "2602:188:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1012,
                    "nodeType": "StructuredDocumentation",
                    "src": "2796:600:13",
                    "text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
                  },
                  "id": 1028,
                  "name": "Swap",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3421:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3421:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1016,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3453:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3453:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1018,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3488:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3488:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1020,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3512:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3512:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3536:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3536:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1024,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3566:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1026,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "3593:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3593:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3411:198:13"
                  },
                  "src": "3401:209:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1029,
                    "nodeType": "StructuredDocumentation",
                    "src": "3616:562:13",
                    "text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
                  },
                  "id": 1043,
                  "name": "Flash",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4204:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4204:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4236:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4236:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4271:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4271:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4296:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4296:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4321:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4321:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1043,
                        "src": "4344:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4344:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4194:169:13"
                  },
                  "src": "4183:181:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1044,
                    "nodeType": "StructuredDocumentation",
                    "src": "4370:451:13",
                    "text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
                  },
                  "id": 1050,
                  "name": "IncreaseObservationCardinalityNext",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1046,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "observationCardinalityNextOld",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "4876:36:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1048,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "observationCardinalityNextNew",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "4922:36:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4922:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4866:98:13"
                  },
                  "src": "4826:139:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1051,
                    "nodeType": "StructuredDocumentation",
                    "src": "4971:370:13",
                    "text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
                  },
                  "id": 1061,
                  "name": "SetFeeProtocol",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1053,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeProtocol0Old",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "5367:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5367:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1055,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeProtocol1Old",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "5390:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5390:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeProtocol0New",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "5413:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5413:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1059,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeProtocol1New",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "5436:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5366:92:13"
                  },
                  "src": "5346:113:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1062,
                    "nodeType": "StructuredDocumentation",
                    "src": "5465:384:13",
                    "text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
                  },
                  "id": 1072,
                  "name": "CollectProtocol",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "5876:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5876:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "5900:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5900:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "5927:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5927:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "5944:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5944:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5875:85:13"
                  },
                  "src": "5854:107:13"
                }
              ],
              "scope": 1074,
              "src": "159:5804:13"
            }
          ],
          "src": "45:5919:13"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "id": 14,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
          "exportedSymbols": {
            "IUniswapV3PoolImmutables": [
              1113
            ]
          },
          "id": 1114,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1075,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1076,
                "nodeType": "StructuredDocumentation",
                "src": "71:153:14",
                "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
              },
              "fullyImplemented": false,
              "id": 1113,
              "linearizedBaseContracts": [
                1113
              ],
              "name": "IUniswapV3PoolImmutables",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1077,
                    "nodeType": "StructuredDocumentation",
                    "src": "265:138:14",
                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                  },
                  "functionSelector": "c45a0155",
                  "id": 1082,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "424:2:14"
                  },
                  "returnParameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1082,
                        "src": "450:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "450:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "449:9:14"
                  },
                  "scope": 1113,
                  "src": "408:51:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1083,
                    "nodeType": "StructuredDocumentation",
                    "src": "465:113:14",
                    "text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "0dfe1681",
                  "id": 1088,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "598:2:14"
                  },
                  "returnParameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "624:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:9:14"
                  },
                  "scope": 1113,
                  "src": "583:50:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1089,
                    "nodeType": "StructuredDocumentation",
                    "src": "639:114:14",
                    "text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "d21220a7",
                  "id": 1094,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "773:2:14"
                  },
                  "returnParameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1094,
                        "src": "799:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "798:9:14"
                  },
                  "scope": 1113,
                  "src": "758:50:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1095,
                    "nodeType": "StructuredDocumentation",
                    "src": "814:84:14",
                    "text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
                  },
                  "functionSelector": "ddca3f43",
                  "id": 1100,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "915:2:14"
                  },
                  "returnParameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "941:6:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "941:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "940:8:14"
                  },
                  "scope": 1113,
                  "src": "903:46:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1101,
                    "nodeType": "StructuredDocumentation",
                    "src": "955:358:14",
                    "text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
                  },
                  "functionSelector": "d0c93a7c",
                  "id": 1106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickSpacing",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1338:2:14"
                  },
                  "returnParameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1364:5:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1364:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1363:7:14"
                  },
                  "scope": 1113,
                  "src": "1318:53:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1107,
                    "nodeType": "StructuredDocumentation",
                    "src": "1377:363:14",
                    "text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
                  },
                  "functionSelector": "70cf754a",
                  "id": 1112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxLiquidityPerTick",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:14"
                  },
                  "returnParameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "1799:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1799:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1798:9:14"
                  },
                  "scope": 1113,
                  "src": "1745:63:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1114,
              "src": "224:1586:14"
            }
          ],
          "src": "45:1766:14"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "id": 15,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
          "exportedSymbols": {
            "IUniswapV3PoolOwnerActions": [
              1139
            ]
          },
          "id": 1140,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1115,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1116,
                "nodeType": "StructuredDocumentation",
                "src": "71:116:15",
                "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
              },
              "fullyImplemented": false,
              "id": 1139,
              "linearizedBaseContracts": [
                1139
              ],
              "name": "IUniswapV3PoolOwnerActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1117,
                    "nodeType": "StructuredDocumentation",
                    "src": "230:205:15",
                    "text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
                  },
                  "functionSelector": "8206a4d1",
                  "id": 1124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeProtocol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1119,
                        "mutability": "mutable",
                        "name": "feeProtocol0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1124,
                        "src": "464:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1118,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "feeProtocol1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1124,
                        "src": "484:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "463:40:15"
                  },
                  "returnParameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "512:0:15"
                  },
                  "scope": 1139,
                  "src": "440:73:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1125,
                    "nodeType": "StructuredDocumentation",
                    "src": "519:483:15",
                    "text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
                  },
                  "functionSelector": "85b66729",
                  "id": 1138,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collectProtocol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1127,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "1041:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1041:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1129,
                        "mutability": "mutable",
                        "name": "amount0Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "1068:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1131,
                        "mutability": "mutable",
                        "name": "amount1Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "1102:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1130,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1031:101:15"
                  },
                  "returnParameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1134,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "1151:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1136,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "1168:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1150:34:15"
                  },
                  "scope": 1139,
                  "src": "1007:178:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1140,
              "src": "187:1000:15"
            }
          ],
          "src": "45:1143:15"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "id": 16,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
          "exportedSymbols": {
            "IUniswapV3PoolState": [
              1247
            ]
          },
          "id": 1248,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1141,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:16"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1142,
                "nodeType": "StructuredDocumentation",
                "src": "71:169:16",
                "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
              },
              "fullyImplemented": false,
              "id": 1247,
              "linearizedBaseContracts": [
                1247
              ],
              "name": "IUniswapV3PoolState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1143,
                    "nodeType": "StructuredDocumentation",
                    "src": "276:1140:16",
                    "text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
                  },
                  "functionSelector": "3850c7bd",
                  "id": 1160,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "slot0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1435:2:16"
                  },
                  "returnParameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1498:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1498:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1532:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1532:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "observationIndex",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1556:23:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1556:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "observationCardinality",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1593:29:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "observationCardinalityNext",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1636:33:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1636:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1156,
                        "mutability": "mutable",
                        "name": "feeProtocol",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1683:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1155,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1683:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1158,
                        "mutability": "mutable",
                        "name": "unlocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1714:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1484:253:16"
                  },
                  "scope": 1247,
                  "src": "1421:317:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1161,
                    "nodeType": "StructuredDocumentation",
                    "src": "1744:168:16",
                    "text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "f3058399",
                  "id": 1166,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeGrowthGlobal0X128",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1946:2:16"
                  },
                  "returnParameters": {
                    "id": 1165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1166,
                        "src": "1972:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1972:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1971:9:16"
                  },
                  "scope": 1247,
                  "src": "1917:64:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1167,
                    "nodeType": "StructuredDocumentation",
                    "src": "1987:168:16",
                    "text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "46141319",
                  "id": 1172,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeGrowthGlobal1X128",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2189:2:16"
                  },
                  "returnParameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "2215:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2215:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2214:9:16"
                  },
                  "scope": 1247,
                  "src": "2160:64:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1173,
                    "nodeType": "StructuredDocumentation",
                    "src": "2230:147:16",
                    "text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
                  },
                  "functionSelector": "1ad8b03b",
                  "id": 1180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "protocolFees",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2403:2:16"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "2429:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "2445:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:32:16"
                  },
                  "scope": 1247,
                  "src": "2382:79:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1181,
                    "nodeType": "StructuredDocumentation",
                    "src": "2467:150:16",
                    "text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
                  },
                  "functionSelector": "1a686502",
                  "id": 1186,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2640:2:16"
                  },
                  "returnParameters": {
                    "id": 1185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1186,
                        "src": "2666:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2665:9:16"
                  },
                  "scope": 1247,
                  "src": "2622:53:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1187,
                    "nodeType": "StructuredDocumentation",
                    "src": "2681:1244:16",
                    "text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
                  },
                  "functionSelector": "f30dba93",
                  "id": 1208,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ticks",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "3945:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3945:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3944:12:16"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "liquidityGross",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4017:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4017:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "liquidityNet",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4053:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4053:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "feeGrowthOutside0X128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4086:29:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4086:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "feeGrowthOutside1X128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4129:29:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4129:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "tickCumulativeOutside",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4172:27:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "4172:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityOutsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4213:38:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "4213:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "secondsOutside",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4265:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4265:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "4300:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4300:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:323:16"
                  },
                  "scope": 1247,
                  "src": "3930:397:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1209,
                    "nodeType": "StructuredDocumentation",
                    "src": "4333:99:16",
                    "text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
                  },
                  "functionSelector": "5339c296",
                  "id": 1216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickBitmap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "wordPosition",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "4457:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int16",
                          "typeString": "int16"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "int16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4457:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int16",
                            "typeString": "int16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4456:20:16"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "4500:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4500:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4499:9:16"
                  },
                  "scope": 1247,
                  "src": "4437:72:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1217,
                    "nodeType": "StructuredDocumentation",
                    "src": "4515:700:16",
                    "text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
                  },
                  "functionSelector": "514ea4bf",
                  "id": 1232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1219,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5239:11:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1218,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5239:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5238:13:16"
                  },
                  "returnParameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "_liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5312:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5312:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "feeGrowthInside0LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5344:32:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5344:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "feeGrowthInside1LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5390:32:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5390:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "tokensOwed0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5436:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "tokensOwed1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1232,
                        "src": "5469:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5469:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5298:200:16"
                  },
                  "scope": 1247,
                  "src": "5220:279:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "5505:749:16",
                    "text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
                  },
                  "functionSelector": "252c09d7",
                  "id": 1246,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "observations",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "6281:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6281:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6280:15:16"
                  },
                  "returnParameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "6356:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6356:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "6391:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "6391:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1242,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulativeX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "6425:41:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6425:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "6480:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1243,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6480:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6342:164:16"
                  },
                  "scope": 1247,
                  "src": "6259:248:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1248,
              "src": "240:6269:16"
            }
          ],
          "src": "45:6465:16"
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol": {
        "id": 17,
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
          "exportedSymbols": {
            "FullMath": [
              1420
            ]
          },
          "id": 1421,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1249,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1250,
                "nodeType": "StructuredDocumentation",
                "src": "58:297:17",
                "text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
              },
              "fullyImplemented": true,
              "id": 1420,
              "linearizedBaseContracts": [
                1420
              ],
              "name": "FullMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "870:3648:17",
                    "statements": [
                      {
                        "assignments": [
                          1263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1263,
                            "mutability": "mutable",
                            "name": "prod0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1375,
                            "src": "1183:13:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1262,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1183:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1264,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1183:13:17"
                      },
                      {
                        "assignments": [
                          1266
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1266,
                            "mutability": "mutable",
                            "name": "prod1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1375,
                            "src": "1251:13:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1265,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1251:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1267,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1251:13:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1327:141:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1341:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "a",
                                    "nodeType": "YulIdentifier",
                                    "src": "1358:1:17"
                                  },
                                  {
                                    "name": "b",
                                    "nodeType": "YulIdentifier",
                                    "src": "1361:1:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1368:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1364:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1364:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1351:20:17"
                              },
                              "variables": [
                                {
                                  "name": "mm",
                                  "nodeType": "YulTypedName",
                                  "src": "1345:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1384:18:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "a",
                                    "nodeType": "YulIdentifier",
                                    "src": "1397:1:17"
                                  },
                                  {
                                    "name": "b",
                                    "nodeType": "YulIdentifier",
                                    "src": "1400:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1393:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1393:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "prod0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1384:5:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1415:43:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "mm",
                                        "nodeType": "YulIdentifier",
                                        "src": "1432:2:17"
                                      },
                                      {
                                        "name": "prod0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1436:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1428:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1428:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "mm",
                                        "nodeType": "YulIdentifier",
                                        "src": "1447:2:17"
                                      },
                                      {
                                        "name": "prod0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1451:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1444:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1444:13:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1424:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1424:34:17"
                              },
                              "variableNames": [
                                {
                                  "name": "prod1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1415:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1253,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1358:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1253,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1397:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1255,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1361:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1255,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1400:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1384:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1436:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1451:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1266,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1415:5:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1268,
                        "nodeType": "InlineAssembly",
                        "src": "1318:150:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1269,
                            "name": "prod1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "1540:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1549:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1540:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1282,
                        "nodeType": "IfStatement",
                        "src": "1536:179:17",
                        "trueBody": {
                          "id": 1281,
                          "nodeType": "Block",
                          "src": "1552:163:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1273,
                                      "name": "denominator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1257,
                                      "src": "1574:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1588:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1574:15:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1272,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1566:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1566:24:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1277,
                              "nodeType": "ExpressionStatement",
                              "src": "1566:24:17"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "1613:65:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1631:33:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "prod0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1645:5:17"
                                        },
                                        {
                                          "name": "denominator",
                                          "nodeType": "YulIdentifier",
                                          "src": "1652:11:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "div",
                                        "nodeType": "YulIdentifier",
                                        "src": "1641:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1641:23:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "result",
                                        "nodeType": "YulIdentifier",
                                        "src": "1631:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 1257,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "1652:11:17",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1263,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "1645:5:17",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1260,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "1631:6:17",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1278,
                              "nodeType": "InlineAssembly",
                              "src": "1604:74:17"
                            },
                            {
                              "expression": {
                                "id": 1279,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1260,
                                "src": "1698:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1261,
                              "id": 1280,
                              "nodeType": "Return",
                              "src": "1691:13:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1284,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "1828:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1285,
                                "name": "prod1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1266,
                                "src": "1842:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1828:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1283,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1820:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1820:28:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "1820:28:17"
                      },
                      {
                        "assignments": [
                          1290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1290,
                            "mutability": "mutable",
                            "name": "remainder",
                            "nodeType": "VariableDeclaration",
                            "scope": 1375,
                            "src": "2125:17:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2125:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1291,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2125:17:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2161:62:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2175:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "a",
                                    "nodeType": "YulIdentifier",
                                    "src": "2195:1:17"
                                  },
                                  {
                                    "name": "b",
                                    "nodeType": "YulIdentifier",
                                    "src": "2198:1:17"
                                  },
                                  {
                                    "name": "denominator",
                                    "nodeType": "YulIdentifier",
                                    "src": "2201:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2188:25:17"
                              },
                              "variableNames": [
                                {
                                  "name": "remainder",
                                  "nodeType": "YulIdentifier",
                                  "src": "2175:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1253,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2195:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1255,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2198:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1257,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2201:11:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1290,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2175:9:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1292,
                        "nodeType": "InlineAssembly",
                        "src": "2152:71:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2296:108:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2310:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "prod1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2323:5:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "remainder",
                                        "nodeType": "YulIdentifier",
                                        "src": "2333:9:17"
                                      },
                                      {
                                        "name": "prod0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2344:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2330:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2330:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2319:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2319:32:17"
                              },
                              "variableNames": [
                                {
                                  "name": "prod1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:5:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2364:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "prod0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2377:5:17"
                                  },
                                  {
                                    "name": "remainder",
                                    "nodeType": "YulIdentifier",
                                    "src": "2384:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2373:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2373:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "prod0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2364:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2344:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2364:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2377:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1266,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2310:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1266,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2323:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1290,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2333:9:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1290,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2384:9:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1293,
                        "nodeType": "InlineAssembly",
                        "src": "2287:117:17"
                      },
                      {
                        "assignments": [
                          1295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1295,
                            "mutability": "mutable",
                            "name": "twos",
                            "nodeType": "VariableDeclaration",
                            "scope": 1375,
                            "src": "2553:12:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1294,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2553:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1300,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "2568:12:17",
                            "subExpression": {
                              "id": 1296,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "2569:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "id": 1298,
                            "name": "denominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "2583:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2568:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2553:41:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2659:61:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2673:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "denominator",
                                    "nodeType": "YulIdentifier",
                                    "src": "2692:11:17"
                                  },
                                  {
                                    "name": "twos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2705:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2688:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2688:22:17"
                              },
                              "variableNames": [
                                {
                                  "name": "denominator",
                                  "nodeType": "YulIdentifier",
                                  "src": "2673:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1257,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2673:11:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1257,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2692:11:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2705:4:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1301,
                        "nodeType": "InlineAssembly",
                        "src": "2650:70:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2793:49:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2807:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "prod0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2820:5:17"
                                  },
                                  {
                                    "name": "twos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2827:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2816:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2816:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "prod0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2807:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2807:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1263,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2820:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2827:4:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1302,
                        "nodeType": "InlineAssembly",
                        "src": "2784:58:17"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3030:63:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3044:39:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3064:1:17",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "name": "twos",
                                            "nodeType": "YulIdentifier",
                                            "src": "3067:4:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "3060:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3060:12:17"
                                      },
                                      {
                                        "name": "twos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3074:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "3056:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3056:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3081:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3052:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3052:31:17"
                              },
                              "variableNames": [
                                {
                                  "name": "twos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3044:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3044:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3067:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3074:4:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 1303,
                        "nodeType": "InlineAssembly",
                        "src": "3021:72:17"
                      },
                      {
                        "expression": {
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1304,
                            "name": "prod0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "3102:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "|=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1305,
                              "name": "prod1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "3111:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1306,
                              "name": "twos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "3119:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3111:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3102:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1309,
                        "nodeType": "ExpressionStatement",
                        "src": "3102:21:17"
                      },
                      {
                        "assignments": [
                          1311
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1311,
                            "mutability": "mutable",
                            "name": "inv",
                            "nodeType": "VariableDeclaration",
                            "scope": 1375,
                            "src": "3457:11:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1310,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3457:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1318,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "33",
                                  "id": 1312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3472:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1313,
                                  "name": "denominator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "3476:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3472:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1315,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3471:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "^",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3491:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3471:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3457:35:17"
                      },
                      {
                        "expression": {
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1319,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "3707:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3714:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1321,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "3718:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1322,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "3732:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3718:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3714:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3707:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1326,
                        "nodeType": "ExpressionStatement",
                        "src": "3707:28:17"
                      },
                      {
                        "expression": {
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1327,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "3765:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3772:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1329,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "3776:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1330,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "3790:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3776:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3772:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3765:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1334,
                        "nodeType": "ExpressionStatement",
                        "src": "3765:28:17"
                      },
                      {
                        "expression": {
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1335,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "3824:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3831:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1337,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "3835:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1338,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "3849:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3835:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3831:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3824:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1342,
                        "nodeType": "ExpressionStatement",
                        "src": "3824:28:17"
                      },
                      {
                        "expression": {
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1343,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "3883:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3890:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1345,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "3894:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1346,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "3908:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3894:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3890:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3883:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1350,
                        "nodeType": "ExpressionStatement",
                        "src": "3883:28:17"
                      },
                      {
                        "expression": {
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1351,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "3942:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3949:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1353,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "3953:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1354,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "3967:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3953:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3949:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3942:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "3942:28:17"
                      },
                      {
                        "expression": {
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1359,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "4002:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "*=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4009:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1361,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "4013:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1362,
                                "name": "inv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1311,
                                "src": "4027:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4013:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4009:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4002:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "4002:28:17"
                      },
                      {
                        "expression": {
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1367,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "4468:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1368,
                              "name": "prod0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "4477:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1369,
                              "name": "inv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1311,
                              "src": "4485:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4477:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4468:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1372,
                        "nodeType": "ExpressionStatement",
                        "src": "4468:20:17"
                      },
                      {
                        "expression": {
                          "id": 1373,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "4505:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1261,
                        "id": 1374,
                        "nodeType": "Return",
                        "src": "4498:13:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1251,
                    "nodeType": "StructuredDocumentation",
                    "src": "378:359:17",
                    "text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
                  },
                  "id": 1376,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mulDiv",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "767:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "767:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "786:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "786:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1257,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "805:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "757:73:17"
                  },
                  "returnParameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1260,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "854:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1259,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "853:16:17"
                  },
                  "scope": 1420,
                  "src": "742:3776:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1418,
                    "nodeType": "Block",
                    "src": "4938:177:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1388,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "4948:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1390,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1379,
                                "src": "4964:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1391,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1381,
                                "src": "4967:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1392,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "4970:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1389,
                              "name": "mulDiv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1376,
                              "src": "4957:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4957:25:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4948:34:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1395,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:34:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1397,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1379,
                                "src": "5003:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1398,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1381,
                                "src": "5006:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1399,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "5009:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1396,
                              "name": "mulmod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -16,
                              "src": "4996:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4996:25:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5024:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4996:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1417,
                        "nodeType": "IfStatement",
                        "src": "4992:117:17",
                        "trueBody": {
                          "id": 1416,
                          "nodeType": "Block",
                          "src": "5027:82:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1404,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1386,
                                      "src": "5049:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1407,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5063:7:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 1406,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5063:7:17",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            }
                                          ],
                                          "id": 1405,
                                          "name": "type",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -27,
                                          "src": "5058:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 1408,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5058:13:17",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                                          "typeString": "type(uint256)"
                                        }
                                      },
                                      "id": 1409,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "max",
                                      "nodeType": "MemberAccess",
                                      "src": "5058:17:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5049:26:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1403,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5041:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5041:35:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1412,
                              "nodeType": "ExpressionStatement",
                              "src": "5041:35:17"
                            },
                            {
                              "expression": {
                                "id": 1414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5090:8:17",
                                "subExpression": {
                                  "id": 1413,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1386,
                                  "src": "5090:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1415,
                              "nodeType": "ExpressionStatement",
                              "src": "5090:8:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1377,
                    "nodeType": "StructuredDocumentation",
                    "src": "4524:271:17",
                    "text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
                  },
                  "id": 1419,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mulDivRoundingUp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "4835:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4835:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "4854:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "4873:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4873:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4825:73:17"
                  },
                  "returnParameters": {
                    "id": 1387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "4922:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4922:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4921:16:17"
                  },
                  "scope": 1420,
                  "src": "4800:315:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1421,
              "src": "355:4762:17"
            }
          ],
          "src": "32:5086:17"
        }
      },
      "@uniswap/v3-periphery/contracts/base/Multicall.sol": {
        "id": 18,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/base/Multicall.sol",
          "exportedSymbols": {
            "IMulticall": [
              1555
            ],
            "Multicall": [
              1505
            ]
          },
          "id": 1506,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1422,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:18"
            },
            {
              "id": 1423,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:18"
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
              "file": "../interfaces/IMulticall.sol",
              "id": 1424,
              "nodeType": "ImportDirective",
              "scope": 1506,
              "sourceUnit": 1556,
              "src": "90:38:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1426,
                    "name": "IMulticall",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1555,
                    "src": "260:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMulticall_$1555",
                      "typeString": "contract IMulticall"
                    }
                  },
                  "id": 1427,
                  "nodeType": "InheritanceSpecifier",
                  "src": "260:10:18"
                }
              ],
              "contractDependencies": [
                1555
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1425,
                "nodeType": "StructuredDocumentation",
                "src": "130:99:18",
                "text": "@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"
              },
              "fullyImplemented": true,
              "id": 1505,
              "linearizedBaseContracts": [
                1505,
                1555
              ],
              "name": "Multicall",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1554
                  ],
                  "body": {
                    "id": 1503,
                    "nodeType": "Block",
                    "src": "409:554:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1438,
                            "name": "results",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "419:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1442,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1431,
                                  "src": "441:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "bytes calldata[] calldata"
                                  }
                                },
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "441:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "429:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1439,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "433:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "id": 1440,
                                "nodeType": "ArrayTypeName",
                                "src": "433:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                                  "typeString": "bytes[]"
                                }
                              }
                            },
                            "id": 1444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "429:24:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "src": "419:34:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "id": 1446,
                        "nodeType": "ExpressionStatement",
                        "src": "419:34:18"
                      },
                      {
                        "body": {
                          "id": 1501,
                          "nodeType": "Block",
                          "src": "505:452:18",
                          "statements": [
                            {
                              "assignments": [
                                1459,
                                1461
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1459,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1501,
                                  "src": "520:12:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1458,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "520:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1461,
                                  "mutability": "mutable",
                                  "name": "result",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1501,
                                  "src": "534:19:18",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1460,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "534:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1471,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1467,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1431,
                                      "src": "584:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "bytes calldata[] calldata"
                                      }
                                    },
                                    "id": 1469,
                                    "indexExpression": {
                                      "id": 1468,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1448,
                                      "src": "589:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "584:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1464,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "565:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Multicall_$1505",
                                          "typeString": "contract Multicall"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Multicall_$1505",
                                          "typeString": "contract Multicall"
                                        }
                                      ],
                                      "id": 1463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "557:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1462,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "557:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "557:13:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "delegatecall",
                                  "nodeType": "MemberAccess",
                                  "src": "557:26:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "557:35:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "519:73:18"
                            },
                            {
                              "condition": {
                                "id": 1473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "611:8:18",
                                "subExpression": {
                                  "id": 1472,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1459,
                                  "src": "612:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1494,
                              "nodeType": "IfStatement",
                              "src": "607:306:18",
                              "trueBody": {
                                "id": 1493,
                                "nodeType": "Block",
                                "src": "621:292:18",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1477,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1474,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1461,
                                          "src": "723:6:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "723:13:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3638",
                                        "id": 1476,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "739:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_68_by_1",
                                          "typeString": "int_const 68"
                                        },
                                        "value": "68"
                                      },
                                      "src": "723:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1481,
                                    "nodeType": "IfStatement",
                                    "src": "719:32:18",
                                    "trueBody": {
                                      "expression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1478,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "743:6:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 1479,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "743:8:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1480,
                                      "nodeType": "ExpressionStatement",
                                      "src": "743:8:18"
                                    }
                                  },
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "778:67:18",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "800:27:18",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "result",
                                                "nodeType": "YulIdentifier",
                                                "src": "814:6:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "822:4:18",
                                                "type": "",
                                                "value": "0x04"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "810:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "810:17:18"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "result",
                                              "nodeType": "YulIdentifier",
                                              "src": "800:6:18"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                      {
                                        "declaration": 1461,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "800:6:18",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 1461,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "814:6:18",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 1482,
                                    "nodeType": "InlineAssembly",
                                    "src": "769:76:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1486,
                                              "name": "result",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1461,
                                              "src": "880:6:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            {
                                              "components": [
                                                {
                                                  "id": 1488,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "889:6:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                    "typeString": "type(string storage pointer)"
                                                  },
                                                  "typeName": {
                                                    "id": 1487,
                                                    "name": "string",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "889:6:18",
                                                    "typeDescriptions": {}
                                                  }
                                                }
                                              ],
                                              "id": 1489,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "888:8:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              },
                                              {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1484,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "869:3:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 1485,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "decode",
                                            "nodeType": "MemberAccess",
                                            "src": "869:10:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 1490,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "869:28:18",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1483,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "862:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 1491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "862:36:18",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1492,
                                    "nodeType": "ExpressionStatement",
                                    "src": "862:36:18"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1495,
                                    "name": "results",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1436,
                                    "src": "927:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "bytes memory[] memory"
                                    }
                                  },
                                  "id": 1497,
                                  "indexExpression": {
                                    "id": 1496,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1448,
                                    "src": "935:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "927:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1498,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1461,
                                  "src": "940:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "927:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1500,
                              "nodeType": "ExpressionStatement",
                              "src": "927:19:18"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1451,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "483:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1452,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "487:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "bytes calldata[] calldata"
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "487:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "483:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1502,
                        "initializationExpression": {
                          "assignments": [
                            1448
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1448,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 1502,
                              "src": "468:9:18",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1447,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "468:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1450,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "480:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "468:13:18"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "500:3:18",
                            "subExpression": {
                              "id": 1455,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "500:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1457,
                          "nodeType": "ExpressionStatement",
                          "src": "500:3:18"
                        },
                        "nodeType": "ForStatement",
                        "src": "463:494:18"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1428,
                    "nodeType": "StructuredDocumentation",
                    "src": "277:26:18",
                    "text": "@inheritdoc IMulticall"
                  },
                  "functionSelector": "ac9650d8",
                  "id": 1504,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multicall",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1433,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "367:8:18"
                  },
                  "parameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "327:21:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1429,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "327:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1430,
                          "nodeType": "ArrayTypeName",
                          "src": "327:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "326:23:18"
                  },
                  "returnParameters": {
                    "id": 1437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1436,
                        "mutability": "mutable",
                        "name": "results",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "385:22:18",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1434,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "385:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1435,
                          "nodeType": "ArrayTypeName",
                          "src": "385:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "384:24:18"
                  },
                  "scope": 1505,
                  "src": "308:655:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1506,
              "src": "229:736:18"
            }
          ],
          "src": "45:921:18"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
        "id": 19,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ],
            "IERC721Permit": [
              1540
            ]
          },
          "id": 1541,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1507,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:19"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 1508,
              "nodeType": "ImportDirective",
              "scope": 1541,
              "sourceUnit": 279,
              "src": "71:58:19",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1510,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 278,
                    "src": "282:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$278",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 1511,
                  "nodeType": "InheritanceSpecifier",
                  "src": "282:7:19"
                }
              ],
              "contractDependencies": [
                11,
                278
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1509,
                "nodeType": "StructuredDocumentation",
                "src": "131:124:19",
                "text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
              },
              "fullyImplemented": false,
              "id": 1540,
              "linearizedBaseContracts": [
                1540,
                278,
                11
              ],
              "name": "IERC721Permit",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1512,
                    "nodeType": "StructuredDocumentation",
                    "src": "296:104:19",
                    "text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
                  },
                  "functionSelector": "30adf81f",
                  "id": 1517,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "429:2:19"
                  },
                  "returnParameters": {
                    "id": 1516,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1515,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1517,
                        "src": "455:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1514,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "455:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "454:9:19"
                  },
                  "scope": 1540,
                  "src": "405:59:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1518,
                    "nodeType": "StructuredDocumentation",
                    "src": "470:135:19",
                    "text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
                  },
                  "functionSelector": "3644e515",
                  "id": 1523,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "635:2:19"
                  },
                  "returnParameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1521,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "661:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1520,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "660:9:19"
                  },
                  "scope": 1540,
                  "src": "610:60:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1524,
                    "nodeType": "StructuredDocumentation",
                    "src": "676:605:19",
                    "text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "7ac2ff7b",
                  "id": 1539,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1526,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1311:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1336:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1530,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1361:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1529,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1361:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1387:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1534,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1404:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1533,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1404:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1536,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "1423:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1535,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1423:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1301:137:19"
                  },
                  "returnParameters": {
                    "id": 1538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1455:0:19"
                  },
                  "scope": 1540,
                  "src": "1286:170:19",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1541,
              "src": "255:1203:19"
            }
          ],
          "src": "45:1414:19"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "id": 20,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
          "exportedSymbols": {
            "IMulticall": [
              1555
            ]
          },
          "id": 1556,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1542,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:20"
            },
            {
              "id": 1543,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1544,
                "nodeType": "StructuredDocumentation",
                "src": "91:109:20",
                "text": "@title Multicall interface\n @notice Enables calling multiple methods in a single call to the contract"
              },
              "fullyImplemented": false,
              "id": 1555,
              "linearizedBaseContracts": [
                1555
              ],
              "name": "IMulticall",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1545,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:378:20",
                    "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
                  },
                  "functionSelector": "ac9650d8",
                  "id": 1554,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multicall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1554,
                        "src": "629:21:20",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1546,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "629:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1547,
                          "nodeType": "ArrayTypeName",
                          "src": "629:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "628:23:20"
                  },
                  "returnParameters": {
                    "id": 1553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1552,
                        "mutability": "mutable",
                        "name": "results",
                        "nodeType": "VariableDeclaration",
                        "scope": 1554,
                        "src": "678:22:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1550,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "678:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1551,
                          "nodeType": "ArrayTypeName",
                          "src": "678:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "677:24:20"
                  },
                  "scope": 1555,
                  "src": "610:92:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1556,
              "src": "200:504:20"
            }
          ],
          "src": "45:660:20"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
        "id": 21,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "PoolAddress": [
              1903
            ]
          },
          "id": 1751,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1557,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:21"
            },
            {
              "id": 1558,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:21"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
              "id": 1559,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 337,
              "src": "91:66:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
              "id": 1560,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 310,
              "src": "158:68:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
              "file": "./IPoolInitializer.sol",
              "id": 1561,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1812,
              "src": "228:32:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol",
              "file": "./IERC721Permit.sol",
              "id": 1562,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1541,
              "src": "261:29:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
              "file": "./IPeripheryPayments.sol",
              "id": 1563,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1793,
              "src": "291:34:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
              "file": "./IPeripheryImmutableState.sol",
              "id": 1564,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1767,
              "src": "326:40:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
              "file": "../libraries/PoolAddress.sol",
              "id": 1565,
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1904,
              "src": "367:38:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1567,
                    "name": "IPoolInitializer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1811,
                    "src": "629:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolInitializer_$1811",
                      "typeString": "contract IPoolInitializer"
                    }
                  },
                  "id": 1568,
                  "nodeType": "InheritanceSpecifier",
                  "src": "629:16:21"
                },
                {
                  "baseName": {
                    "id": 1569,
                    "name": "IPeripheryPayments",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1792,
                    "src": "651:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryPayments_$1792",
                      "typeString": "contract IPeripheryPayments"
                    }
                  },
                  "id": 1570,
                  "nodeType": "InheritanceSpecifier",
                  "src": "651:18:21"
                },
                {
                  "baseName": {
                    "id": 1571,
                    "name": "IPeripheryImmutableState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1766,
                    "src": "675:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryImmutableState_$1766",
                      "typeString": "contract IPeripheryImmutableState"
                    }
                  },
                  "id": 1572,
                  "nodeType": "InheritanceSpecifier",
                  "src": "675:24:21"
                },
                {
                  "baseName": {
                    "id": 1573,
                    "name": "IERC721Metadata",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 336,
                    "src": "705:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Metadata_$336",
                      "typeString": "contract IERC721Metadata"
                    }
                  },
                  "id": 1574,
                  "nodeType": "InheritanceSpecifier",
                  "src": "705:15:21"
                },
                {
                  "baseName": {
                    "id": 1575,
                    "name": "IERC721Enumerable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 309,
                    "src": "726:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$309",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 1576,
                  "nodeType": "InheritanceSpecifier",
                  "src": "726:17:21"
                },
                {
                  "baseName": {
                    "id": 1577,
                    "name": "IERC721Permit",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1540,
                    "src": "749:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Permit_$1540",
                      "typeString": "contract IERC721Permit"
                    }
                  },
                  "id": 1578,
                  "nodeType": "InheritanceSpecifier",
                  "src": "749:13:21"
                }
              ],
              "contractDependencies": [
                11,
                278,
                309,
                336,
                1540,
                1766,
                1792,
                1811
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1566,
                "nodeType": "StructuredDocumentation",
                "src": "407:177:21",
                "text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
              },
              "fullyImplemented": false,
              "id": 1750,
              "linearizedBaseContracts": [
                1750,
                1540,
                309,
                336,
                278,
                11,
                1766,
                1792,
                1811
              ],
              "name": "INonfungiblePositionManager",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "769:458:21",
                    "text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
                  },
                  "id": 1589,
                  "name": "IncreaseLiquidity",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "1256:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1256:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1583,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "1281:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1582,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1585,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "1300:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1584,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1300:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1587,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "1317:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1255:78:21"
                  },
                  "src": "1232:102:21"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1590,
                    "nodeType": "StructuredDocumentation",
                    "src": "1339:419:21",
                    "text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
                  },
                  "id": 1600,
                  "name": "DecreaseLiquidity",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1787:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1787:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1594,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1812:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1596,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1831:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1595,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1598,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1848:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1848:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1786:78:21"
                  },
                  "src": "1763:102:21"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1601,
                    "nodeType": "StructuredDocumentation",
                    "src": "1870:522:21",
                    "text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
                  },
                  "id": 1611,
                  "name": "Collect",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1603,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "2411:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2411:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1605,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "2436:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2436:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1607,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "2455:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2455:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1609,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "2472:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2472:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2410:78:21"
                  },
                  "src": "2397:92:21"
                },
                {
                  "documentation": {
                    "id": 1612,
                    "nodeType": "StructuredDocumentation",
                    "src": "2495:1157:21",
                    "text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
                  },
                  "functionSelector": "99fbab88",
                  "id": 1641,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3676:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3676:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3675:17:21"
                  },
                  "returnParameters": {
                    "id": 1640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1617,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3753:12:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1616,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "3753:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3779:16:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3779:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1621,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3809:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3809:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3837:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3837:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3865:10:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3889:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3889:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3918:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3918:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3947:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3947:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1633,
                        "mutability": "mutable",
                        "name": "feeGrowthInside0LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3978:32:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3978:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1635,
                        "mutability": "mutable",
                        "name": "feeGrowthInside1LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "4024:32:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1637,
                        "mutability": "mutable",
                        "name": "tokensOwed0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "4070:19:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1636,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4070:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1639,
                        "mutability": "mutable",
                        "name": "tokensOwed1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "4103:19:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1638,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4103:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3739:393:21"
                  },
                  "scope": 1750,
                  "src": "3657:476:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.MintParams",
                  "id": 1664,
                  "members": [
                    {
                      "constant": false,
                      "id": 1643,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4167:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1642,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4167:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1645,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4191:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1644,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4191:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1647,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4215:10:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 1646,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4215:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1649,
                      "mutability": "mutable",
                      "name": "tickLower",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4235:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1648,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4235:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1651,
                      "mutability": "mutable",
                      "name": "tickUpper",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4260:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1650,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4260:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1653,
                      "mutability": "mutable",
                      "name": "amount0Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4285:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1652,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4285:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1655,
                      "mutability": "mutable",
                      "name": "amount1Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4317:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4317:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1657,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4349:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4349:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1659,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4377:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4377:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1661,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4405:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1660,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4405:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1663,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4432:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4432:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "MintParams",
                  "nodeType": "StructDefinition",
                  "scope": 1750,
                  "src": "4139:316:21",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1665,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:586:21",
                    "text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
                  },
                  "functionSelector": "88316456",
                  "id": 1678,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1667,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "5066:26:21",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintParams_$1664_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.MintParams"
                        },
                        "typeName": {
                          "id": 1666,
                          "name": "MintParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1664,
                          "src": "5066:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintParams_$1664_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.MintParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5065:28:21"
                  },
                  "returnParameters": {
                    "id": 1677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1670,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "5157:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5157:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1672,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "5186:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5186:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "5217:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5217:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1676,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "5246:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5246:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5143:128:21"
                  },
                  "scope": 1750,
                  "src": "5052:220:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
                  "id": 1691,
                  "members": [
                    {
                      "constant": false,
                      "id": 1680,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5319:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1679,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5319:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1682,
                      "mutability": "mutable",
                      "name": "amount0Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5344:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5344:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "amount1Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5376:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5376:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1686,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5408:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1685,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5408:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1688,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5436:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1687,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5436:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1690,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1691,
                      "src": "5464:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5464:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncreaseLiquidityParams",
                  "nodeType": "StructDefinition",
                  "scope": 1750,
                  "src": "5278:209:21",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1692,
                    "nodeType": "StructuredDocumentation",
                    "src": "5493:821:21",
                    "text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
                  },
                  "functionSelector": "219f5d17",
                  "id": 1703,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1694,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "6346:39:21",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1691_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
                        },
                        "typeName": {
                          "id": 1693,
                          "name": "IncreaseLiquidityParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1691,
                          "src": "6346:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1691_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6345:41:21"
                  },
                  "returnParameters": {
                    "id": 1702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "6450:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6450:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "6481:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6481:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1703,
                        "src": "6510:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6510:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6436:99:21"
                  },
                  "scope": 1750,
                  "src": "6319:217:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
                  "id": 1714,
                  "members": [
                    {
                      "constant": false,
                      "id": 1705,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6583:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1704,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6583:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1707,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6608:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1706,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6608:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1709,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6635:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1708,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6635:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1711,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6663:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1710,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6663:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1713,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "6691:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6691:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DecreaseLiquidityParams",
                  "nodeType": "StructDefinition",
                  "scope": 1750,
                  "src": "6542:172:21",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1715,
                    "nodeType": "StructuredDocumentation",
                    "src": "6720:702:21",
                    "text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
                  },
                  "functionSelector": "0c49ccbe",
                  "id": 1724,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1717,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "7454:39:21",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1714_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "DecreaseLiquidityParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1714,
                          "src": "7454:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1714_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:41:21"
                  },
                  "returnParameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "7545:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7545:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "7562:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7562:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7544:34:21"
                  },
                  "scope": 1750,
                  "src": "7427:152:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.CollectParams",
                  "id": 1733,
                  "members": [
                    {
                      "constant": false,
                      "id": 1726,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "7616:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7616:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1728,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "7641:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1727,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7641:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1730,
                      "mutability": "mutable",
                      "name": "amount0Max",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "7668:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1729,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7668:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "amount1Max",
                      "nodeType": "VariableDeclaration",
                      "scope": 1733,
                      "src": "7696:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1731,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7696:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "CollectParams",
                  "nodeType": "StructDefinition",
                  "scope": 1750,
                  "src": "7585:136:21",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1734,
                    "nodeType": "StructuredDocumentation",
                    "src": "7727:489:21",
                    "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "fc6f7865",
                  "id": 1743,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1736,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "8238:29:21",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$1733_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams"
                        },
                        "typeName": {
                          "id": 1735,
                          "name": "CollectParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1733,
                          "src": "8238:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectParams_$1733_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.CollectParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8237:31:21"
                  },
                  "returnParameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "8295:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8295:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "8312:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8312:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8294:34:21"
                  },
                  "scope": 1750,
                  "src": "8221:108:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1744,
                    "nodeType": "StructuredDocumentation",
                    "src": "8335:213:21",
                    "text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
                  },
                  "functionSelector": "42966c68",
                  "id": 1749,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1746,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "8567:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8567:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8566:17:21"
                  },
                  "returnParameters": {
                    "id": 1748,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8600:0:21"
                  },
                  "scope": 1750,
                  "src": "8553:48:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1751,
              "src": "584:8019:21"
            }
          ],
          "src": "45:8559:21"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "id": 22,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
          "exportedSymbols": {
            "IPeripheryImmutableState": [
              1766
            ]
          },
          "id": 1767,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1752,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:22"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1753,
                "nodeType": "StructuredDocumentation",
                "src": "71:91:22",
                "text": "@title Immutable state\n @notice Functions that return immutable state of the router"
              },
              "fullyImplemented": false,
              "id": 1766,
              "linearizedBaseContracts": [
                1766
              ],
              "name": "IPeripheryImmutableState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1754,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:57:22",
                    "text": "@return Returns the address of the Uniswap V3 factory"
                  },
                  "functionSelector": "c45a0155",
                  "id": 1759,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1755,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "281:2:22"
                  },
                  "returnParameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1759,
                        "src": "307:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "307:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:9:22"
                  },
                  "scope": 1766,
                  "src": "265:51:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1760,
                    "nodeType": "StructuredDocumentation",
                    "src": "322:40:22",
                    "text": "@return Returns the address of WETH9"
                  },
                  "functionSelector": "4aa4a4fc",
                  "id": 1765,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "381:2:22"
                  },
                  "returnParameters": {
                    "id": 1764,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1763,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "407:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "407:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "406:9:22"
                  },
                  "scope": 1766,
                  "src": "367:49:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1767,
              "src": "162:256:22"
            }
          ],
          "src": "45:374:22"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "id": 23,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
          "exportedSymbols": {
            "IPeripheryPayments": [
              1792
            ]
          },
          "id": 1793,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1768,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:23"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1769,
                "nodeType": "StructuredDocumentation",
                "src": "71:92:23",
                "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
              },
              "fullyImplemented": false,
              "id": 1792,
              "linearizedBaseContracts": [
                1792
              ],
              "name": "IPeripheryPayments",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1770,
                    "nodeType": "StructuredDocumentation",
                    "src": "198:302:23",
                    "text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
                  },
                  "functionSelector": "49404b7c",
                  "id": 1777,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unwrapWETH9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1772,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1777,
                        "src": "526:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1771,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1774,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1777,
                        "src": "549:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1773,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "525:42:23"
                  },
                  "returnParameters": {
                    "id": 1776,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "584:0:23"
                  },
                  "scope": 1792,
                  "src": "505:80:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1778,
                    "nodeType": "StructuredDocumentation",
                    "src": "591:225:23",
                    "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
                  },
                  "functionSelector": "12210e8a",
                  "id": 1781,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refundETH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1779,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "839:2:23"
                  },
                  "returnParameters": {
                    "id": 1780,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "858:0:23"
                  },
                  "scope": 1792,
                  "src": "821:38:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1782,
                    "nodeType": "StructuredDocumentation",
                    "src": "865:427:23",
                    "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
                  },
                  "functionSelector": "df2ab5bb",
                  "id": 1791,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sweepToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1784,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1326:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1786,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1349:21:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1785,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1349:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1380:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1380:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:87:23"
                  },
                  "returnParameters": {
                    "id": 1790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1420:0:23"
                  },
                  "scope": 1792,
                  "src": "1297:124:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1793,
              "src": "163:1260:23"
            }
          ],
          "src": "45:1379:23"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
        "id": 24,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
          "exportedSymbols": {
            "IPoolInitializer": [
              1811
            ]
          },
          "id": 1812,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1794,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:24"
            },
            {
              "id": 1795,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1796,
                "nodeType": "StructuredDocumentation",
                "src": "91:194:24",
                "text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
              },
              "fullyImplemented": false,
              "id": 1811,
              "linearizedBaseContracts": [
                1811
              ],
              "name": "IPoolInitializer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1797,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:648:24",
                    "text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
                  },
                  "functionSelector": "13ead562",
                  "id": 1810,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAndInitializePoolIfNecessary",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1806,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1799,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1810,
                        "src": "1024:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1024:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1801,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1810,
                        "src": "1048:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1048:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1810,
                        "src": "1072:10:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1072:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 1810,
                        "src": "1092:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1014:104:24"
                  },
                  "returnParameters": {
                    "id": 1809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1810,
                        "src": "1145:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1144:14:24"
                  },
                  "scope": 1811,
                  "src": "971:188:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1812,
              "src": "285:876:24"
            }
          ],
          "src": "45:1117:24"
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "id": 25,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
          "exportedSymbols": {
            "PoolAddress": [
              1903
            ]
          },
          "id": 1904,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1813,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:25"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1814,
                "nodeType": "StructuredDocumentation",
                "src": "71:96:25",
                "text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
              },
              "fullyImplemented": true,
              "id": 1903,
              "linearizedBaseContracts": [
                1903
              ],
              "name": "PoolAddress",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1817,
                  "mutability": "constant",
                  "name": "POOL_INIT_CODE_HASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1903,
                  "src": "193:114:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "241:66:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
                      "typeString": "int_const 1028...(70 digits omitted)...6276"
                    },
                    "value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "PoolAddress.PoolKey",
                  "id": 1824,
                  "members": [
                    {
                      "constant": false,
                      "id": 1819,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1824,
                      "src": "387:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1818,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "387:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1821,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1824,
                      "src": "411:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1820,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "411:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1823,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1824,
                      "src": "435:10:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 1822,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "435:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolKey",
                  "nodeType": "StructDefinition",
                  "scope": 1903,
                  "src": "362:90:25",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1854,
                    "nodeType": "Block",
                    "src": "917:141:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1836,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "931:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1837,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1829,
                            "src": "940:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "931:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1847,
                        "nodeType": "IfStatement",
                        "src": "927:56:25",
                        "trueBody": {
                          "expression": {
                            "id": 1845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 1839,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1827,
                                  "src": "949:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1840,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1829,
                                  "src": "957:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 1841,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "948:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "components": [
                                {
                                  "id": 1842,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1829,
                                  "src": "968:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1843,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1827,
                                  "src": "976:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 1844,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "967:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "src": "948:35:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1846,
                          "nodeType": "ExpressionStatement",
                          "src": "948:35:25"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1849,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1827,
                              "src": "1017:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1850,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1829,
                              "src": "1033:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1851,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1831,
                              "src": "1046:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 1848,
                            "name": "PoolKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "1000:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PoolKey_$1824_storage_ptr_$",
                              "typeString": "type(struct PoolAddress.PoolKey storage pointer)"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "token0",
                            "token1",
                            "fee"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1000:51:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                            "typeString": "struct PoolAddress.PoolKey memory"
                          }
                        },
                        "functionReturnParameters": 1835,
                        "id": 1853,
                        "nodeType": "Return",
                        "src": "993:58:25"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1825,
                    "nodeType": "StructuredDocumentation",
                    "src": "458:321:25",
                    "text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
                  },
                  "id": 1855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1827,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "813:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "813:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1829,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "837:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1831,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "861:10:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 1830,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "803:74:25"
                  },
                  "returnParameters": {
                    "id": 1835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1834,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "901:14:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                          "typeString": "struct PoolAddress.PoolKey"
                        },
                        "typeName": {
                          "id": 1833,
                          "name": "PoolKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1824,
                          "src": "901:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolKey_$1824_storage_ptr",
                            "typeString": "struct PoolAddress.PoolKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "900:16:25"
                  },
                  "scope": 1903,
                  "src": "784:274:25",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1901,
                    "nodeType": "Block",
                    "src": "1403:414:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1866,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "1421:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                    "typeString": "struct PoolAddress.PoolKey memory"
                                  }
                                },
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token0",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1819,
                                "src": "1421:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1868,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "1434:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                    "typeString": "struct PoolAddress.PoolKey memory"
                                  }
                                },
                                "id": 1869,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1821,
                                "src": "1434:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1421:23:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1865,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1413:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1413:32:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1872,
                        "nodeType": "ExpressionStatement",
                        "src": "1413:32:25"
                      },
                      {
                        "expression": {
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1873,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "1455:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "ff",
                                            "id": 1881,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "hexString",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1581:7:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                              "typeString": "literal_string hex\"ff\""
                                            }
                                          },
                                          {
                                            "id": 1882,
                                            "name": "factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1858,
                                            "src": "1614:7:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "id": 1886,
                                                      "name": "key",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1860,
                                                      "src": "1668:3:25",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                                        "typeString": "struct PoolAddress.PoolKey memory"
                                                      }
                                                    },
                                                    "id": 1887,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "token0",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1819,
                                                    "src": "1668:10:25",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "expression": {
                                                      "id": 1888,
                                                      "name": "key",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1860,
                                                      "src": "1680:3:25",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                                        "typeString": "struct PoolAddress.PoolKey memory"
                                                      }
                                                    },
                                                    "id": 1889,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "token1",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1821,
                                                    "src": "1680:10:25",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "expression": {
                                                      "id": 1890,
                                                      "name": "key",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1860,
                                                      "src": "1692:3:25",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                                        "typeString": "struct PoolAddress.PoolKey memory"
                                                      }
                                                    },
                                                    "id": 1891,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "fee",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1823,
                                                    "src": "1692:7:25",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint24",
                                                      "typeString": "uint24"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_uint24",
                                                      "typeString": "uint24"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 1884,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "1657:3:25",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 1885,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "encode",
                                                  "nodeType": "MemberAccess",
                                                  "src": "1657:10:25",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 1892,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1657:43:25",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "id": 1883,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "1647:9:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 1893,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1647:54:25",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 1894,
                                            "name": "POOL_INIT_CODE_HASH",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1817,
                                            "src": "1727:19:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                              "typeString": "literal_string hex\"ff\""
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1879,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "1539:3:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 1880,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "src": "1539:16:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 1895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1539:229:25",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 1878,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1508:9:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 1896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1508:278:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1483:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1876,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1483:7:25",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1483:317:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1462:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1874,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1462:7:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1462:348:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1455:355:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1900,
                        "nodeType": "ExpressionStatement",
                        "src": "1455:355:25"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1856,
                    "nodeType": "StructuredDocumentation",
                    "src": "1064:236:25",
                    "text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
                  },
                  "id": 1902,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1902,
                        "src": "1329:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1329:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1860,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1902,
                        "src": "1346:18:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                          "typeString": "struct PoolAddress.PoolKey"
                        },
                        "typeName": {
                          "id": 1859,
                          "name": "PoolKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1824,
                          "src": "1346:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolKey_$1824_storage_ptr",
                            "typeString": "struct PoolAddress.PoolKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1328:37:25"
                  },
                  "returnParameters": {
                    "id": 1864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1863,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1902,
                        "src": "1389:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1389:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1388:14:25"
                  },
                  "scope": 1903,
                  "src": "1305:512:25",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1904,
              "src": "167:1652:25"
            }
          ],
          "src": "45:1775:25"
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "id": 26,
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "exportedSymbols": {
            "IERC20": [
              162
            ],
            "TransferHelper": [
              2074
            ]
          },
          "id": 2075,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1905,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:26"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1906,
              "nodeType": "ImportDirective",
              "scope": 2075,
              "sourceUnit": 163,
              "src": "71:56:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2074,
              "linearizedBaseContracts": [
                2074
              ],
              "name": "TransferHelper",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1954,
                    "nodeType": "Block",
                    "src": "690:229:26",
                    "statements": [
                      {
                        "assignments": [
                          1919,
                          1921
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1919,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1954,
                            "src": "701:12:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1918,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "701:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1921,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "scope": 1954,
                            "src": "715:17:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1920,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "715:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1934,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1926,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 162,
                                      "src": "782:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$162_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 143,
                                    "src": "782:19:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 1928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "782:28:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1929,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1911,
                                  "src": "812:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1930,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1913,
                                  "src": "818:2:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1931,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1915,
                                  "src": "822:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1924,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "759:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "759:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "759:69:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1922,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1909,
                              "src": "748:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "748:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "748:81:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "700:129:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1936,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1919,
                                "src": "847:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1948,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1937,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1921,
                                          "src": "859:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1938,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "859:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1939,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "874:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "859:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 1943,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1921,
                                          "src": "890:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 1945,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "897:4:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 1944,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "897:4:26",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 1946,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "896:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1941,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "879:3:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "879:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 1947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "879:24:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "859:44:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1949,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "858:46:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "847:57:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "535446",
                              "id": 1951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "906:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
                                "typeString": "literal_string \"STF\""
                              },
                              "value": "STF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
                                "typeString": "literal_string \"STF\""
                              }
                            ],
                            "id": 1935,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "839:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "839:73:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1953,
                        "nodeType": "ExpressionStatement",
                        "src": "839:73:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1907,
                    "nodeType": "StructuredDocumentation",
                    "src": "158:398:26",
                    "text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
                  },
                  "id": 1955,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1909,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "596:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1911,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "619:12:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1910,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1913,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "641:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "661:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "586:94:26"
                  },
                  "returnParameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "690:0:26"
                  },
                  "scope": 2074,
                  "src": "561:358:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2000,
                    "nodeType": "Block",
                    "src": "1314:206:26",
                    "statements": [
                      {
                        "assignments": [
                          1966,
                          1968
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1966,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 2000,
                            "src": "1325:12:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1965,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1325:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1968,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "scope": 2000,
                            "src": "1339:17:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1967,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1339:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1980,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1973,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 162,
                                      "src": "1394:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$162_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 111,
                                    "src": "1394:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transfer(address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 1975,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1394:24:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1976,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1960,
                                  "src": "1420:2:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1977,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1962,
                                  "src": "1424:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1971,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1371:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1371:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1371:59:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1969,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1958,
                              "src": "1360:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "1360:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1360:71:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1324:107:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1982,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1966,
                                "src": "1449:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1994,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1983,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1968,
                                          "src": "1461:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1984,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1461:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1985,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1476:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "1461:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 1989,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1968,
                                          "src": "1492:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 1991,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1499:4:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 1990,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1499:4:26",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 1992,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1498:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1987,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1481:3:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1988,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "1481:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 1993,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1481:24:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "1461:44:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1995,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1460:46:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1449:57:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5354",
                              "id": 1997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1508:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
                                "typeString": "literal_string \"ST\""
                              },
                              "value": "ST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
                                "typeString": "literal_string \"ST\""
                              }
                            ],
                            "id": 1981,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1441:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1441:72:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1999,
                        "nodeType": "ExpressionStatement",
                        "src": "1441:72:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1956,
                    "nodeType": "StructuredDocumentation",
                    "src": "925:281:26",
                    "text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
                  },
                  "id": 2001,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1958,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "1242:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1960,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "1265:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1959,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1962,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "1285:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1285:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1232:72:26"
                  },
                  "returnParameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1314:0:26"
                  },
                  "scope": 2074,
                  "src": "1211:309:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2046,
                    "nodeType": "Block",
                    "src": "1975:205:26",
                    "statements": [
                      {
                        "assignments": [
                          2012,
                          2014
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2012,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 2046,
                            "src": "1986:12:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2011,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1986:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2014,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "scope": 2046,
                            "src": "2000:17:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2013,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2000:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2026,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2019,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 162,
                                      "src": "2055:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$162_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 131,
                                    "src": "2055:14:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.approve(address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 2021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2055:23:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 2022,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2006,
                                  "src": "2080:2:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2023,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2008,
                                  "src": "2084:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2017,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2032:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2032:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 2024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2032:58:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2015,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "2021:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2021:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2021:70:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1985:106:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2028,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2012,
                                "src": "2109:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2040,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2032,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2029,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2014,
                                          "src": "2121:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 2030,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "2121:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 2031,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2136:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "2121:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 2035,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2014,
                                          "src": "2152:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 2037,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2159:4:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 2036,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2159:4:26",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 2038,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "2158:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2033,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2141:3:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2034,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "2141:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 2039,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2141:24:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2121:44:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 2041,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2120:46:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2109:57:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5341",
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2168:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
                                "typeString": "literal_string \"SA\""
                              },
                              "value": "SA"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
                                "typeString": "literal_string \"SA\""
                              }
                            ],
                            "id": 2027,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2101:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:72:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2045,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:72:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2002,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:342:26",
                    "text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
                  },
                  "id": 2047,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2004,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2047,
                        "src": "1903:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2006,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2047,
                        "src": "1926:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2005,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1926:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2008,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2047,
                        "src": "1946:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:72:26"
                  },
                  "returnParameters": {
                    "id": 2010,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1975:0:26"
                  },
                  "scope": 2074,
                  "src": "1873:307:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2072,
                    "nodeType": "Block",
                    "src": "2431:104:26",
                    "statements": [
                      {
                        "assignments": [
                          2056,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2056,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 2072,
                            "src": "2442:12:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2055,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2442:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2066,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2492:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "2482:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                },
                                "typeName": {
                                  "id": 2061,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2486:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                }
                              },
                              "id": 2064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2482:12:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2057,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2050,
                                "src": "2460:2:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2460:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2059,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2052,
                                "src": "2475:5:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2460:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:35:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2441:54:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2068,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2513:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "535445",
                              "id": 2069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2522:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
                                "typeString": "literal_string \"STE\""
                              },
                              "value": "STE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
                                "typeString": "literal_string \"STE\""
                              }
                            ],
                            "id": 2067,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2505:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2505:23:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "2505:23:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2048,
                    "nodeType": "StructuredDocumentation",
                    "src": "2186:179:26",
                    "text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
                  },
                  "id": 2073,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferETH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2073,
                        "src": "2395:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2395:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2052,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2073,
                        "src": "2407:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2394:27:26"
                  },
                  "returnParameters": {
                    "id": 2054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2431:0:26"
                  },
                  "scope": 2074,
                  "src": "2370:165:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2075,
              "src": "129:2408:26"
            }
          ],
          "src": "45:2493:26"
        }
      },
      "contracts/UniswapV3Staker.sol": {
        "id": 27,
        "ast": {
          "absolutePath": "contracts/UniswapV3Staker.sol",
          "exportedSymbols": {
            "Address": [
              650
            ],
            "FullMath": [
              1420
            ],
            "IERC165": [
              11
            ],
            "IERC20": [
              162
            ],
            "IERC20Minimal": [
              722
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "IERC721Receiver": [
              354
            ],
            "IMulticall": [
              1555
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "IUniswapV3Staker": [
              3361
            ],
            "IncentiveId": [
              3382
            ],
            "Math": [
              84
            ],
            "Multicall": [
              1505
            ],
            "NFTPositionInfo": [
              3449
            ],
            "PoolAddress": [
              1903
            ],
            "RewardMath": [
              3520
            ],
            "TransferHelper": [
              2074
            ],
            "TransferHelperExtended": [
              3583
            ],
            "UniswapV3Staker": [
              3135
            ]
          },
          "id": 3136,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2076,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:27"
            },
            {
              "id": 2077,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:27"
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV3Staker.sol",
              "file": "./interfaces/IUniswapV3Staker.sol",
              "id": 2078,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 3362,
              "src": "90:43:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/IncentiveId.sol",
              "file": "./libraries/IncentiveId.sol",
              "id": 2079,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 3383,
              "src": "134:37:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/RewardMath.sol",
              "file": "./libraries/RewardMath.sol",
              "id": 2080,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 3521,
              "src": "172:36:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/NFTPositionInfo.sol",
              "file": "./libraries/NFTPositionInfo.sol",
              "id": 2081,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 3450,
              "src": "209:41:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/TransferHelperExtended.sol",
              "file": "./libraries/TransferHelperExtended.sol",
              "id": 2082,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 3584,
              "src": "251:48:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "id": 2083,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 806,
              "src": "301:69:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "id": 2084,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 828,
              "src": "371:66:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "id": 2085,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 723,
              "src": "438:65:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "id": 2086,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 1751,
              "src": "505:84:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/base/Multicall.sol",
              "file": "@uniswap/v3-periphery/contracts/base/Multicall.sol",
              "id": 2087,
              "nodeType": "ImportDirective",
              "scope": 3136,
              "sourceUnit": 1506,
              "src": "590:60:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2089,
                    "name": "IUniswapV3Staker",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3361,
                    "src": "730:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Staker_$3361",
                      "typeString": "contract IUniswapV3Staker"
                    }
                  },
                  "id": 2090,
                  "nodeType": "InheritanceSpecifier",
                  "src": "730:16:27"
                },
                {
                  "baseName": {
                    "id": 2091,
                    "name": "Multicall",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1505,
                    "src": "748:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Multicall_$1505",
                      "typeString": "contract Multicall"
                    }
                  },
                  "id": 2092,
                  "nodeType": "InheritanceSpecifier",
                  "src": "748:9:27"
                }
              ],
              "contractDependencies": [
                354,
                1505,
                1555,
                3361
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 2088,
                "nodeType": "StructuredDocumentation",
                "src": "652:50:27",
                "text": "@title Uniswap V3 canonical staking interface"
              },
              "fullyImplemented": true,
              "id": 3135,
              "linearizedBaseContracts": [
                3135,
                1505,
                3361,
                1555,
                354
              ],
              "name": "UniswapV3Staker",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "UniswapV3Staker.Incentive",
                  "id": 2099,
                  "members": [
                    {
                      "constant": false,
                      "id": 2094,
                      "mutability": "mutable",
                      "name": "totalRewardUnclaimed",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "838:28:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "838:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2096,
                      "mutability": "mutable",
                      "name": "totalSecondsClaimedX128",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "876:31:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 2095,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "876:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2098,
                      "mutability": "mutable",
                      "name": "numberOfStakes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "917:21:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 2097,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Incentive",
                  "nodeType": "StructDefinition",
                  "scope": 3135,
                  "src": "811:134:27",
                  "visibility": "public"
                },
                {
                  "canonicalName": "UniswapV3Staker.Deposit",
                  "id": 2108,
                  "members": [
                    {
                      "constant": false,
                      "id": 2101,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2108,
                      "src": "1034:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1034:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2103,
                      "mutability": "mutable",
                      "name": "numberOfStakes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2108,
                      "src": "1057:21:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 2102,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "1057:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2105,
                      "mutability": "mutable",
                      "name": "tickLower",
                      "nodeType": "VariableDeclaration",
                      "scope": 2108,
                      "src": "1088:15:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2104,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1088:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2107,
                      "mutability": "mutable",
                      "name": "tickUpper",
                      "nodeType": "VariableDeclaration",
                      "scope": 2108,
                      "src": "1113:15:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2106,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1113:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Deposit",
                  "nodeType": "StructDefinition",
                  "scope": 3135,
                  "src": "1009:126:27",
                  "visibility": "public"
                },
                {
                  "canonicalName": "UniswapV3Staker.Stake",
                  "id": 2115,
                  "members": [
                    {
                      "constant": false,
                      "id": 2110,
                      "mutability": "mutable",
                      "name": "secondsPerLiquidityInsideInitialX128",
                      "nodeType": "VariableDeclaration",
                      "scope": 2115,
                      "src": "1214:44:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 2109,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "1214:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2112,
                      "mutability": "mutable",
                      "name": "liquidityNoOverflow",
                      "nodeType": "VariableDeclaration",
                      "scope": 2115,
                      "src": "1268:26:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 2111,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2114,
                      "mutability": "mutable",
                      "name": "liquidityIfOverflow",
                      "nodeType": "VariableDeclaration",
                      "scope": 2115,
                      "src": "1304:27:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2113,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Stake",
                  "nodeType": "StructDefinition",
                  "scope": 3135,
                  "src": "1191:147:27",
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3166
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2116,
                    "nodeType": "StructuredDocumentation",
                    "src": "1344:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "c45a0155",
                  "id": 2119,
                  "mutability": "immutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2118,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1416:8:27"
                  },
                  "scope": 3135,
                  "src": "1381:51:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                    "typeString": "contract IUniswapV3Factory"
                  },
                  "typeName": {
                    "id": 2117,
                    "name": "IUniswapV3Factory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 805,
                    "src": "1381:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                      "typeString": "contract IUniswapV3Factory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3172
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2120,
                    "nodeType": "StructuredDocumentation",
                    "src": "1438:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "b44a2722",
                  "id": 2123,
                  "mutability": "immutable",
                  "name": "nonfungiblePositionManager",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2122,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1520:8:27"
                  },
                  "scope": 3135,
                  "src": "1475:80:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                    "typeString": "contract INonfungiblePositionManager"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "INonfungiblePositionManager",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1750,
                    "src": "1475:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                      "typeString": "contract INonfungiblePositionManager"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3184
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2124,
                    "nodeType": "StructuredDocumentation",
                    "src": "1562:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "01b75440",
                  "id": 2127,
                  "mutability": "immutable",
                  "name": "maxIncentiveStartLeadTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2126,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1624:8:27"
                  },
                  "scope": 3135,
                  "src": "1599:59:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3178
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2128,
                    "nodeType": "StructuredDocumentation",
                    "src": "1664:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "3dc0714b",
                  "id": 2131,
                  "mutability": "immutable",
                  "name": "maxIncentiveDuration",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2130,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1726:8:27"
                  },
                  "scope": 3135,
                  "src": "1701:54:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3196
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2132,
                    "nodeType": "StructuredDocumentation",
                    "src": "1762:66:27",
                    "text": "@dev bytes32 refers to the return value of IncentiveId.compute"
                  },
                  "functionSelector": "60777795",
                  "id": 2137,
                  "mutability": "mutable",
                  "name": "incentives",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2136,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1870:8:27"
                  },
                  "scope": 3135,
                  "src": "1833:56:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                    "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive)"
                  },
                  "typeName": {
                    "id": 2135,
                    "keyType": {
                      "id": 2133,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1841:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1833:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                      "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive)"
                    },
                    "valueType": {
                      "id": 2134,
                      "name": "Incentive",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2099,
                      "src": "1852:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                        "typeString": "struct UniswapV3Staker.Incentive"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3210
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2138,
                    "nodeType": "StructuredDocumentation",
                    "src": "1896:37:27",
                    "text": "@dev deposits[tokenId] => Deposit"
                  },
                  "functionSelector": "b02c43d0",
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "deposits",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2142,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1973:8:27"
                  },
                  "scope": 3135,
                  "src": "1938:52:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                    "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit)"
                  },
                  "typeName": {
                    "id": 2141,
                    "keyType": {
                      "id": 2139,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1946:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1938:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                      "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit)"
                    },
                    "valueType": {
                      "id": 2140,
                      "name": "Deposit",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2108,
                      "src": "1957:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deposit_$2108_storage_ptr",
                        "typeString": "struct UniswapV3Staker.Deposit"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 2144,
                    "nodeType": "StructuredDocumentation",
                    "src": "1997:48:27",
                    "text": "@dev stakes[tokenId][incentiveHash] => Stake"
                  },
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "_stakes",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "2050:61:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake))"
                  },
                  "typeName": {
                    "id": 2149,
                    "keyType": {
                      "id": 2145,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2058:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2050:45:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake))"
                    },
                    "valueType": {
                      "id": 2148,
                      "keyType": {
                        "id": 2146,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2077:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2069:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                        "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake)"
                      },
                      "valueType": {
                        "id": 2147,
                        "name": "Stake",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2115,
                        "src": "2088:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                          "typeString": "struct UniswapV3Staker.Stake"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "baseFunctions": [
                    3222
                  ],
                  "body": {
                    "id": 2195,
                    "nodeType": "Block",
                    "src": "2340:312:27",
                    "statements": [
                      {
                        "assignments": [
                          2164
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2164,
                            "mutability": "mutable",
                            "name": "stake",
                            "nodeType": "VariableDeclaration",
                            "scope": 2195,
                            "src": "2350:19:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                              "typeString": "struct UniswapV3Staker.Stake"
                            },
                            "typeName": {
                              "id": 2163,
                              "name": "Stake",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2115,
                              "src": "2350:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2170,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2165,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "2372:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake storage ref))"
                              }
                            },
                            "id": 2167,
                            "indexExpression": {
                              "id": 2166,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2153,
                              "src": "2380:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2372:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                              "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake storage ref)"
                            }
                          },
                          "id": 2169,
                          "indexExpression": {
                            "id": 2168,
                            "name": "incentiveId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2155,
                            "src": "2389:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2372:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2115_storage",
                            "typeString": "struct UniswapV3Staker.Stake storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2350:51:27"
                      },
                      {
                        "expression": {
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2171,
                            "name": "secondsPerLiquidityInsideInitialX128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2159,
                            "src": "2411:36:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2172,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2164,
                              "src": "2450:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake storage pointer"
                              }
                            },
                            "id": 2173,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "secondsPerLiquidityInsideInitialX128",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "2450:42:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "2411:81:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 2175,
                        "nodeType": "ExpressionStatement",
                        "src": "2411:81:27"
                      },
                      {
                        "expression": {
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2176,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2161,
                            "src": "2502:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2177,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2164,
                              "src": "2514:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake storage pointer"
                              }
                            },
                            "id": 2178,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "liquidityNoOverflow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2112,
                            "src": "2514:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2502:37:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 2180,
                        "nodeType": "ExpressionStatement",
                        "src": "2502:37:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2181,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2161,
                            "src": "2553:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2571:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 2183,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2571:6:27",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 2182,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "2566:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2566:12:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "2566:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2553:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2194,
                        "nodeType": "IfStatement",
                        "src": "2549:97:27",
                        "trueBody": {
                          "id": 2193,
                          "nodeType": "Block",
                          "src": "2584:62:27",
                          "statements": [
                            {
                              "expression": {
                                "id": 2191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2188,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2161,
                                  "src": "2598:9:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2189,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2164,
                                    "src": "2610:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                      "typeString": "struct UniswapV3Staker.Stake storage pointer"
                                    }
                                  },
                                  "id": 2190,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "liquidityIfOverflow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2114,
                                  "src": "2610:25:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "2598:37:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 2192,
                              "nodeType": "ExpressionStatement",
                              "src": "2598:37:27"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2151,
                    "nodeType": "StructuredDocumentation",
                    "src": "2118:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "c36c1ea5",
                  "id": 2196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakes",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2157,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2245:8:27"
                  },
                  "parameters": {
                    "id": 2156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2153,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "2171:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2171:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2155,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "2188:19:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2154,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2188:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2170:38:27"
                  },
                  "returnParameters": {
                    "id": 2162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2159,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideInitialX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "2271:44:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 2158,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2161,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "2317:17:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2160,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2270:65:27"
                  },
                  "scope": 3135,
                  "src": "2155:497:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3232
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 2197,
                    "nodeType": "StructuredDocumentation",
                    "src": "2658:84:27",
                    "text": "@dev rewards[rewardToken][owner] => uint256\n @inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "e70b9e27",
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 2203,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2808:8:27"
                  },
                  "scope": 3135,
                  "src": "2747:77:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IERC20Minimal_$722_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(contract IERC20Minimal => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 2202,
                    "keyType": {
                      "id": 2198,
                      "name": "IERC20Minimal",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 722,
                      "src": "2755:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                        "typeString": "contract IERC20Minimal"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2747:53:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_IERC20Minimal_$722_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(contract IERC20Minimal => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 2201,
                      "keyType": {
                        "id": 2199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2772:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 2200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2791:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2232,
                    "nodeType": "Block",
                    "src": "3365:219:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2216,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "3375:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                              "typeString": "contract IUniswapV3Factory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2217,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2207,
                            "src": "3385:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                              "typeString": "contract IUniswapV3Factory"
                            }
                          },
                          "src": "3375:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "id": 2219,
                        "nodeType": "ExpressionStatement",
                        "src": "3375:18:27"
                      },
                      {
                        "expression": {
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2220,
                            "name": "nonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2123,
                            "src": "3403:26:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2221,
                            "name": "_nonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2209,
                            "src": "3432:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                              "typeString": "contract INonfungiblePositionManager"
                            }
                          },
                          "src": "3403:56:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "id": 2223,
                        "nodeType": "ExpressionStatement",
                        "src": "3403:56:27"
                      },
                      {
                        "expression": {
                          "id": 2226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2224,
                            "name": "maxIncentiveStartLeadTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "3469:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2225,
                            "name": "_maxIncentiveStartLeadTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2211,
                            "src": "3497:26:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3469:54:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2227,
                        "nodeType": "ExpressionStatement",
                        "src": "3469:54:27"
                      },
                      {
                        "expression": {
                          "id": 2230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2228,
                            "name": "maxIncentiveDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2131,
                            "src": "3533:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2229,
                            "name": "_maxIncentiveDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2213,
                            "src": "3556:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3533:44:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2231,
                        "nodeType": "ExpressionStatement",
                        "src": "3533:44:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2205,
                    "nodeType": "StructuredDocumentation",
                    "src": "2831:327:27",
                    "text": "@param _factory the Uniswap V3 factory\n @param _nonfungiblePositionManager the NFT position manager contract address\n @param _maxIncentiveStartLeadTime the max duration of an incentive in seconds\n @param _maxIncentiveDuration the max amount of seconds into the future the incentive startTime can be set"
                  },
                  "id": 2233,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "_factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "3184:26:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                          "typeString": "contract IUniswapV3Factory"
                        },
                        "typeName": {
                          "id": 2206,
                          "name": "IUniswapV3Factory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 805,
                          "src": "3184:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2209,
                        "mutability": "mutable",
                        "name": "_nonfungiblePositionManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "3220:55:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 2208,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1750,
                          "src": "3220:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2211,
                        "mutability": "mutable",
                        "name": "_maxIncentiveStartLeadTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "3285:34:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3285:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2213,
                        "mutability": "mutable",
                        "name": "_maxIncentiveDuration",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "3329:29:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3329:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3174:190:27"
                  },
                  "returnParameters": {
                    "id": 2215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3365:0:27"
                  },
                  "scope": 3135,
                  "src": "3163:421:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3240
                  ],
                  "body": {
                    "id": 2334,
                    "nodeType": "Block",
                    "src": "3711:1072:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2243,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2238,
                                "src": "3729:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3738:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3729:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a637265617465496e63656e746976653a20726577617264206d75737420626520706f736974697665",
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3741:59:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cea066c4c041d6e54db5f455321d55e1bd2de8a904aa2471e645306393091fdd",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: reward must be positive\""
                              },
                              "value": "UniswapV3Staker::createIncentive: reward must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cea066c4c041d6e54db5f455321d55e1bd2de8a904aa2471e645306393091fdd",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: reward must be positive\""
                              }
                            ],
                            "id": 2242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3721:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3721:80:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2248,
                        "nodeType": "ExpressionStatement",
                        "src": "3721:80:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2250,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3832:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3832:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2252,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "3851:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2253,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3155,
                                "src": "3851:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3832:32:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a637265617465496e63656e746976653a2073746172742074696d65206d757374206265206e6f77206f7220696e2074686520667574757265",
                              "id": 2255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3878:75:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6419b163953246322d32d5166ab9e3949b5891371d7abc7ad2733624093d25c9",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time must be now or in the future\""
                              },
                              "value": "UniswapV3Staker::createIncentive: start time must be now or in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6419b163953246322d32d5166ab9e3949b5891371d7abc7ad2733624093d25c9",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time must be now or in the future\""
                              }
                            ],
                            "id": 2249,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3811:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3811:152:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2257,
                        "nodeType": "ExpressionStatement",
                        "src": "3811:152:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2259,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "3994:3:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                      "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                    }
                                  },
                                  "id": 2260,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3155,
                                  "src": "3994:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2261,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4010:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4010:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3994:31:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2264,
                                "name": "maxIncentiveStartLeadTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2127,
                                "src": "4029:25:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3994:60:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a637265617465496e63656e746976653a2073746172742074696d6520746f6f2066617220696e746f20667574757265",
                              "id": 2266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4068:66:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd4f18157d6dc7e02f62dfd19cf10cd4fb9fe15a72b7ed9aa08992ef33dc7f95",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time too far into future\""
                              },
                              "value": "UniswapV3Staker::createIncentive: start time too far into future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd4f18157d6dc7e02f62dfd19cf10cd4fb9fe15a72b7ed9aa08992ef33dc7f95",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time too far into future\""
                              }
                            ],
                            "id": 2258,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3973:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3973:171:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2268,
                        "nodeType": "ExpressionStatement",
                        "src": "3973:171:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2270,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "4162:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2271,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3155,
                                "src": "4162:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 2272,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2236,
                                  "src": "4178:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2273,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3157,
                                "src": "4178:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4162:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a637265617465496e63656e746976653a2073746172742074696d65206d757374206265206265666f726520656e642074696d65",
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4191:70:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4fbaac9b272a11223cb46cc61b609ba7f1de97fb269345b692556e097762cea",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time must be before end time\""
                              },
                              "value": "UniswapV3Staker::createIncentive: start time must be before end time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4fbaac9b272a11223cb46cc61b609ba7f1de97fb269345b692556e097762cea",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: start time must be before end time\""
                              }
                            ],
                            "id": 2269,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4154:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4154:108:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2277,
                        "nodeType": "ExpressionStatement",
                        "src": "4154:108:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2279,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "4293:3:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                      "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                    }
                                  },
                                  "id": 2280,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3157,
                                  "src": "4293:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2281,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "4307:3:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                      "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                    }
                                  },
                                  "id": 2282,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3155,
                                  "src": "4307:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4293:27:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2284,
                                "name": "maxIncentiveDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2131,
                                "src": "4324:20:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4293:51:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a637265617465496e63656e746976653a20696e63656e74697665206475726174696f6e20697320746f6f206c6f6e67",
                              "id": 2286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4358:66:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e1bffb3039a1afddbaf56a6e988824136dbcb92bc1b7cc9e70e0511774929d1f",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: incentive duration is too long\""
                              },
                              "value": "UniswapV3Staker::createIncentive: incentive duration is too long"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e1bffb3039a1afddbaf56a6e988824136dbcb92bc1b7cc9e70e0511774929d1f",
                                "typeString": "literal_string \"UniswapV3Staker::createIncentive: incentive duration is too long\""
                              }
                            ],
                            "id": 2278,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4272:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:162:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2288,
                        "nodeType": "ExpressionStatement",
                        "src": "4272:162:27"
                      },
                      {
                        "assignments": [
                          2290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2290,
                            "mutability": "mutable",
                            "name": "incentiveId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2334,
                            "src": "4445:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2289,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4445:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2295,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2293,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2236,
                              "src": "4487:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 2291,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "4467:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "4467:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4467:24:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4445:46:27"
                      },
                      {
                        "expression": {
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2296,
                                "name": "incentives",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2137,
                                "src": "4502:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                                  "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                                }
                              },
                              "id": 2298,
                              "indexExpression": {
                                "id": 2297,
                                "name": "incentiveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2290,
                                "src": "4513:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4502:23:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                                "typeString": "struct UniswapV3Staker.Incentive storage ref"
                              }
                            },
                            "id": 2299,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalRewardUnclaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2094,
                            "src": "4502:44:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2300,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2238,
                            "src": "4550:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4502:54:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2302,
                        "nodeType": "ExpressionStatement",
                        "src": "4502:54:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2308,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2236,
                                    "src": "4615:3:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                      "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                    }
                                  },
                                  "id": 2309,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3151,
                                  "src": "4615:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                ],
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4607:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2306,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4607:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4607:24:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2311,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4633:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4633:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2315,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4653:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                    "typeString": "contract UniswapV3Staker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                    "typeString": "contract UniswapV3Staker"
                                  }
                                ],
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4645:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2313,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4645:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4645:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2317,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2238,
                              "src": "4660:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2303,
                              "name": "TransferHelperExtended",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3583,
                              "src": "4567:22:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelperExtended_$3583_$",
                                "typeString": "type(library TransferHelperExtended)"
                              }
                            },
                            "id": 2305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3556,
                            "src": "4567:39:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 2318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4567:100:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2319,
                        "nodeType": "ExpressionStatement",
                        "src": "4567:100:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2321,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "4700:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2322,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3151,
                              "src": "4700:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                "typeString": "contract IERC20Minimal"
                              }
                            },
                            {
                              "expression": {
                                "id": 2323,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "4717:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3153,
                              "src": "4717:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2325,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "4727:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2326,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3155,
                              "src": "4727:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2327,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "4742:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3157,
                              "src": "4742:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2329,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2236,
                                "src": "4755:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refundee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3159,
                              "src": "4755:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2331,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2238,
                              "src": "4769:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                "typeString": "contract IERC20Minimal"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2320,
                            "name": "IncentiveCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3321,
                            "src": "4683:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20Minimal_$722_$_t_contract$_IUniswapV3Pool_$827_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20Minimal,contract IUniswapV3Pool,uint256,uint256,address,uint256)"
                            }
                          },
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4683:93:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2333,
                        "nodeType": "EmitStatement",
                        "src": "4678:98:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2234,
                    "nodeType": "StructuredDocumentation",
                    "src": "3590:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "5cc5e3d9",
                  "id": 2335,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createIncentive",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2240,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3702:8:27"
                  },
                  "parameters": {
                    "id": 2239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2236,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2335,
                        "src": "3652:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2235,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "3652:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2238,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2335,
                        "src": "3677:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3677:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3651:41:27"
                  },
                  "returnParameters": {
                    "id": 2241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3711:0:27"
                  },
                  "scope": 3135,
                  "src": "3627:1156:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3248
                  ],
                  "body": {
                    "id": 2410,
                    "nodeType": "Block",
                    "src": "4916:817:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2345,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4934:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4934:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2347,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2338,
                                  "src": "4953:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2348,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3157,
                                "src": "4953:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4934:30:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a656e64496e63656e746976653a2063616e6e6f7420656e6420696e63656e74697665206265666f726520656e642074696d65",
                              "id": 2350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4966:69:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_414008a201d54a770703461a5dbb87fd135e914702f8264ab757455b4e39a847",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: cannot end incentive before end time\""
                              },
                              "value": "UniswapV3Staker::endIncentive: cannot end incentive before end time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_414008a201d54a770703461a5dbb87fd135e914702f8264ab757455b4e39a847",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: cannot end incentive before end time\""
                              }
                            ],
                            "id": 2344,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4926:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4926:110:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2352,
                        "nodeType": "ExpressionStatement",
                        "src": "4926:110:27"
                      },
                      {
                        "assignments": [
                          2354
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2354,
                            "mutability": "mutable",
                            "name": "incentiveId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2410,
                            "src": "5047:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2353,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5047:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2359,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2357,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2338,
                              "src": "5089:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 2355,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "5069:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 2356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "5069:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5069:24:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5047:46:27"
                      },
                      {
                        "assignments": [
                          2361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2361,
                            "mutability": "mutable",
                            "name": "incentive",
                            "nodeType": "VariableDeclaration",
                            "scope": 2410,
                            "src": "5103:27:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                              "typeString": "struct UniswapV3Staker.Incentive"
                            },
                            "typeName": {
                              "id": 2360,
                              "name": "Incentive",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2099,
                              "src": "5103:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2365,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2362,
                            "name": "incentives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2137,
                            "src": "5133:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                              "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                            }
                          },
                          "id": 2364,
                          "indexExpression": {
                            "id": 2363,
                            "name": "incentiveId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "5144:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5133:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                            "typeString": "struct UniswapV3Staker.Incentive storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5103:53:27"
                      },
                      {
                        "expression": {
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2366,
                            "name": "refund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "5167:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2367,
                              "name": "incentive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2361,
                              "src": "5176:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                              }
                            },
                            "id": 2368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalRewardUnclaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2094,
                            "src": "5176:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5167:39:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2370,
                        "nodeType": "ExpressionStatement",
                        "src": "5167:39:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2372,
                                "name": "refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2342,
                                "src": "5225:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5234:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5225:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a656e64496e63656e746976653a206e6f20726566756e6420617661696c61626c65",
                              "id": 2375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5237:52:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_165920aac7f3445b0a488c54e4a11b72ca30044f7097c60b61048a47452af6c1",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: no refund available\""
                              },
                              "value": "UniswapV3Staker::endIncentive: no refund available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_165920aac7f3445b0a488c54e4a11b72ca30044f7097c60b61048a47452af6c1",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: no refund available\""
                              }
                            ],
                            "id": 2371,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5217:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5217:73:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2377,
                        "nodeType": "ExpressionStatement",
                        "src": "5217:73:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 2382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2379,
                                  "name": "incentive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2361,
                                  "src": "5321:9:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                    "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                                  }
                                },
                                "id": 2380,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfStakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2098,
                                "src": "5321:24:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5349:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5321:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a656e64496e63656e746976653a2063616e6e6f7420656e6420696e63656e74697665207768696c65206465706f7369747320617265207374616b6564",
                              "id": 2383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5364:79:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b6eada4e1eb6c8d88f4dfeddd720af5a64258950806cda2041479355ee5fd7ce",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: cannot end incentive while deposits are staked\""
                              },
                              "value": "UniswapV3Staker::endIncentive: cannot end incentive while deposits are staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b6eada4e1eb6c8d88f4dfeddd720af5a64258950806cda2041479355ee5fd7ce",
                                "typeString": "literal_string \"UniswapV3Staker::endIncentive: cannot end incentive while deposits are staked\""
                              }
                            ],
                            "id": 2378,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5300:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5300:153:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2385,
                        "nodeType": "ExpressionStatement",
                        "src": "5300:153:27"
                      },
                      {
                        "expression": {
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2386,
                              "name": "incentive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2361,
                              "src": "5492:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                              }
                            },
                            "id": 2388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalRewardUnclaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2094,
                            "src": "5492:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5525:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5492:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2391,
                        "nodeType": "ExpressionStatement",
                        "src": "5492:34:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2397,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2338,
                                    "src": "5580:3:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                      "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                    }
                                  },
                                  "id": 2398,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3151,
                                  "src": "5580:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                ],
                                "id": 2396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5572:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2395,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5572:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5572:24:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2400,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2338,
                                "src": "5598:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refundee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3159,
                              "src": "5598:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2402,
                              "name": "refund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2342,
                              "src": "5612:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2392,
                              "name": "TransferHelperExtended",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3583,
                              "src": "5536:22:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelperExtended_$3583_$",
                                "typeString": "type(library TransferHelperExtended)"
                              }
                            },
                            "id": 2394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3582,
                            "src": "5536:35:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5536:83:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2404,
                        "nodeType": "ExpressionStatement",
                        "src": "5536:83:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2406,
                              "name": "incentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2354,
                              "src": "5706:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2407,
                              "name": "refund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2342,
                              "src": "5719:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2405,
                            "name": "IncentiveEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3328,
                            "src": "5691:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 2408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5691:35:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2409,
                        "nodeType": "EmitStatement",
                        "src": "5686:40:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2336,
                    "nodeType": "StructuredDocumentation",
                    "src": "4789:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "b5ada6e4",
                  "id": 2411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endIncentive",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2340,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4882:8:27"
                  },
                  "parameters": {
                    "id": 2339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2338,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2411,
                        "src": "4848:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "4848:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4847:25:27"
                  },
                  "returnParameters": {
                    "id": 2343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2342,
                        "mutability": "mutable",
                        "name": "refund",
                        "nodeType": "VariableDeclaration",
                        "scope": 2411,
                        "src": "4900:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2341,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4900:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4899:16:27"
                  },
                  "scope": 3135,
                  "src": "4826:907:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 2525,
                    "nodeType": "Block",
                    "src": "6137:896:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2427,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6168:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6168:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2431,
                                    "name": "nonfungiblePositionManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2123,
                                    "src": "6190:26:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                      "typeString": "contract INonfungiblePositionManager"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                      "typeString": "contract INonfungiblePositionManager"
                                    }
                                  ],
                                  "id": 2430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6182:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2429,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6182:7:27",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6182:35:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6168:49:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a6f6e45524337323152656365697665643a206e6f74206120756e697633206e6674",
                              "id": 2434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6231:52:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9bf96e75e94ea4a0908da69299e92f34467aea16295aa11950ca12d63a88d91",
                                "typeString": "literal_string \"UniswapV3Staker::onERC721Received: not a univ3 nft\""
                              },
                              "value": "UniswapV3Staker::onERC721Received: not a univ3 nft"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9bf96e75e94ea4a0908da69299e92f34467aea16295aa11950ca12d63a88d91",
                                "typeString": "literal_string \"UniswapV3Staker::onERC721Received: not a univ3 nft\""
                              }
                            ],
                            "id": 2426,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6147:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6147:146:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2436,
                        "nodeType": "ExpressionStatement",
                        "src": "6147:146:27"
                      },
                      {
                        "assignments": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          2438,
                          2440,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 2438,
                            "mutability": "mutable",
                            "name": "tickLower",
                            "nodeType": "VariableDeclaration",
                            "scope": 2525,
                            "src": "6315:15:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "typeName": {
                              "id": 2437,
                              "name": "int24",
                              "nodeType": "ElementaryTypeName",
                              "src": "6315:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2440,
                            "mutability": "mutable",
                            "name": "tickUpper",
                            "nodeType": "VariableDeclaration",
                            "scope": 2525,
                            "src": "6332:15:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "typeName": {
                              "id": 2439,
                              "name": "int24",
                              "nodeType": "ElementaryTypeName",
                              "src": "6332:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 2445,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2443,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2418,
                              "src": "6398:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2441,
                              "name": "nonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2123,
                              "src": "6361:26:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "positions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1641,
                            "src": "6361:36:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6361:45:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6304:102:27"
                      },
                      {
                        "expression": {
                          "id": 2455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2446,
                              "name": "deposits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2143,
                              "src": "6417:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                              }
                            },
                            "id": 2448,
                            "indexExpression": {
                              "id": 2447,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2418,
                              "src": "6426:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6417:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                              "typeString": "struct UniswapV3Staker.Deposit storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2450,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2416,
                                "src": "6453:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6475:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 2452,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2438,
                                "src": "6489:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 2453,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2440,
                                "src": "6511:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              ],
                              "id": 2449,
                              "name": "Deposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2108,
                              "src": "6437:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Deposit_$2108_storage_ptr_$",
                                "typeString": "type(struct UniswapV3Staker.Deposit storage pointer)"
                              }
                            },
                            "id": 2454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "owner",
                              "numberOfStakes",
                              "tickLower",
                              "tickUpper"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6437:85:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                              "typeString": "struct UniswapV3Staker.Deposit memory"
                            }
                          },
                          "src": "6417:105:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                            "typeString": "struct UniswapV3Staker.Deposit storage ref"
                          }
                        },
                        "id": 2456,
                        "nodeType": "ExpressionStatement",
                        "src": "6417:105:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2458,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2418,
                              "src": "6556:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6573:1:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6565:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2459,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6565:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6565:10:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 2463,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2416,
                              "src": "6577:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2457,
                            "name": "DepositTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3337,
                            "src": "6537:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6537:45:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2465,
                        "nodeType": "EmitStatement",
                        "src": "6532:50:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2466,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2420,
                              "src": "6597:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 2467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6597:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6611:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6597:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2520,
                        "nodeType": "IfStatement",
                        "src": "6593:387:27",
                        "trueBody": {
                          "id": 2519,
                          "nodeType": "Block",
                          "src": "6614:366:27",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2470,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2420,
                                    "src": "6632:4:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  },
                                  "id": 2471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "6632:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "313630",
                                  "id": 2472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6647:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_160_by_1",
                                    "typeString": "int_const 160"
                                  },
                                  "value": "160"
                                },
                                "src": "6632:18:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2517,
                                "nodeType": "Block",
                                "src": "6745:225:27",
                                "statements": [
                                  {
                                    "assignments": [
                                      2488
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2488,
                                        "mutability": "mutable",
                                        "name": "keys",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2517,
                                        "src": "6763:26:27",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct IUniswapV3Staker.IncentiveKey[]"
                                        },
                                        "typeName": {
                                          "baseType": {
                                            "id": 2486,
                                            "name": "IncentiveKey",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 3160,
                                            "src": "6763:12:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                                              "typeString": "struct IUniswapV3Staker.IncentiveKey"
                                            }
                                          },
                                          "id": 2487,
                                          "nodeType": "ArrayTypeName",
                                          "src": "6763:14:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_IncentiveKey_$3160_storage_$dyn_storage_ptr",
                                            "typeString": "struct IUniswapV3Staker.IncentiveKey[]"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2496,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2491,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2420,
                                          "src": "6803:4:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "baseExpression": {
                                                "id": 2492,
                                                "name": "IncentiveKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3160,
                                                "src": "6810:12:27",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_struct$_IncentiveKey_$3160_storage_ptr_$",
                                                  "typeString": "type(struct IUniswapV3Staker.IncentiveKey storage pointer)"
                                                }
                                              },
                                              "id": 2493,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6810:14:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr_$",
                                                "typeString": "type(struct IUniswapV3Staker.IncentiveKey memory[] memory)"
                                              }
                                            }
                                          ],
                                          "id": 2494,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "6809:16:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr_$",
                                            "typeString": "type(struct IUniswapV3Staker.IncentiveKey memory[] memory)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr_$",
                                            "typeString": "type(struct IUniswapV3Staker.IncentiveKey memory[] memory)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2489,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "6792:3:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2490,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "6792:10:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 2495,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6792:34:27",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct IUniswapV3Staker.IncentiveKey memory[] memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6763:63:27"
                                  },
                                  {
                                    "body": {
                                      "id": 2515,
                                      "nodeType": "Block",
                                      "src": "6886:70:27",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "baseExpression": {
                                                  "id": 2509,
                                                  "name": "keys",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2488,
                                                  "src": "6920:4:27",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory[] memory"
                                                  }
                                                },
                                                "id": 2511,
                                                "indexExpression": {
                                                  "id": 2510,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2498,
                                                  "src": "6925:1:27",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "6920:7:27",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                                }
                                              },
                                              {
                                                "id": 2512,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2418,
                                                "src": "6929:7:27",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 2508,
                                              "name": "_stakeToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3134,
                                              "src": "6908:11:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IncentiveKey_$3160_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory,uint256)"
                                              }
                                            },
                                            "id": 2513,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6908:29:27",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 2514,
                                          "nodeType": "ExpressionStatement",
                                          "src": "6908:29:27"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2504,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2501,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2498,
                                        "src": "6864:1:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2502,
                                          "name": "keys",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2488,
                                          "src": "6868:4:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_IncentiveKey_$3160_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct IUniswapV3Staker.IncentiveKey memory[] memory"
                                          }
                                        },
                                        "id": 2503,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "6868:11:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6864:15:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2516,
                                    "initializationExpression": {
                                      "assignments": [
                                        2498
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 2498,
                                          "mutability": "mutable",
                                          "name": "i",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 2516,
                                          "src": "6849:9:27",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 2497,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6849:7:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 2500,
                                      "initialValue": {
                                        "hexValue": "30",
                                        "id": 2499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6861:1:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "6849:13:27"
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "id": 2506,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "6881:3:27",
                                        "subExpression": {
                                          "id": 2505,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2498,
                                          "src": "6881:1:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2507,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6881:3:27"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "6844:112:27"
                                  }
                                ]
                              },
                              "id": 2518,
                              "nodeType": "IfStatement",
                              "src": "6628:342:27",
                              "trueBody": {
                                "id": 2484,
                                "nodeType": "Block",
                                "src": "6652:87:27",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2477,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2420,
                                              "src": "6693:4:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_calldata_ptr",
                                                "typeString": "bytes calldata"
                                              }
                                            },
                                            {
                                              "components": [
                                                {
                                                  "id": 2478,
                                                  "name": "IncentiveKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3160,
                                                  "src": "6700:12:27",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_IncentiveKey_$3160_storage_ptr_$",
                                                    "typeString": "type(struct IUniswapV3Staker.IncentiveKey storage pointer)"
                                                  }
                                                }
                                              ],
                                              "id": 2479,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "6699:14:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_struct$_IncentiveKey_$3160_storage_ptr_$",
                                                "typeString": "type(struct IUniswapV3Staker.IncentiveKey storage pointer)"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes_calldata_ptr",
                                                "typeString": "bytes calldata"
                                              },
                                              {
                                                "typeIdentifier": "t_type$_t_struct$_IncentiveKey_$3160_storage_ptr_$",
                                                "typeString": "type(struct IUniswapV3Staker.IncentiveKey storage pointer)"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2475,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "6682:3:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 2476,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "decode",
                                            "nodeType": "MemberAccess",
                                            "src": "6682:10:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 2480,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6682:32:27",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                            "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                          }
                                        },
                                        {
                                          "id": 2481,
                                          "name": "tokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2418,
                                          "src": "6716:7:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                            "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2474,
                                        "name": "_stakeToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3134,
                                        "src": "6670:11:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IncentiveKey_$3160_memory_ptr_$_t_uint256_$returns$__$",
                                          "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory,uint256)"
                                        }
                                      },
                                      "id": 2482,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6670:54:27",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2483,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6670:54:27"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 2521,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6996:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                "typeString": "contract UniswapV3Staker"
                              }
                            },
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2526,
                            "src": "6996:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "6996:30:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 2425,
                        "id": 2524,
                        "nodeType": "Return",
                        "src": "6989:37:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2412,
                    "nodeType": "StructuredDocumentation",
                    "src": "5739:233:27",
                    "text": "@notice Upon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to `from`. Also stakes token\n in one or more incentives if properly formatted `data` has a length > 0.\n @inheritdoc IERC721Receiver"
                  },
                  "functionSelector": "150b7a02",
                  "id": 2526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2422,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6111:8:27"
                  },
                  "parameters": {
                    "id": 2421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2414,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6012:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6012:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2416,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6029:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6029:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2418,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6051:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2417,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6051:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2420,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6076:19:27",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2419,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6076:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6002:99:27"
                  },
                  "returnParameters": {
                    "id": 2425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2424,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "6129:6:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2423,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6129:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6128:8:27"
                  },
                  "scope": 3135,
                  "src": "5977:1056:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3256
                  ],
                  "body": {
                    "id": 2573,
                    "nodeType": "Block",
                    "src": "7148:357:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2536,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2531,
                                "src": "7166:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2539,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7180:1:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7172:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2537,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7172:7:27",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7172:10:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7166:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7472616e736665724465706f7369743a20696e76616c6964207472616e7366657220726563697069656e74",
                              "id": 2542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7184:62:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_609a81ead4ba147a036051c2e37cc94ba19be2c7d6ab8156c46b16274a9d10f4",
                                "typeString": "literal_string \"UniswapV3Staker::transferDeposit: invalid transfer recipient\""
                              },
                              "value": "UniswapV3Staker::transferDeposit: invalid transfer recipient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_609a81ead4ba147a036051c2e37cc94ba19be2c7d6ab8156c46b16274a9d10f4",
                                "typeString": "literal_string \"UniswapV3Staker::transferDeposit: invalid transfer recipient\""
                              }
                            ],
                            "id": 2535,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7158:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7158:89:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2544,
                        "nodeType": "ExpressionStatement",
                        "src": "7158:89:27"
                      },
                      {
                        "assignments": [
                          2546
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2546,
                            "mutability": "mutable",
                            "name": "owner",
                            "nodeType": "VariableDeclaration",
                            "scope": 2573,
                            "src": "7257:13:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2545,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7257:7:27",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2551,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 2547,
                              "name": "deposits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2143,
                              "src": "7273:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                              }
                            },
                            "id": 2549,
                            "indexExpression": {
                              "id": 2548,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2529,
                              "src": "7282:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7273:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                              "typeString": "struct UniswapV3Staker.Deposit storage ref"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2101,
                          "src": "7273:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7257:39:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2553,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2546,
                                "src": "7314:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2554,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7323:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7323:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7314:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7472616e736665724465706f7369743a2063616e206f6e6c792062652063616c6c6564206279206465706f736974206f776e6572",
                              "id": 2557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7335:71:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2bb2cfb206cbadc7f1a58a1b4b7c2ee2a6ba1b89ae928f119fb21fbcf81d36ef",
                                "typeString": "literal_string \"UniswapV3Staker::transferDeposit: can only be called by deposit owner\""
                              },
                              "value": "UniswapV3Staker::transferDeposit: can only be called by deposit owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2bb2cfb206cbadc7f1a58a1b4b7c2ee2a6ba1b89ae928f119fb21fbcf81d36ef",
                                "typeString": "literal_string \"UniswapV3Staker::transferDeposit: can only be called by deposit owner\""
                              }
                            ],
                            "id": 2552,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7306:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7306:101:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2559,
                        "nodeType": "ExpressionStatement",
                        "src": "7306:101:27"
                      },
                      {
                        "expression": {
                          "id": 2565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2560,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "7417:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                  "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                                }
                              },
                              "id": 2562,
                              "indexExpression": {
                                "id": 2561,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2529,
                                "src": "7426:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7417:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                                "typeString": "struct UniswapV3Staker.Deposit storage ref"
                              }
                            },
                            "id": 2563,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2101,
                            "src": "7417:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2564,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2531,
                            "src": "7443:2:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7417:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2566,
                        "nodeType": "ExpressionStatement",
                        "src": "7417:28:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2568,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2529,
                              "src": "7479:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2569,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2546,
                              "src": "7488:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2570,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2531,
                              "src": "7495:2:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2567,
                            "name": "DepositTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3337,
                            "src": "7460:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 2571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7460:38:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2572,
                        "nodeType": "EmitStatement",
                        "src": "7455:43:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2527,
                    "nodeType": "StructuredDocumentation",
                    "src": "7039:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "26bfee04",
                  "id": 2574,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferDeposit",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2533,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7139:8:27"
                  },
                  "parameters": {
                    "id": 2532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2529,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2574,
                        "src": "7101:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7101:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2531,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2574,
                        "src": "7118:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7118:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7100:29:27"
                  },
                  "returnParameters": {
                    "id": 2534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7148:0:27"
                  },
                  "scope": 3135,
                  "src": "7076:429:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3266
                  ],
                  "body": {
                    "id": 2645,
                    "nodeType": "Block",
                    "src": "7667:577:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2586,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2579,
                                "src": "7685:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2589,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7699:4:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                      "typeString": "contract UniswapV3Staker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                      "typeString": "contract UniswapV3Staker"
                                    }
                                  ],
                                  "id": 2588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7691:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2587,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7691:7:27",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7691:13:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7685:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7769746864726177546f6b656e3a2063616e6e6f7420776974686472617720746f207374616b6572",
                              "id": 2592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7706:59:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ff65a41922986db8a00c33f5f279573362a45e9a166226d53ca1479c6fbda716",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: cannot withdraw to staker\""
                              },
                              "value": "UniswapV3Staker::withdrawToken: cannot withdraw to staker"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ff65a41922986db8a00c33f5f279573362a45e9a166226d53ca1479c6fbda716",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: cannot withdraw to staker\""
                              }
                            ],
                            "id": 2585,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7677:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7677:89:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2594,
                        "nodeType": "ExpressionStatement",
                        "src": "7677:89:27"
                      },
                      {
                        "assignments": [
                          2596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2596,
                            "mutability": "mutable",
                            "name": "deposit",
                            "nodeType": "VariableDeclaration",
                            "scope": 2645,
                            "src": "7776:22:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                              "typeString": "struct UniswapV3Staker.Deposit"
                            },
                            "typeName": {
                              "id": 2595,
                              "name": "Deposit",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2108,
                              "src": "7776:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Deposit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2600,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2597,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "7801:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                              "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                            }
                          },
                          "id": 2599,
                          "indexExpression": {
                            "id": 2598,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2577,
                            "src": "7810:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7801:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                            "typeString": "struct UniswapV3Staker.Deposit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7776:42:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              },
                              "id": 2605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2602,
                                  "name": "deposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2596,
                                  "src": "7836:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                    "typeString": "struct UniswapV3Staker.Deposit memory"
                                  }
                                },
                                "id": 2603,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "numberOfStakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2103,
                                "src": "7836:22:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint48",
                                  "typeString": "uint48"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7862:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7836:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7769746864726177546f6b656e3a2063616e6e6f7420776974686472617720746f6b656e207768696c65207374616b6564",
                              "id": 2606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7865:68:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_500d56466c09681fd28e667c0a8a0d34d8c401b502293a08a018d985b75e7aed",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: cannot withdraw token while staked\""
                              },
                              "value": "UniswapV3Staker::withdrawToken: cannot withdraw token while staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_500d56466c09681fd28e667c0a8a0d34d8c401b502293a08a018d985b75e7aed",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: cannot withdraw token while staked\""
                              }
                            ],
                            "id": 2601,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7828:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7828:106:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2608,
                        "nodeType": "ExpressionStatement",
                        "src": "7828:106:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2610,
                                  "name": "deposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2596,
                                  "src": "7952:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                    "typeString": "struct UniswapV3Staker.Deposit memory"
                                  }
                                },
                                "id": 2611,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2101,
                                "src": "7952:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2612,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7969:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7969:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7952:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7769746864726177546f6b656e3a206f6e6c79206f776e65722063616e20776974686472617720746f6b656e",
                              "id": 2615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7981:63:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a8202f3ed8fef68502cdb85899324e7bff182d4c4d923be1941b47f8c4ca81db",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: only owner can withdraw token\""
                              },
                              "value": "UniswapV3Staker::withdrawToken: only owner can withdraw token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a8202f3ed8fef68502cdb85899324e7bff182d4c4d923be1941b47f8c4ca81db",
                                "typeString": "literal_string \"UniswapV3Staker::withdrawToken: only owner can withdraw token\""
                              }
                            ],
                            "id": 2609,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7944:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7944:101:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2617,
                        "nodeType": "ExpressionStatement",
                        "src": "7944:101:27"
                      },
                      {
                        "expression": {
                          "id": 2621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8056:24:27",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2618,
                              "name": "deposits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2143,
                              "src": "8063:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                              }
                            },
                            "id": 2620,
                            "indexExpression": {
                              "id": 2619,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "8072:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8063:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                              "typeString": "struct UniswapV3Staker.Deposit storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2622,
                        "nodeType": "ExpressionStatement",
                        "src": "8056:24:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2624,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "8114:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2625,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2596,
                                "src": "8123:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2101,
                              "src": "8123:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8146:1:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8138:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2627,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8138:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8138:10:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2623,
                            "name": "DepositTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3337,
                            "src": "8095:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8095:54:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2632,
                        "nodeType": "EmitStatement",
                        "src": "8090:59:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2638,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8212:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                    "typeString": "contract UniswapV3Staker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV3Staker_$3135",
                                    "typeString": "contract UniswapV3Staker"
                                  }
                                ],
                                "id": 2637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8204:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2636,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8204:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8204:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2640,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "8219:2:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2641,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "8223:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2642,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "8232:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2633,
                              "name": "nonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2123,
                              "src": "8160:26:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 277,
                            "src": "8160:43:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes memory) external"
                            }
                          },
                          "id": 2643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8160:77:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2644,
                        "nodeType": "ExpressionStatement",
                        "src": "8160:77:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2575,
                    "nodeType": "StructuredDocumentation",
                    "src": "7511:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "3c423f0b",
                  "id": 2646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2583,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7658:8:27"
                  },
                  "parameters": {
                    "id": 2582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2577,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "7580:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7580:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2579,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "7605:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2578,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7605:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2581,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "7625:17:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2580,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7625:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7570:78:27"
                  },
                  "returnParameters": {
                    "id": 2584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7667:0:27"
                  },
                  "scope": 3135,
                  "src": "7548:696:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3274
                  ],
                  "body": {
                    "id": 2671,
                    "nodeType": "Block",
                    "src": "8367:158:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2656,
                                    "name": "deposits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "8385:8:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                      "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                                    }
                                  },
                                  "id": 2658,
                                  "indexExpression": {
                                    "id": 2657,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2651,
                                    "src": "8394:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8385:17:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                                    "typeString": "struct UniswapV3Staker.Deposit storage ref"
                                  }
                                },
                                "id": 2659,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2101,
                                "src": "8385:23:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2660,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8412:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8412:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "8385:37:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a206f6e6c79206f776e65722063616e207374616b6520746f6b656e",
                              "id": 2663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8424:57:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cd2fe2b71d54e44241f00fe56f33196ecce2dc8475c2561941195c820188230a",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: only owner can stake token\""
                              },
                              "value": "UniswapV3Staker::stakeToken: only owner can stake token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cd2fe2b71d54e44241f00fe56f33196ecce2dc8475c2561941195c820188230a",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: only owner can stake token\""
                              }
                            ],
                            "id": 2655,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8377:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8377:105:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2665,
                        "nodeType": "ExpressionStatement",
                        "src": "8377:105:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2667,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "8505:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            },
                            {
                              "id": 2668,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "8510:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2666,
                            "name": "_stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3134,
                            "src": "8493:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IncentiveKey_$3160_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory,uint256)"
                            }
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8493:25:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2670,
                        "nodeType": "ExpressionStatement",
                        "src": "8493:25:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2647,
                    "nodeType": "StructuredDocumentation",
                    "src": "8250:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "f2d2909b",
                  "id": 2672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2653,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8358:8:27"
                  },
                  "parameters": {
                    "id": 2652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2649,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2672,
                        "src": "8307:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2648,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "8307:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2651,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2672,
                        "src": "8332:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2650,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8332:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8306:42:27"
                  },
                  "returnParameters": {
                    "id": 2654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8367:0:27"
                  },
                  "scope": 3135,
                  "src": "8287:238:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3282
                  ],
                  "body": {
                    "id": 2830,
                    "nodeType": "Block",
                    "src": "8650:2135:27",
                    "statements": [
                      {
                        "assignments": [
                          2682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2682,
                            "mutability": "mutable",
                            "name": "deposit",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "8660:22:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                              "typeString": "struct UniswapV3Staker.Deposit"
                            },
                            "typeName": {
                              "id": 2681,
                              "name": "Deposit",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2108,
                              "src": "8660:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Deposit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2686,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2683,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "8685:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                              "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                            }
                          },
                          "id": 2685,
                          "indexExpression": {
                            "id": 2684,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2677,
                            "src": "8694:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8685:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                            "typeString": "struct UniswapV3Staker.Deposit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8660:42:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2687,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8813:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8813:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2689,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2675,
                              "src": "8831:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            },
                            "id": 2690,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3157,
                            "src": "8831:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8813:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2702,
                        "nodeType": "IfStatement",
                        "src": "8809:232:27",
                        "trueBody": {
                          "id": 2701,
                          "nodeType": "Block",
                          "src": "8844:197:27",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2697,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2693,
                                        "name": "deposit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2682,
                                        "src": "8883:7:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                          "typeString": "struct UniswapV3Staker.Deposit memory"
                                        }
                                      },
                                      "id": 2694,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "owner",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2101,
                                      "src": "8883:13:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 2695,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "8900:3:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2696,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8900:10:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "src": "8883:27:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "556e697377617056335374616b65723a3a756e7374616b65546f6b656e3a206f6e6c79206f776e65722063616e20776974686472617720746f6b656e206265666f726520696e63656e7469766520656e642074696d65",
                                    "id": 2698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8928:88:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_890e47524915bbbf84059d0dcccbe24f4a371d69bda5b086e2407a909b07c897",
                                      "typeString": "literal_string \"UniswapV3Staker::unstakeToken: only owner can withdraw token before incentive end time\""
                                    },
                                    "value": "UniswapV3Staker::unstakeToken: only owner can withdraw token before incentive end time"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_890e47524915bbbf84059d0dcccbe24f4a371d69bda5b086e2407a909b07c897",
                                      "typeString": "literal_string \"UniswapV3Staker::unstakeToken: only owner can withdraw token before incentive end time\""
                                    }
                                  ],
                                  "id": 2692,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8858:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8858:172:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2700,
                              "nodeType": "ExpressionStatement",
                              "src": "8858:172:27"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2704
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2704,
                            "mutability": "mutable",
                            "name": "incentiveId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9051:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2703,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9051:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2709,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2707,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2675,
                              "src": "9093:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 2705,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "9073:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 2706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "9073:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9073:24:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9051:46:27"
                      },
                      {
                        "assignments": [
                          2711,
                          2713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2711,
                            "mutability": "mutable",
                            "name": "secondsPerLiquidityInsideInitialX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9109:44:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2710,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "9109:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2713,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9155:17:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 2712,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "9155:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2718,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2715,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2677,
                              "src": "9183:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2716,
                              "name": "incentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2704,
                              "src": "9192:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2714,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "9176:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes32_$returns$_t_uint160_$_t_uint128_$",
                              "typeString": "function (uint256,bytes32) view returns (uint160,uint128)"
                            }
                          },
                          "id": 2717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9176:28:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint160_$_t_uint128_$",
                            "typeString": "tuple(uint160,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9108:96:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2720,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2713,
                                "src": "9223:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9236:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9223:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a756e7374616b65546f6b656e3a207374616b6520646f6573206e6f74206578697374",
                              "id": 2723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9239:53:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4aa6be96f3947efce39d4719c93b6331965baca69492a001463b59edc3edf4cd",
                                "typeString": "literal_string \"UniswapV3Staker::unstakeToken: stake does not exist\""
                              },
                              "value": "UniswapV3Staker::unstakeToken: stake does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4aa6be96f3947efce39d4719c93b6331965baca69492a001463b59edc3edf4cd",
                                "typeString": "literal_string \"UniswapV3Staker::unstakeToken: stake does not exist\""
                              }
                            ],
                            "id": 2719,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9215:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9215:78:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2725,
                        "nodeType": "ExpressionStatement",
                        "src": "9215:78:27"
                      },
                      {
                        "assignments": [
                          2727
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2727,
                            "mutability": "mutable",
                            "name": "incentive",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9304:27:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                              "typeString": "struct UniswapV3Staker.Incentive"
                            },
                            "typeName": {
                              "id": 2726,
                              "name": "Incentive",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2099,
                              "src": "9304:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2731,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2728,
                            "name": "incentives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2137,
                            "src": "9334:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                              "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                            }
                          },
                          "id": 2730,
                          "indexExpression": {
                            "id": 2729,
                            "name": "incentiveId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2704,
                            "src": "9345:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9334:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                            "typeString": "struct UniswapV3Staker.Incentive storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9304:53:27"
                      },
                      {
                        "expression": {
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "9368:34:27",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2732,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "9368:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                  "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                                }
                              },
                              "id": 2734,
                              "indexExpression": {
                                "id": 2733,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2677,
                                "src": "9377:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9368:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                                "typeString": "struct UniswapV3Staker.Deposit storage ref"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfStakes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2103,
                            "src": "9368:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 2737,
                        "nodeType": "ExpressionStatement",
                        "src": "9368:34:27"
                      },
                      {
                        "expression": {
                          "id": 2741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "9412:26:27",
                          "subExpression": {
                            "expression": {
                              "id": 2738,
                              "name": "incentive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2727,
                              "src": "9412:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                              }
                            },
                            "id": 2740,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfStakes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2098,
                            "src": "9412:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 2742,
                        "nodeType": "ExpressionStatement",
                        "src": "9412:26:27"
                      },
                      {
                        "assignments": [
                          null,
                          2744,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 2744,
                            "mutability": "mutable",
                            "name": "secondsPerLiquidityInsideX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9452:37:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2743,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "9452:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2753,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2748,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "9542:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2749,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickLower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2105,
                              "src": "9542:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "expression": {
                                "id": 2750,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "9561:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2751,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickUpper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2107,
                              "src": "9561:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2745,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2675,
                                "src": "9507:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2746,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3153,
                              "src": "9507:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 2747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snapshotCumulativesInside",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "9507:34:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_int24_$_t_int24_$returns$_t_int56_$_t_uint160_$_t_uint32_$",
                              "typeString": "function (int24,int24) view external returns (int56,uint160,uint32)"
                            }
                          },
                          "id": 2752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9507:72:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$_t_uint32_$",
                            "typeString": "tuple(int56,uint160,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9449:130:27"
                      },
                      {
                        "assignments": [
                          2755,
                          2757
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2755,
                            "mutability": "mutable",
                            "name": "reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9590:14:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2754,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9590:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2757,
                            "mutability": "mutable",
                            "name": "secondsInsideX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "9606:25:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2756,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "9606:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2774,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2760,
                                "name": "incentive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2727,
                                "src": "9695:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                  "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                                }
                              },
                              "id": 2761,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalRewardUnclaimed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2094,
                              "src": "9695:30:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2762,
                                "name": "incentive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2727,
                                "src": "9743:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                  "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                                }
                              },
                              "id": 2763,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSecondsClaimedX128",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2096,
                              "src": "9743:33:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "expression": {
                                "id": 2764,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2675,
                                "src": "9794:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2765,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3155,
                              "src": "9794:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2766,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2675,
                                "src": "9825:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2767,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3157,
                              "src": "9825:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2768,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2713,
                              "src": "9854:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 2769,
                              "name": "secondsPerLiquidityInsideInitialX128",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2711,
                              "src": "9881:36:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "id": 2770,
                              "name": "secondsPerLiquidityInsideX128",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2744,
                              "src": "9935:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "expression": {
                                "id": 2771,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9982:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9982:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2758,
                              "name": "RewardMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3520,
                              "src": "9647:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RewardMath_$3520_$",
                                "typeString": "type(library RewardMath)"
                              }
                            },
                            "id": 2759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeRewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3519,
                            "src": "9647:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint256_$_t_uint160_$",
                              "typeString": "function (uint256,uint160,uint256,uint256,uint128,uint160,uint160,uint256) pure returns (uint256,uint160)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9647:364:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
                            "typeString": "tuple(uint256,uint160)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9589:422:27"
                      },
                      {
                        "expression": {
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2775,
                              "name": "incentive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2727,
                              "src": "10170:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                              }
                            },
                            "id": 2777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalSecondsClaimedX128",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2096,
                            "src": "10170:33:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2778,
                            "name": "secondsInsideX128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2757,
                            "src": "10207:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "10170:54:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 2780,
                        "nodeType": "ExpressionStatement",
                        "src": "10170:54:27"
                      },
                      {
                        "expression": {
                          "id": 2785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2781,
                              "name": "incentive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2727,
                              "src": "10297:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive storage pointer"
                              }
                            },
                            "id": 2783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalRewardUnclaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2094,
                            "src": "10297:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2784,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2755,
                            "src": "10331:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10297:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2786,
                        "nodeType": "ExpressionStatement",
                        "src": "10297:40:27"
                      },
                      {
                        "expression": {
                          "id": 2795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2787,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2204,
                                "src": "10439:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IERC20Minimal_$722_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract IERC20Minimal => mapping(address => uint256))"
                                }
                              },
                              "id": 2792,
                              "indexExpression": {
                                "expression": {
                                  "id": 2788,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2675,
                                  "src": "10447:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2789,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3151,
                                "src": "10447:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                  "typeString": "contract IERC20Minimal"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10439:24:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2793,
                            "indexExpression": {
                              "expression": {
                                "id": 2790,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "10464:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2791,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2101,
                              "src": "10464:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10439:39:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2794,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2755,
                            "src": "10482:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10439:49:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2796,
                        "nodeType": "ExpressionStatement",
                        "src": "10439:49:27"
                      },
                      {
                        "assignments": [
                          2798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2798,
                            "mutability": "mutable",
                            "name": "stake",
                            "nodeType": "VariableDeclaration",
                            "scope": 2830,
                            "src": "10499:19:27",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                              "typeString": "struct UniswapV3Staker.Stake"
                            },
                            "typeName": {
                              "id": 2797,
                              "name": "Stake",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2115,
                              "src": "10499:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2804,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2799,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "10521:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake storage ref))"
                              }
                            },
                            "id": 2801,
                            "indexExpression": {
                              "id": 2800,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2677,
                              "src": "10529:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10521:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                              "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake storage ref)"
                            }
                          },
                          "id": 2803,
                          "indexExpression": {
                            "id": 2802,
                            "name": "incentiveId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2704,
                            "src": "10538:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10521:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$2115_storage",
                            "typeString": "struct UniswapV3Staker.Stake storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10499:51:27"
                      },
                      {
                        "expression": {
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "10560:49:27",
                          "subExpression": {
                            "expression": {
                              "id": 2805,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2798,
                              "src": "10567:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake storage pointer"
                              }
                            },
                            "id": 2806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondsPerLiquidityInsideInitialX128",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "10567:42:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2808,
                        "nodeType": "ExpressionStatement",
                        "src": "10560:49:27"
                      },
                      {
                        "expression": {
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "10619:32:27",
                          "subExpression": {
                            "expression": {
                              "id": 2809,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2798,
                              "src": "10626:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Stake storage pointer"
                              }
                            },
                            "id": 2810,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "liquidityNoOverflow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2112,
                            "src": "10626:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2812,
                        "nodeType": "ExpressionStatement",
                        "src": "10619:32:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2813,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2713,
                            "src": "10665:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10683:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 2815,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10683:6:27",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 2814,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10678:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10678:12:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10678:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "10665:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2824,
                        "nodeType": "IfStatement",
                        "src": "10661:67:27",
                        "trueBody": {
                          "expression": {
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "delete",
                            "prefix": true,
                            "src": "10696:32:27",
                            "subExpression": {
                              "expression": {
                                "id": 2820,
                                "name": "stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2798,
                                "src": "10703:5:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                  "typeString": "struct UniswapV3Staker.Stake storage pointer"
                                }
                              },
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "liquidityIfOverflow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2114,
                              "src": "10703:25:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2823,
                          "nodeType": "ExpressionStatement",
                          "src": "10696:32:27"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2826,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2677,
                              "src": "10757:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2827,
                              "name": "incentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2704,
                              "src": "10766:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2825,
                            "name": "TokenUnstaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3353,
                            "src": "10743:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10743:35:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2829,
                        "nodeType": "EmitStatement",
                        "src": "10738:40:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8531:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "f549ab42",
                  "id": 2831,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2679,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8641:8:27"
                  },
                  "parameters": {
                    "id": 2678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2675,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2831,
                        "src": "8590:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2674,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "8590:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2677,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2831,
                        "src": "8615:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8615:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8589:42:27"
                  },
                  "returnParameters": {
                    "id": 2680,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8650:0:27"
                  },
                  "scope": 3135,
                  "src": "8568:2217:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3294
                  ],
                  "body": {
                    "id": 2891,
                    "nodeType": "Block",
                    "src": "10986:343:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2844,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2842,
                            "src": "10996:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2845,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2204,
                                "src": "11005:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IERC20Minimal_$722_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract IERC20Minimal => mapping(address => uint256))"
                                }
                              },
                              "id": 2847,
                              "indexExpression": {
                                "id": 2846,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2834,
                                "src": "11013:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                  "typeString": "contract IERC20Minimal"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11005:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2850,
                            "indexExpression": {
                              "expression": {
                                "id": 2848,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11026:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11026:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11005:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10996:41:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2852,
                        "nodeType": "ExpressionStatement",
                        "src": "10996:41:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2853,
                              "name": "amountRequested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "11051:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11070:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11051:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2856,
                              "name": "amountRequested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "11075:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2857,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "11093:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11075:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11051:48:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2865,
                        "nodeType": "IfStatement",
                        "src": "11047:103:27",
                        "trueBody": {
                          "id": 2864,
                          "nodeType": "Block",
                          "src": "11101:49:27",
                          "statements": [
                            {
                              "expression": {
                                "id": 2862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2860,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2842,
                                  "src": "11115:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2861,
                                  "name": "amountRequested",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2838,
                                  "src": "11124:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11115:24:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2863,
                              "nodeType": "ExpressionStatement",
                              "src": "11115:24:27"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2866,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2204,
                                "src": "11160:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_IERC20Minimal_$722_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract IERC20Minimal => mapping(address => uint256))"
                                }
                              },
                              "id": 2870,
                              "indexExpression": {
                                "id": 2867,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2834,
                                "src": "11168:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                  "typeString": "contract IERC20Minimal"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11160:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2871,
                            "indexExpression": {
                              "expression": {
                                "id": 2868,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11181:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11181:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11160:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2872,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2842,
                            "src": "11196:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11160:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2874,
                        "nodeType": "ExpressionStatement",
                        "src": "11160:42:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2880,
                                  "name": "rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2834,
                                  "src": "11256:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                ],
                                "id": 2879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11248:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2878,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11248:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11248:20:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2882,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "11270:2:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2883,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "11274:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2875,
                              "name": "TransferHelperExtended",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3583,
                              "src": "11212:22:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelperExtended_$3583_$",
                                "typeString": "type(library TransferHelperExtended)"
                              }
                            },
                            "id": 2877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3582,
                            "src": "11212:35:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11212:69:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2885,
                        "nodeType": "ExpressionStatement",
                        "src": "11212:69:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2887,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "11311:2:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2888,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "11315:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2886,
                            "name": "RewardClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3360,
                            "src": "11297:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11297:25:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2890,
                        "nodeType": "EmitStatement",
                        "src": "11292:30:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2832,
                    "nodeType": "StructuredDocumentation",
                    "src": "10791:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "2f2d783d",
                  "id": 2892,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2840,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10952:8:27"
                  },
                  "parameters": {
                    "id": 2839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2834,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2892,
                        "src": "10858:25:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 2833,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 722,
                          "src": "10858:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2836,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 2892,
                        "src": "10893:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10893:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2838,
                        "mutability": "mutable",
                        "name": "amountRequested",
                        "nodeType": "VariableDeclaration",
                        "scope": 2892,
                        "src": "10913:23:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10913:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10848:94:27"
                  },
                  "returnParameters": {
                    "id": 2843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2842,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2892,
                        "src": "10970:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10970:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10969:16:27"
                  },
                  "scope": 3135,
                  "src": "10828:501:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3306
                  ],
                  "body": {
                    "id": 2972,
                    "nodeType": "Block",
                    "src": "11548:883:27",
                    "statements": [
                      {
                        "assignments": [
                          2906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2906,
                            "mutability": "mutable",
                            "name": "incentiveId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11558:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2905,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11558:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2911,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2909,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2895,
                              "src": "11600:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 2907,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "11580:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 2908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "11580:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11580:24:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11558:46:27"
                      },
                      {
                        "assignments": [
                          2913,
                          2915
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2913,
                            "mutability": "mutable",
                            "name": "secondsPerLiquidityInsideInitialX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11616:44:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2912,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "11616:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2915,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11662:17:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 2914,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "11662:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2920,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2917,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2897,
                              "src": "11690:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2918,
                              "name": "incentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2906,
                              "src": "11699:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2916,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "11683:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes32_$returns$_t_uint160_$_t_uint128_$",
                              "typeString": "function (uint256,bytes32) view returns (uint160,uint128)"
                            }
                          },
                          "id": 2919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11683:28:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint160_$_t_uint128_$",
                            "typeString": "tuple(uint160,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11615:96:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 2924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2922,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "11729:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11741:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11729:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a676574526577617264496e666f3a207374616b6520646f6573206e6f74206578697374",
                              "id": 2925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11744:54:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_387bdfb50aed53a419faf411b5840dba4b499783d5e51919833308d23daef880",
                                "typeString": "literal_string \"UniswapV3Staker::getRewardInfo: stake does not exist\""
                              },
                              "value": "UniswapV3Staker::getRewardInfo: stake does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_387bdfb50aed53a419faf411b5840dba4b499783d5e51919833308d23daef880",
                                "typeString": "literal_string \"UniswapV3Staker::getRewardInfo: stake does not exist\""
                              }
                            ],
                            "id": 2921,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11721:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11721:78:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2927,
                        "nodeType": "ExpressionStatement",
                        "src": "11721:78:27"
                      },
                      {
                        "assignments": [
                          2929
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2929,
                            "mutability": "mutable",
                            "name": "deposit",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11810:22:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                              "typeString": "struct UniswapV3Staker.Deposit"
                            },
                            "typeName": {
                              "id": 2928,
                              "name": "Deposit",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2108,
                              "src": "11810:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Deposit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2933,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2930,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "11835:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                              "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                            }
                          },
                          "id": 2932,
                          "indexExpression": {
                            "id": 2931,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2897,
                            "src": "11844:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11835:17:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                            "typeString": "struct UniswapV3Staker.Deposit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11810:42:27"
                      },
                      {
                        "assignments": [
                          2935
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2935,
                            "mutability": "mutable",
                            "name": "incentive",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11862:26:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Incentive_$2099_memory_ptr",
                              "typeString": "struct UniswapV3Staker.Incentive"
                            },
                            "typeName": {
                              "id": 2934,
                              "name": "Incentive",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2099,
                              "src": "11862:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage_ptr",
                                "typeString": "struct UniswapV3Staker.Incentive"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2939,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2936,
                            "name": "incentives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2137,
                            "src": "11891:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                              "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                            }
                          },
                          "id": 2938,
                          "indexExpression": {
                            "id": 2937,
                            "name": "incentiveId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "11902:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11891:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                            "typeString": "struct UniswapV3Staker.Incentive storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11862:52:27"
                      },
                      {
                        "assignments": [
                          null,
                          2941,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 2941,
                            "mutability": "mutable",
                            "name": "secondsPerLiquidityInsideX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 2972,
                            "src": "11928:37:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 2940,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "11928:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2950,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2945,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2929,
                                "src": "12018:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2946,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickLower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2105,
                              "src": "12018:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "expression": {
                                "id": 2947,
                                "name": "deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2929,
                                "src": "12037:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Deposit_$2108_memory_ptr",
                                  "typeString": "struct UniswapV3Staker.Deposit memory"
                                }
                              },
                              "id": 2948,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickUpper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2107,
                              "src": "12037:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 2942,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2895,
                                "src": "11983:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                  "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                }
                              },
                              "id": 2943,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3153,
                              "src": "11983:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 2944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snapshotCumulativesInside",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "11983:34:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_int24_$_t_int24_$returns$_t_int56_$_t_uint160_$_t_uint32_$",
                              "typeString": "function (int24,int24) view external returns (int56,uint160,uint32)"
                            }
                          },
                          "id": 2949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11983:72:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$_t_uint32_$",
                            "typeString": "tuple(int56,uint160,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11925:130:27"
                      },
                      {
                        "expression": {
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2951,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2901,
                                "src": "12067:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2952,
                                "name": "secondsInsideX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2903,
                                "src": "12075:17:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "id": 2953,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12066:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
                              "typeString": "tuple(uint256,uint160)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2956,
                                  "name": "incentive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2935,
                                  "src": "12140:9:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Incentive_$2099_memory_ptr",
                                    "typeString": "struct UniswapV3Staker.Incentive memory"
                                  }
                                },
                                "id": 2957,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalRewardUnclaimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2094,
                                "src": "12140:30:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2958,
                                  "name": "incentive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2935,
                                  "src": "12184:9:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Incentive_$2099_memory_ptr",
                                    "typeString": "struct UniswapV3Staker.Incentive memory"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalSecondsClaimedX128",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2096,
                                "src": "12184:33:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2960,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2895,
                                  "src": "12231:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2961,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3155,
                                "src": "12231:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2962,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2895,
                                  "src": "12258:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2963,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3157,
                                "src": "12258:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2964,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "12283:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 2965,
                                "name": "secondsPerLiquidityInsideInitialX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2913,
                                "src": "12306:36:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "id": 2966,
                                "name": "secondsPerLiquidityInsideX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2941,
                                "src": "12356:29:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2967,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "12399:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "12399:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2954,
                                "name": "RewardMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3520,
                                "src": "12096:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_RewardMath_$3520_$",
                                  "typeString": "type(library RewardMath)"
                                }
                              },
                              "id": 2955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "computeRewardAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3519,
                              "src": "12096:30:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint256_$_t_uint160_$",
                                "typeString": "function (uint256,uint160,uint256,uint256,uint128,uint160,uint160,uint256) pure returns (uint256,uint160)"
                              }
                            },
                            "id": 2969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12096:328:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
                              "typeString": "tuple(uint256,uint160)"
                            }
                          },
                          "src": "12066:358:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2971,
                        "nodeType": "ExpressionStatement",
                        "src": "12066:358:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2893,
                    "nodeType": "StructuredDocumentation",
                    "src": "11335:32:27",
                    "text": "@inheritdoc IUniswapV3Staker"
                  },
                  "functionSelector": "d953186e",
                  "id": 2973,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2899,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "11475:8:27"
                  },
                  "parameters": {
                    "id": 2898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2895,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2973,
                        "src": "11395:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2894,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "11395:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2897,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2973,
                        "src": "11420:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2896,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11420:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11394:42:27"
                  },
                  "returnParameters": {
                    "id": 2904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2901,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2973,
                        "src": "11501:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11501:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2903,
                        "mutability": "mutable",
                        "name": "secondsInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 2973,
                        "src": "11517:25:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 2902,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "11517:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11500:43:27"
                  },
                  "scope": 3135,
                  "src": "11372:1059:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3133,
                    "nodeType": "Block",
                    "src": "12579:1768:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2982,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "12597:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "12597:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2984,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2976,
                                  "src": "12616:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2985,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3155,
                                "src": "12616:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12597:32:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a20696e63656e74697665206e6f742073746172746564",
                              "id": 2987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12631:52:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_936855e069746ee2ba4fd7b68752c345664504c15a9720b31d011056d3026414",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: incentive not started\""
                              },
                              "value": "UniswapV3Staker::stakeToken: incentive not started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_936855e069746ee2ba4fd7b68752c345664504c15a9720b31d011056d3026414",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: incentive not started\""
                              }
                            ],
                            "id": 2981,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12589:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12589:95:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2989,
                        "nodeType": "ExpressionStatement",
                        "src": "12589:95:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2991,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "12702:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "12702:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 2993,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2976,
                                  "src": "12720:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 2994,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3157,
                                "src": "12720:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12702:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a20696e63656e7469766520656e646564",
                              "id": 2996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12733:46:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a75c193a83f17fda60838a3ec14c581dd46fa304a44b83d9a5c042651b93d85",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: incentive ended\""
                              },
                              "value": "UniswapV3Staker::stakeToken: incentive ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a75c193a83f17fda60838a3ec14c581dd46fa304a44b83d9a5c042651b93d85",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: incentive ended\""
                              }
                            ],
                            "id": 2990,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12694:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12694:86:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2998,
                        "nodeType": "ExpressionStatement",
                        "src": "12694:86:27"
                      },
                      {
                        "assignments": [
                          3000
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3000,
                            "mutability": "mutable",
                            "name": "incentiveId",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "12791:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2999,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12791:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3005,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3003,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2976,
                              "src": "12833:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 3001,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "12813:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 3002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "12813:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12813:24:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12791:46:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3007,
                                    "name": "incentives",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2137,
                                    "src": "12869:10:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                                      "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                                    }
                                  },
                                  "id": 3009,
                                  "indexExpression": {
                                    "id": 3008,
                                    "name": "incentiveId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3000,
                                    "src": "12880:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12869:23:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                                    "typeString": "struct UniswapV3Staker.Incentive storage ref"
                                  }
                                },
                                "id": 3010,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalRewardUnclaimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2094,
                                "src": "12869:44:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12916:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12869:48:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a206e6f6e2d6578697374656e7420696e63656e74697665",
                              "id": 3013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12931:53:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7227bd1f02861b46fe9f11aa5576097edc101d9fd5dd1e7c9862010bd004516c",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: non-existent incentive\""
                              },
                              "value": "UniswapV3Staker::stakeToken: non-existent incentive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7227bd1f02861b46fe9f11aa5576097edc101d9fd5dd1e7c9862010bd004516c",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: non-existent incentive\""
                              }
                            ],
                            "id": 3006,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12848:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12848:146:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3015,
                        "nodeType": "ExpressionStatement",
                        "src": "12848:146:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 3024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 3017,
                                      "name": "_stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2150,
                                      "src": "13025:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake storage ref))"
                                      }
                                    },
                                    "id": 3019,
                                    "indexExpression": {
                                      "id": 3018,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2978,
                                      "src": "13033:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13025:16:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                                      "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake storage ref)"
                                    }
                                  },
                                  "id": 3021,
                                  "indexExpression": {
                                    "id": 3020,
                                    "name": "incentiveId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3000,
                                    "src": "13042:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13025:29:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2115_storage",
                                    "typeString": "struct UniswapV3Staker.Stake storage ref"
                                  }
                                },
                                "id": 3022,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "liquidityNoOverflow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2112,
                                "src": "13025:49:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13078:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13025:54:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a20746f6b656e20616c7265616479207374616b6564",
                              "id": 3025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13093:51:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_524d25ead3171a54f871ad168277cc90c426b0838526ca5dfc1ee2fd17843bbf",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: token already staked\""
                              },
                              "value": "UniswapV3Staker::stakeToken: token already staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_524d25ead3171a54f871ad168277cc90c426b0838526ca5dfc1ee2fd17843bbf",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: token already staked\""
                              }
                            ],
                            "id": 3016,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13004:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13004:150:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3027,
                        "nodeType": "ExpressionStatement",
                        "src": "13004:150:27"
                      },
                      {
                        "assignments": [
                          3029,
                          3031,
                          3033,
                          3035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3029,
                            "mutability": "mutable",
                            "name": "pool",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "13166:19:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                              "typeString": "contract IUniswapV3Pool"
                            },
                            "typeName": {
                              "id": 3028,
                              "name": "IUniswapV3Pool",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 827,
                              "src": "13166:14:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3031,
                            "mutability": "mutable",
                            "name": "tickLower",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "13187:15:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "typeName": {
                              "id": 3030,
                              "name": "int24",
                              "nodeType": "ElementaryTypeName",
                              "src": "13187:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3033,
                            "mutability": "mutable",
                            "name": "tickUpper",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "13204:15:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "typeName": {
                              "id": 3032,
                              "name": "int24",
                              "nodeType": "ElementaryTypeName",
                              "src": "13204:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3035,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "13221:17:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 3034,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "13221:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3042,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3038,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2119,
                              "src": "13286:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                                "typeString": "contract IUniswapV3Factory"
                              }
                            },
                            {
                              "id": 3039,
                              "name": "nonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2123,
                              "src": "13295:26:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            {
                              "id": 3040,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2978,
                              "src": "13323:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                                "typeString": "contract IUniswapV3Factory"
                              },
                              {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                "typeString": "contract INonfungiblePositionManager"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3036,
                              "name": "NFTPositionInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3449,
                              "src": "13254:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NFTPositionInfo_$3449_$",
                                "typeString": "type(library NFTPositionInfo)"
                              }
                            },
                            "id": 3037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPositionInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3448,
                            "src": "13254:31:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IUniswapV3Factory_$805_$_t_contract$_INonfungiblePositionManager_$1750_$_t_uint256_$returns$_t_contract$_IUniswapV3Pool_$827_$_t_int24_$_t_int24_$_t_uint128_$",
                              "typeString": "function (contract IUniswapV3Factory,contract INonfungiblePositionManager,uint256) view returns (contract IUniswapV3Pool,int24,int24,uint128)"
                            }
                          },
                          "id": 3041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13254:77:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IUniswapV3Pool_$827_$_t_int24_$_t_int24_$_t_uint128_$",
                            "typeString": "tuple(contract IUniswapV3Pool,int24,int24,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13165:166:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              },
                              "id": 3047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3044,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3029,
                                "src": "13350:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3045,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2976,
                                  "src": "13358:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                },
                                "id": 3046,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "pool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3153,
                                "src": "13358:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "src": "13350:16:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a20746f6b656e20706f6f6c206973206e6f742074686520696e63656e7469766520706f6f6c",
                              "id": 3048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13368:67:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_95b697a8f11b54be6877653648d5307f0134beee8d401c9367e6fbd0112c9568",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: token pool is not the incentive pool\""
                              },
                              "value": "UniswapV3Staker::stakeToken: token pool is not the incentive pool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_95b697a8f11b54be6877653648d5307f0134beee8d401c9367e6fbd0112c9568",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: token pool is not the incentive pool\""
                              }
                            ],
                            "id": 3043,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13342:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13342:94:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3050,
                        "nodeType": "ExpressionStatement",
                        "src": "13342:94:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 3054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3052,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3035,
                                "src": "13454:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13466:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13454:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056335374616b65723a3a7374616b65546f6b656e3a2063616e6e6f74207374616b6520746f6b656e20776974682030206c6971756964697479",
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13469:66:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6fc639dce1cc957a25e6c3f243500805fc10a686148519f00de9b728122a78dd",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: cannot stake token with 0 liquidity\""
                              },
                              "value": "UniswapV3Staker::stakeToken: cannot stake token with 0 liquidity"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6fc639dce1cc957a25e6c3f243500805fc10a686148519f00de9b728122a78dd",
                                "typeString": "literal_string \"UniswapV3Staker::stakeToken: cannot stake token with 0 liquidity\""
                              }
                            ],
                            "id": 3051,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13446:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13446:90:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3057,
                        "nodeType": "ExpressionStatement",
                        "src": "13446:90:27"
                      },
                      {
                        "expression": {
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "13547:34:27",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3058,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "13547:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$2108_storage_$",
                                  "typeString": "mapping(uint256 => struct UniswapV3Staker.Deposit storage ref)"
                                }
                              },
                              "id": 3060,
                              "indexExpression": {
                                "id": 3059,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2978,
                                "src": "13556:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13547:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Deposit_$2108_storage",
                                "typeString": "struct UniswapV3Staker.Deposit storage ref"
                              }
                            },
                            "id": 3061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfStakes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2103,
                            "src": "13547:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "id": 3063,
                        "nodeType": "ExpressionStatement",
                        "src": "13547:34:27"
                      },
                      {
                        "expression": {
                          "id": 3068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "13591:40:27",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3064,
                                "name": "incentives",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2137,
                                "src": "13591:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Incentive_$2099_storage_$",
                                  "typeString": "mapping(bytes32 => struct UniswapV3Staker.Incentive storage ref)"
                                }
                              },
                              "id": 3066,
                              "indexExpression": {
                                "id": 3065,
                                "name": "incentiveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3000,
                                "src": "13602:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13591:23:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Incentive_$2099_storage",
                                "typeString": "struct UniswapV3Staker.Incentive storage ref"
                              }
                            },
                            "id": 3067,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfStakes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2098,
                            "src": "13591:38:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 3069,
                        "nodeType": "ExpressionStatement",
                        "src": "13591:40:27"
                      },
                      {
                        "assignments": [
                          null,
                          3071,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 3071,
                            "mutability": "mutable",
                            "name": "secondsPerLiquidityInsideX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 3133,
                            "src": "13645:37:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 3070,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "13645:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3077,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3074,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3031,
                              "src": "13719:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 3075,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3033,
                              "src": "13730:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 3072,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3029,
                              "src": "13688:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 3073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snapshotCumulativesInside",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "13688:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_int24_$_t_int24_$returns$_t_int56_$_t_uint160_$_t_uint32_$",
                              "typeString": "function (int24,int24) view external returns (int56,uint160,uint32)"
                            }
                          },
                          "id": 3076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13688:52:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$_t_uint32_$",
                            "typeString": "tuple(int56,uint160,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13642:98:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 3084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3078,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3035,
                            "src": "13755:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3081,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13773:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 3080,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13773:6:27",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 3079,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "13768:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 3082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13768:12:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 3083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "13768:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "13755:29:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3125,
                          "nodeType": "Block",
                          "src": "14058:223:27",
                          "statements": [
                            {
                              "assignments": [
                                3103
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3103,
                                  "mutability": "mutable",
                                  "name": "stake",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3125,
                                  "src": "14072:19:27",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                    "typeString": "struct UniswapV3Staker.Stake"
                                  },
                                  "typeName": {
                                    "id": 3102,
                                    "name": "Stake",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2115,
                                    "src": "14072:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                      "typeString": "struct UniswapV3Staker.Stake"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3109,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 3104,
                                    "name": "_stakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2150,
                                    "src": "14094:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                                      "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake storage ref))"
                                    }
                                  },
                                  "id": 3106,
                                  "indexExpression": {
                                    "id": 3105,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2978,
                                    "src": "14102:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14094:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                                    "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake storage ref)"
                                  }
                                },
                                "id": 3108,
                                "indexExpression": {
                                  "id": 3107,
                                  "name": "incentiveId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3000,
                                  "src": "14111:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14094:29:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2115_storage",
                                  "typeString": "struct UniswapV3Staker.Stake storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14072:51:27"
                            },
                            {
                              "expression": {
                                "id": 3114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3110,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3103,
                                    "src": "14137:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                      "typeString": "struct UniswapV3Staker.Stake storage pointer"
                                    }
                                  },
                                  "id": 3112,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "secondsPerLiquidityInsideInitialX128",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2110,
                                  "src": "14137:42:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3113,
                                  "name": "secondsPerLiquidityInsideX128",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "14182:29:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "src": "14137:74:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 3115,
                              "nodeType": "ExpressionStatement",
                              "src": "14137:74:27"
                            },
                            {
                              "expression": {
                                "id": 3123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3116,
                                    "name": "stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3103,
                                    "src": "14225:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$2115_storage_ptr",
                                      "typeString": "struct UniswapV3Staker.Stake storage pointer"
                                    }
                                  },
                                  "id": 3118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "liquidityNoOverflow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2112,
                                  "src": "14225:25:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3121,
                                      "name": "liquidity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3035,
                                      "src": "14260:9:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 3120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14253:6:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint96_$",
                                      "typeString": "type(uint96)"
                                    },
                                    "typeName": {
                                      "id": 3119,
                                      "name": "uint96",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14253:6:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14253:17:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "14225:45:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 3124,
                              "nodeType": "ExpressionStatement",
                              "src": "14225:45:27"
                            }
                          ]
                        },
                        "id": 3126,
                        "nodeType": "IfStatement",
                        "src": "13751:530:27",
                        "trueBody": {
                          "id": 3101,
                          "nodeType": "Block",
                          "src": "13786:266:27",
                          "statements": [
                            {
                              "expression": {
                                "id": 3099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 3085,
                                      "name": "_stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2150,
                                      "src": "13800:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(bytes32 => struct UniswapV3Staker.Stake storage ref))"
                                      }
                                    },
                                    "id": 3088,
                                    "indexExpression": {
                                      "id": 3086,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2978,
                                      "src": "13808:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13800:16:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Stake_$2115_storage_$",
                                      "typeString": "mapping(bytes32 => struct UniswapV3Staker.Stake storage ref)"
                                    }
                                  },
                                  "id": 3089,
                                  "indexExpression": {
                                    "id": 3087,
                                    "name": "incentiveId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3000,
                                    "src": "13817:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13800:29:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2115_storage",
                                    "typeString": "struct UniswapV3Staker.Stake storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3091,
                                      "name": "secondsPerLiquidityInsideX128",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3071,
                                      "src": "13894:29:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 3094,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "13967:6:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint96_$",
                                              "typeString": "type(uint96)"
                                            },
                                            "typeName": {
                                              "id": 3093,
                                              "name": "uint96",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "13967:6:27",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_uint96_$",
                                              "typeString": "type(uint96)"
                                            }
                                          ],
                                          "id": 3092,
                                          "name": "type",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -27,
                                          "src": "13962:4:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 3095,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13962:12:27",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_meta_type_t_uint96",
                                          "typeString": "type(uint96)"
                                        }
                                      },
                                      "id": 3096,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "max",
                                      "nodeType": "MemberAccess",
                                      "src": "13962:16:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    },
                                    {
                                      "id": 3097,
                                      "name": "liquidity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3035,
                                      "src": "14017:9:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      },
                                      {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      },
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 3090,
                                    "name": "Stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2115,
                                    "src": "13832:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Stake_$2115_storage_ptr_$",
                                      "typeString": "type(struct UniswapV3Staker.Stake storage pointer)"
                                    }
                                  },
                                  "id": 3098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [
                                    "secondsPerLiquidityInsideInitialX128",
                                    "liquidityNoOverflow",
                                    "liquidityIfOverflow"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "13832:209:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stake_$2115_memory_ptr",
                                    "typeString": "struct UniswapV3Staker.Stake memory"
                                  }
                                },
                                "src": "13800:241:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$2115_storage",
                                  "typeString": "struct UniswapV3Staker.Stake storage ref"
                                }
                              },
                              "id": 3100,
                              "nodeType": "ExpressionStatement",
                              "src": "13800:241:27"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3128,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2978,
                              "src": "14308:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3129,
                              "name": "incentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3000,
                              "src": "14317:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3130,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3035,
                              "src": "14330:9:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 3127,
                            "name": "TokenStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3346,
                            "src": "14296:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint128_$returns$__$",
                              "typeString": "function (uint256,bytes32,uint128)"
                            }
                          },
                          "id": 3131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14296:44:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3132,
                        "nodeType": "EmitStatement",
                        "src": "14291:49:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2974,
                    "nodeType": "StructuredDocumentation",
                    "src": "12437:66:27",
                    "text": "@dev Stakes a deposited token without doing an ownership check"
                  },
                  "id": 3134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_stakeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2976,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3134,
                        "src": "12529:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2975,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "12529:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2978,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3134,
                        "src": "12554:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12554:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12528:42:27"
                  },
                  "returnParameters": {
                    "id": 2980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12579:0:27"
                  },
                  "scope": 3135,
                  "src": "12508:1839:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 3136,
              "src": "702:13647:27"
            }
          ],
          "src": "45:14305:27"
        }
      },
      "contracts/interfaces/IUniswapV3Staker.sol": {
        "id": 28,
        "ast": {
          "absolutePath": "contracts/interfaces/IUniswapV3Staker.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              722
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "IERC721Receiver": [
              354
            ],
            "IMulticall": [
              1555
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "IUniswapV3Staker": [
              3361
            ],
            "PoolAddress": [
              1903
            ]
          },
          "id": 3362,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3137,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:28"
            },
            {
              "id": 3138,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:28"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "id": 3139,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 355,
              "src": "90:66:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "id": 3140,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 806,
              "src": "158:69:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "id": 3141,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 828,
              "src": "228:66:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "id": 3142,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 723,
              "src": "295:65:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "id": 3143,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 1751,
              "src": "362:84:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
              "file": "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
              "id": 3144,
              "nodeType": "ImportDirective",
              "scope": 3362,
              "sourceUnit": 1556,
              "src": "447:67:28",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3146,
                    "name": "IERC721Receiver",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 354,
                    "src": "671:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Receiver_$354",
                      "typeString": "contract IERC721Receiver"
                    }
                  },
                  "id": 3147,
                  "nodeType": "InheritanceSpecifier",
                  "src": "671:15:28"
                },
                {
                  "baseName": {
                    "id": 3148,
                    "name": "IMulticall",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1555,
                    "src": "688:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMulticall_$1555",
                      "typeString": "contract IMulticall"
                    }
                  },
                  "id": 3149,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:10:28"
                }
              ],
              "contractDependencies": [
                354,
                1555
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 3145,
                "nodeType": "StructuredDocumentation",
                "src": "516:125:28",
                "text": "@title Uniswap V3 Staker Interface\n @notice Allows staking nonfungible liquidity tokens in exchange for reward tokens"
              },
              "fullyImplemented": false,
              "id": 3361,
              "linearizedBaseContracts": [
                3361,
                1555,
                354
              ],
              "name": "IUniswapV3Staker",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IUniswapV3Staker.IncentiveKey",
                  "id": 3160,
                  "members": [
                    {
                      "constant": false,
                      "id": 3151,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1076:25:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                        "typeString": "contract IERC20Minimal"
                      },
                      "typeName": {
                        "id": 3150,
                        "name": "IERC20Minimal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 722,
                        "src": "1076:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                          "typeString": "contract IERC20Minimal"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3153,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1111:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 3152,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 827,
                        "src": "1111:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3155,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1140:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1140:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3157,
                      "mutability": "mutable",
                      "name": "endTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1167:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3159,
                      "mutability": "mutable",
                      "name": "refundee",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1192:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncentiveKey",
                  "nodeType": "StructDefinition",
                  "scope": 3361,
                  "src": "1046:169:28",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 3161,
                    "nodeType": "StructuredDocumentation",
                    "src": "1221:34:28",
                    "text": "@notice The Uniswap V3 Factory"
                  },
                  "functionSelector": "c45a0155",
                  "id": 3166,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:2:28"
                  },
                  "returnParameters": {
                    "id": 3165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3164,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3166,
                        "src": "1302:17:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                          "typeString": "contract IUniswapV3Factory"
                        },
                        "typeName": {
                          "id": 3163,
                          "name": "IUniswapV3Factory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 805,
                          "src": "1302:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1301:19:28"
                  },
                  "scope": 3361,
                  "src": "1260:61:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3167,
                    "nodeType": "StructuredDocumentation",
                    "src": "1327:91:28",
                    "text": "@notice The nonfungible position manager with which this staking contract is compatible"
                  },
                  "functionSelector": "b44a2722",
                  "id": 3172,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonfungiblePositionManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1458:2:28"
                  },
                  "returnParameters": {
                    "id": 3171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3170,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3172,
                        "src": "1484:27:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 3169,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1750,
                          "src": "1484:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1483:29:28"
                  },
                  "scope": 3361,
                  "src": "1423:90:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3173,
                    "nodeType": "StructuredDocumentation",
                    "src": "1519:55:28",
                    "text": "@notice The max duration of an incentive in seconds"
                  },
                  "functionSelector": "3dc0714b",
                  "id": 3178,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxIncentiveDuration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1608:2:28"
                  },
                  "returnParameters": {
                    "id": 3177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3176,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3178,
                        "src": "1634:7:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1633:9:28"
                  },
                  "scope": 3361,
                  "src": "1579:64:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1649:88:28",
                    "text": "@notice The max amount of seconds into the future the incentive startTime can be set"
                  },
                  "functionSelector": "01b75440",
                  "id": 3184,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxIncentiveStartLeadTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1776:2:28"
                  },
                  "returnParameters": {
                    "id": 3183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3182,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3184,
                        "src": "1802:7:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1801:9:28"
                  },
                  "scope": 3361,
                  "src": "1742:69:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3185,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:407:28",
                    "text": "@notice Represents a staking incentive\n @param incentiveId The ID of the incentive computed from its parameters\n @return totalRewardUnclaimed The amount of reward token not yet claimed by users\n @return totalSecondsClaimedX128 Total liquidity-seconds claimed, represented as a UQ32.128\n @return numberOfStakes The count of deposits that are currently staked for the incentive"
                  },
                  "functionSelector": "60777795",
                  "id": 3196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incentives",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3187,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3196,
                        "src": "2249:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3186,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2248:21:28"
                  },
                  "returnParameters": {
                    "id": 3195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3190,
                        "mutability": "mutable",
                        "name": "totalRewardUnclaimed",
                        "nodeType": "VariableDeclaration",
                        "scope": 3196,
                        "src": "2330:28:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3189,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3192,
                        "mutability": "mutable",
                        "name": "totalSecondsClaimedX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3196,
                        "src": "2372:31:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3191,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "2372:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3194,
                        "mutability": "mutable",
                        "name": "numberOfStakes",
                        "nodeType": "VariableDeclaration",
                        "scope": 3196,
                        "src": "2417:21:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 3193,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2417:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2316:132:28"
                  },
                  "scope": 3361,
                  "src": "2229:220:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3197,
                    "nodeType": "StructuredDocumentation",
                    "src": "2455:310:28",
                    "text": "@notice Returns information about a deposited NFT\n @return owner The owner of the deposited NFT\n @return numberOfStakes Counter of how many incentives for which the liquidity is staked\n @return tickLower The lower tick of the range\n @return tickUpper The upper tick of the range"
                  },
                  "functionSelector": "b02c43d0",
                  "id": 3210,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposits",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3199,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3210,
                        "src": "2788:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2788:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2787:17:28"
                  },
                  "returnParameters": {
                    "id": 3209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3202,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 3210,
                        "src": "2865:13:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2865:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3204,
                        "mutability": "mutable",
                        "name": "numberOfStakes",
                        "nodeType": "VariableDeclaration",
                        "scope": 3210,
                        "src": "2892:21:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        "typeName": {
                          "id": 3203,
                          "name": "uint48",
                          "nodeType": "ElementaryTypeName",
                          "src": "2892:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3206,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 3210,
                        "src": "2927:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 3205,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2927:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3208,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 3210,
                        "src": "2956:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 3207,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2956:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2851:130:28"
                  },
                  "scope": 3361,
                  "src": "2770:212:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3211,
                    "nodeType": "StructuredDocumentation",
                    "src": "2988:397:28",
                    "text": "@notice Returns information about a staked liquidity NFT\n @param tokenId The ID of the staked token\n @param incentiveId The ID of the incentive for which the token is staked\n @return secondsPerLiquidityInsideInitialX128 secondsPerLiquidity represented as a UQ32.128\n @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed"
                  },
                  "functionSelector": "c36c1ea5",
                  "id": 3222,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakes",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3213,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3406:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3406:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3215,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3423:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3214,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3423:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3405:38:28"
                  },
                  "returnParameters": {
                    "id": 3221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3218,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideInitialX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3491:44:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3217,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3491:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3220,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 3222,
                        "src": "3537:17:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 3219,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3537:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3490:65:28"
                  },
                  "scope": 3361,
                  "src": "3390:166:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3223,
                    "nodeType": "StructuredDocumentation",
                    "src": "3562:335:28",
                    "text": "@notice Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated\n @param rewardToken The token for which to check rewards\n @param owner The owner for which the rewards owed are checked\n @return rewardsOwed The amount of the reward token claimable by the owner"
                  },
                  "functionSelector": "e70b9e27",
                  "id": 3232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3225,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 3232,
                        "src": "3919:25:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 3224,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 722,
                          "src": "3919:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3227,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 3232,
                        "src": "3946:13:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3946:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:42:28"
                  },
                  "returnParameters": {
                    "id": 3231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3230,
                        "mutability": "mutable",
                        "name": "rewardsOwed",
                        "nodeType": "VariableDeclaration",
                        "scope": 3232,
                        "src": "3984:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3984:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3983:21:28"
                  },
                  "scope": 3361,
                  "src": "3902:103:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3233,
                    "nodeType": "StructuredDocumentation",
                    "src": "4011:182:28",
                    "text": "@notice Creates a new liquidity mining incentive program\n @param key Details of the incentive to create\n @param reward The amount of reward tokens to be distributed"
                  },
                  "functionSelector": "5cc5e3d9",
                  "id": 3240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3235,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3240,
                        "src": "4223:23:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3234,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "4223:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3237,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3240,
                        "src": "4248:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4248:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4222:41:28"
                  },
                  "returnParameters": {
                    "id": 3239,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4272:0:28"
                  },
                  "scope": 3361,
                  "src": "4198:75:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3241,
                    "nodeType": "StructuredDocumentation",
                    "src": "4279:234:28",
                    "text": "@notice Ends an incentive after the incentive end time has passed and all stakes have been withdrawn\n @param key Details of the incentive to end\n @return refund The remaining reward tokens when the incentive is ended"
                  },
                  "functionSelector": "b5ada6e4",
                  "id": 3248,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3243,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3248,
                        "src": "4540:23:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3242,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "4540:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4539:25:28"
                  },
                  "returnParameters": {
                    "id": 3247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3246,
                        "mutability": "mutable",
                        "name": "refund",
                        "nodeType": "VariableDeclaration",
                        "scope": 3248,
                        "src": "4583:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4583:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4582:16:28"
                  },
                  "scope": 3361,
                  "src": "4518:81:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3249,
                    "nodeType": "StructuredDocumentation",
                    "src": "4605:203:28",
                    "text": "@notice Transfers ownership of a deposit from the sender to the given recipient\n @param tokenId The ID of the token (and the deposit) to transfer\n @param to The new owner of the deposit"
                  },
                  "functionSelector": "26bfee04",
                  "id": 3256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferDeposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3251,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3256,
                        "src": "4838:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4838:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3253,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3256,
                        "src": "4855:10:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4855:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4837:29:28"
                  },
                  "returnParameters": {
                    "id": 3255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4875:0:28"
                  },
                  "scope": 3361,
                  "src": "4813:63:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3257,
                    "nodeType": "StructuredDocumentation",
                    "src": "4882:345:28",
                    "text": "@notice Withdraws a Uniswap V3 LP token `tokenId` from this contract to the recipient `to`\n @param tokenId The unique identifier of an Uniswap V3 LP token\n @param to The address where the LP token will be sent\n @param data An optional data array that will be passed along to the `to` address via the NFT safeTransferFrom"
                  },
                  "functionSelector": "3c423f0b",
                  "id": 3266,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3259,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3266,
                        "src": "5264:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3258,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3261,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3266,
                        "src": "5289:10:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5289:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3263,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 3266,
                        "src": "5309:17:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3262,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5309:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5254:78:28"
                  },
                  "returnParameters": {
                    "id": 3265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5341:0:28"
                  },
                  "scope": 3361,
                  "src": "5232:110:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5348:163:28",
                    "text": "@notice Stakes a Uniswap V3 LP token\n @param key The key of the incentive for which to stake the NFT\n @param tokenId The ID of the token to stake"
                  },
                  "functionSelector": "f2d2909b",
                  "id": 3274,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3269,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3274,
                        "src": "5536:23:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3268,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "5536:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3271,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3274,
                        "src": "5561:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5561:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5535:42:28"
                  },
                  "returnParameters": {
                    "id": 3273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5586:0:28"
                  },
                  "scope": 3361,
                  "src": "5516:71:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3275,
                    "nodeType": "StructuredDocumentation",
                    "src": "5593:169:28",
                    "text": "@notice Unstakes a Uniswap V3 LP token\n @param key The key of the incentive for which to unstake the NFT\n @param tokenId The ID of the token to unstake"
                  },
                  "functionSelector": "f549ab42",
                  "id": 3282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3277,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3282,
                        "src": "5789:23:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3276,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "5789:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3279,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3282,
                        "src": "5814:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5814:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5788:42:28"
                  },
                  "returnParameters": {
                    "id": 3281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5839:0:28"
                  },
                  "scope": 3361,
                  "src": "5767:73:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3283,
                    "nodeType": "StructuredDocumentation",
                    "src": "5846:416:28",
                    "text": "@notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\n @param rewardToken The token being distributed as a reward\n @param to The address where claimed rewards will be sent to\n @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\n @return reward The amount of reward tokens claimed"
                  },
                  "functionSelector": "2f2d783d",
                  "id": 3294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3285,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "6297:25:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 3284,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 722,
                          "src": "6297:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3287,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "6332:10:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6332:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3289,
                        "mutability": "mutable",
                        "name": "amountRequested",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "6352:23:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6352:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6287:94:28"
                  },
                  "returnParameters": {
                    "id": 3293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3292,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3294,
                        "src": "6400:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6400:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6399:16:28"
                  },
                  "scope": 3361,
                  "src": "6267:149:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 3295,
                    "nodeType": "StructuredDocumentation",
                    "src": "6422:255:28",
                    "text": "@notice Calculates the reward amount that will be received for the given stake\n @param key The key of the incentive\n @param tokenId The ID of the token\n @return reward The reward accrued to the NFT for the given incentive thus far"
                  },
                  "functionSelector": "d953186e",
                  "id": 3306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3297,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3306,
                        "src": "6705:23:28",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3296,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "6705:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3299,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3306,
                        "src": "6730:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6730:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6704:42:28"
                  },
                  "returnParameters": {
                    "id": 3305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3302,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3306,
                        "src": "6781:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3301,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6781:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3304,
                        "mutability": "mutable",
                        "name": "secondsInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3306,
                        "src": "6797:25:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3303,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6797:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6780:43:28"
                  },
                  "scope": 3361,
                  "src": "6682:142:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3307,
                    "nodeType": "StructuredDocumentation",
                    "src": "6830:476:28",
                    "text": "@notice Event emitted when a liquidity mining incentive has been created\n @param rewardToken The token being distributed as a reward\n @param pool The Uniswap V3 pool\n @param startTime The time when the incentive program begins\n @param endTime The time when rewards stop accruing\n @param refundee The address which receives any remaining reward tokens after the end time\n @param reward The amount of reward tokens to be distributed"
                  },
                  "id": 3321,
                  "name": "IncentiveCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3309,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7343:33:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 3308,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 722,
                          "src": "7343:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7386:27:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                          "typeString": "contract IUniswapV3Pool"
                        },
                        "typeName": {
                          "id": 3310,
                          "name": "IUniswapV3Pool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 827,
                          "src": "7386:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3313,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7423:17:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7423:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3315,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7450:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7450:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3317,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "refundee",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7475:16:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3316,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7475:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3319,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3321,
                        "src": "7501:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7501:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7333:188:28"
                  },
                  "src": "7311:211:28"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3322,
                    "nodeType": "StructuredDocumentation",
                    "src": "7528:197:28",
                    "text": "@notice Event that can be emitted when a liquidity mining incentive has ended\n @param incentiveId The incentive which is ending\n @param refund The amount of reward tokens refunded"
                  },
                  "id": 3328,
                  "name": "IncentiveEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3328,
                        "src": "7751:27:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3323,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7751:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3326,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "refund",
                        "nodeType": "VariableDeclaration",
                        "scope": 3328,
                        "src": "7780:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3325,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7780:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7750:45:28"
                  },
                  "src": "7730:66:28"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3329,
                    "nodeType": "StructuredDocumentation",
                    "src": "7802:275:28",
                    "text": "@notice Emitted when ownership of a deposit changes\n @param tokenId The ID of the deposit (and token) that is being transferred\n @param oldOwner The owner before the deposit was transferred\n @param newOwner The owner after the deposit was transferred"
                  },
                  "id": 3337,
                  "name": "DepositTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3337,
                        "src": "8107:23:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8107:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 3337,
                        "src": "8132:24:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8132:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3335,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 3337,
                        "src": "8158:24:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8158:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8106:77:28"
                  },
                  "src": "8082:102:28"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3338,
                    "nodeType": "StructuredDocumentation",
                    "src": "8190:266:28",
                    "text": "@notice Event emitted when a Uniswap V3 LP token has been staked\n @param tokenId The unique identifier of an Uniswap V3 LP token\n @param liquidity The amount of liquidity staked\n @param incentiveId The incentive in which the token is staking"
                  },
                  "id": 3346,
                  "name": "TokenStaked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3340,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3346,
                        "src": "8479:23:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8479:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3342,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3346,
                        "src": "8504:27:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3341,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8504:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3344,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 3346,
                        "src": "8533:17:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 3343,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "8533:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8478:73:28"
                  },
                  "src": "8461:91:28"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3347,
                    "nodeType": "StructuredDocumentation",
                    "src": "8558:212:28",
                    "text": "@notice Event emitted when a Uniswap V3 LP token has been unstaked\n @param tokenId The unique identifier of an Uniswap V3 LP token\n @param incentiveId The incentive in which the token is staking"
                  },
                  "id": 3353,
                  "name": "TokenUnstaked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3349,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "8795:23:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3348,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8795:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3351,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "8820:27:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8820:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8794:54:28"
                  },
                  "src": "8775:74:28"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3354,
                    "nodeType": "StructuredDocumentation",
                    "src": "8855:185:28",
                    "text": "@notice Event emitted when a reward token has been claimed\n @param to The address where claimed rewards were sent to\n @param reward The amount of reward tokens claimed"
                  },
                  "id": 3360,
                  "name": "RewardClaimed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3356,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3360,
                        "src": "9065:18:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9065:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3358,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3360,
                        "src": "9085:14:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9085:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9064:36:28"
                  },
                  "src": "9045:56:28"
                }
              ],
              "scope": 3362,
              "src": "641:8462:28"
            }
          ],
          "src": "45:9059:28"
        }
      },
      "contracts/libraries/IncentiveId.sol": {
        "id": 29,
        "ast": {
          "absolutePath": "contracts/libraries/IncentiveId.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              722
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "IERC721Receiver": [
              354
            ],
            "IMulticall": [
              1555
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "IUniswapV3Staker": [
              3361
            ],
            "IncentiveId": [
              3382
            ],
            "PoolAddress": [
              1903
            ]
          },
          "id": 3383,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3363,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:29"
            },
            {
              "id": 3364,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:29"
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV3Staker.sol",
              "file": "../interfaces/IUniswapV3Staker.sol",
              "id": 3365,
              "nodeType": "ImportDirective",
              "scope": 3383,
              "sourceUnit": 3362,
              "src": "90:44:29",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 3382,
              "linearizedBaseContracts": [
                3382
              ],
              "name": "IncentiveId",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 3380,
                    "nodeType": "Block",
                    "src": "459:50:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3376,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3368,
                                  "src": "497:3:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                    "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3374,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "486:3:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "486:10:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "486:15:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3373,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "476:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:26:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 3372,
                        "id": 3379,
                        "nodeType": "Return",
                        "src": "469:33:29"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3366,
                    "nodeType": "StructuredDocumentation",
                    "src": "162:189:29",
                    "text": "@notice Calculate the key for a staking incentive\n @param key The components used to compute the incentive identifier\n @return incentiveId The identifier for the incentive"
                  },
                  "id": 3381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "compute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3368,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3381,
                        "src": "373:40:29",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3367,
                          "name": "IUniswapV3Staker.IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "373:29:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "372:42:29"
                  },
                  "returnParameters": {
                    "id": 3372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3371,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3381,
                        "src": "438:19:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3370,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:21:29"
                  },
                  "scope": 3382,
                  "src": "356:153:29",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3383,
              "src": "136:375:29"
            }
          ],
          "src": "45:467:29"
        }
      },
      "contracts/libraries/NFTPositionInfo.sol": {
        "id": 30,
        "ast": {
          "absolutePath": "contracts/libraries/NFTPositionInfo.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "NFTPositionInfo": [
              3449
            ],
            "PoolAddress": [
              1903
            ]
          },
          "id": 3450,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3384,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:30"
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
              "id": 3385,
              "nodeType": "ImportDirective",
              "scope": 3450,
              "sourceUnit": 1751,
              "src": "70:84:30",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
              "id": 3386,
              "nodeType": "ImportDirective",
              "scope": 3450,
              "sourceUnit": 806,
              "src": "155:69:30",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
              "id": 3387,
              "nodeType": "ImportDirective",
              "scope": 3450,
              "sourceUnit": 828,
              "src": "225:66:30",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
              "file": "@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
              "id": 3388,
              "nodeType": "ImportDirective",
              "scope": 3450,
              "sourceUnit": 1904,
              "src": "293:67:30",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 3389,
                "nodeType": "StructuredDocumentation",
                "src": "362:73:30",
                "text": "@notice Encapsulates the logic for getting info about a NFT token ID"
              },
              "fullyImplemented": true,
              "id": 3449,
              "linearizedBaseContracts": [
                3449
              ],
              "name": "NFTPositionInfo",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 3447,
                    "nodeType": "Block",
                    "src": "1318:432:30",
                    "statements": [
                      {
                        "assignments": [
                          3408
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3408,
                            "mutability": "mutable",
                            "name": "token0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3447,
                            "src": "1328:14:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1328:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3409,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1328:14:30"
                      },
                      {
                        "assignments": [
                          3411
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3411,
                            "mutability": "mutable",
                            "name": "token1",
                            "nodeType": "VariableDeclaration",
                            "scope": 3447,
                            "src": "1352:14:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3410,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1352:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3412,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1352:14:30"
                      },
                      {
                        "assignments": [
                          3414
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3414,
                            "mutability": "mutable",
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 3447,
                            "src": "1376:10:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            "typeName": {
                              "id": 3413,
                              "name": "uint24",
                              "nodeType": "ElementaryTypeName",
                              "src": "1376:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3415,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1376:10:30"
                      },
                      {
                        "expression": {
                          "id": 3427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              null,
                              {
                                "id": 3416,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3408,
                                "src": "1401:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3417,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3411,
                                "src": "1409:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3418,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3414,
                                "src": "1417:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              {
                                "id": 3419,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3401,
                                "src": "1422:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 3420,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3403,
                                "src": "1433:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 3421,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3405,
                                "src": "1444:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              null,
                              null,
                              null,
                              null
                            ],
                            "id": 3422,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1396:66:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$__$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$__$__$__$__$",
                              "typeString": "tuple(,,address,address,uint24,int24,int24,uint128,,,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3425,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3396,
                                "src": "1515:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3423,
                                "name": "nonfungiblePositionManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3394,
                                "src": "1465:26:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                                  "typeString": "contract INonfungiblePositionManager"
                                }
                              },
                              "id": 3424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "positions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1641,
                              "src": "1465:36:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                                "typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                              }
                            },
                            "id": 3426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1465:67:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "src": "1396:136:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3428,
                        "nodeType": "ExpressionStatement",
                        "src": "1396:136:30"
                      },
                      {
                        "expression": {
                          "id": 3445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3429,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3399,
                            "src": "1543:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3435,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3392,
                                        "src": "1630:7:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                                          "typeString": "contract IUniswapV3Factory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                                          "typeString": "contract IUniswapV3Factory"
                                        }
                                      ],
                                      "id": 3434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1622:7:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3433,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1622:7:30",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1622:16:30",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 3439,
                                        "name": "token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3408,
                                        "src": "1685:6:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 3440,
                                        "name": "token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3411,
                                        "src": "1701:6:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 3441,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3414,
                                        "src": "1714:3:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3437,
                                        "name": "PoolAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1903,
                                        "src": "1656:11:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_PoolAddress_$1903_$",
                                          "typeString": "type(library PoolAddress)"
                                        }
                                      },
                                      "id": 3438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "PoolKey",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1824,
                                      "src": "1656:19:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_PoolKey_$1824_storage_ptr_$",
                                        "typeString": "type(struct PoolAddress.PoolKey storage pointer)"
                                      }
                                    },
                                    "id": 3442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [
                                      "token0",
                                      "token1",
                                      "fee"
                                    ],
                                    "nodeType": "FunctionCall",
                                    "src": "1656:63:30",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                      "typeString": "struct PoolAddress.PoolKey memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_PoolKey_$1824_memory_ptr",
                                      "typeString": "struct PoolAddress.PoolKey memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3431,
                                    "name": "PoolAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1903,
                                    "src": "1578:11:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PoolAddress_$1903_$",
                                      "typeString": "type(library PoolAddress)"
                                    }
                                  },
                                  "id": 3432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "computeAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1902,
                                  "src": "1578:26:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1824_memory_ptr_$returns$_t_address_$",
                                    "typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
                                  }
                                },
                                "id": 3443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1578:155:30",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3430,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "1550:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$827_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 3444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1550:193:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "src": "1543:200:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 3446,
                        "nodeType": "ExpressionStatement",
                        "src": "1543:200:30"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3390,
                    "nodeType": "StructuredDocumentation",
                    "src": "465:510:30",
                    "text": "@param factory The address of the Uniswap V3 Factory used in computing the pool address\n @param nonfungiblePositionManager The address of the nonfungible position manager to query\n @param tokenId The unique identifier of an Uniswap V3 LP token\n @return pool The address of the Uniswap V3 pool\n @return tickLower The lower tick of the Uniswap V3 position\n @return tickUpper The upper tick of the Uniswap V3 position\n @return liquidity The amount of liquidity staked"
                  },
                  "id": 3448,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPositionInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3392,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1014:25:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                          "typeString": "contract IUniswapV3Factory"
                        },
                        "typeName": {
                          "id": 3391,
                          "name": "IUniswapV3Factory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 805,
                          "src": "1014:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$805",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3394,
                        "mutability": "mutable",
                        "name": "nonfungiblePositionManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1049:54:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 3393,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1750,
                          "src": "1049:27:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1750",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3396,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1113:15:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1004:130:30"
                  },
                  "returnParameters": {
                    "id": 3406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3399,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1195:19:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                          "typeString": "contract IUniswapV3Pool"
                        },
                        "typeName": {
                          "id": 3398,
                          "name": "IUniswapV3Pool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 827,
                          "src": "1195:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$827",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3401,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1228:15:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 3400,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3403,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1257:15:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 3402,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3405,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 3448,
                        "src": "1286:17:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 3404,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1286:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1181:132:30"
                  },
                  "scope": 3449,
                  "src": "980:770:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3450,
              "src": "435:1317:30"
            }
          ],
          "src": "45:1708:30"
        }
      },
      "contracts/libraries/RewardMath.sol": {
        "id": 31,
        "ast": {
          "absolutePath": "contracts/libraries/RewardMath.sol",
          "exportedSymbols": {
            "FullMath": [
              1420
            ],
            "Math": [
              84
            ],
            "RewardMath": [
              3520
            ]
          },
          "id": 3521,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3451,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:31"
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
              "file": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
              "id": 3452,
              "nodeType": "ImportDirective",
              "scope": 3521,
              "sourceUnit": 1421,
              "src": "70:59:31",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/math/Math.sol",
              "file": "@openzeppelin/contracts/math/Math.sol",
              "id": 3453,
              "nodeType": "ImportDirective",
              "scope": 3521,
              "sourceUnit": 85,
              "src": "130:47:31",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 3454,
                "nodeType": "StructuredDocumentation",
                "src": "179:122:31",
                "text": "@title Math for computing rewards\n @notice Allows computing rewards given some parameters of stakes and incentives"
              },
              "fullyImplemented": true,
              "id": 3520,
              "linearizedBaseContracts": [
                3520
              ],
              "name": "RewardMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 3518,
                    "nodeType": "Block",
                    "src": "1861:558:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3479,
                                "name": "currentTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3471,
                                "src": "1939:11:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3480,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3461,
                                "src": "1954:9:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1939:24:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3478,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "1932:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1932:32:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3483,
                        "nodeType": "ExpressionStatement",
                        "src": "1932:32:31"
                      },
                      {
                        "expression": {
                          "id": 3491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3484,
                            "name": "secondsInsideX128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3476,
                            "src": "2069:17:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 3490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  },
                                  "id": 3487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3485,
                                    "name": "secondsPerLiquidityInsideX128",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3469,
                                    "src": "2090:29:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 3486,
                                    "name": "secondsPerLiquidityInsideInitialX128",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3467,
                                    "src": "2122:36:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  },
                                  "src": "2090:68:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "id": 3488,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2089:70:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 3489,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3465,
                              "src": "2162:9:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "2089:82:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "2069:102:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 3492,
                        "nodeType": "ExpressionStatement",
                        "src": "2069:102:31"
                      },
                      {
                        "assignments": [
                          3494
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3494,
                            "mutability": "mutable",
                            "name": "totalSecondsUnclaimedX128",
                            "nodeType": "VariableDeclaration",
                            "scope": 3518,
                            "src": "2182:33:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3493,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2182:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3508,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 3497,
                                            "name": "endTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3463,
                                            "src": "2241:7:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3498,
                                            "name": "currentTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3471,
                                            "src": "2250:11:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3495,
                                            "name": "Math",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 84,
                                            "src": "2232:4:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Math_$84_$",
                                              "typeString": "type(library Math)"
                                            }
                                          },
                                          "id": 3496,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "max",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 32,
                                          "src": "2232:8:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 3499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2232:30:31",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 3500,
                                        "name": "startTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3461,
                                        "src": "2265:9:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2232:42:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3502,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2231:44:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "hexValue": "313238",
                                  "id": 3503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2279:3:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_128_by_1",
                                    "typeString": "int_const 128"
                                  },
                                  "value": "128"
                                },
                                "src": "2231:51:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3505,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2230:53:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3506,
                            "name": "totalSecondsClaimedX128",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3459,
                            "src": "2286:23:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "2230:79:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2182:127:31"
                      },
                      {
                        "expression": {
                          "id": 3516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3509,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3474,
                            "src": "2320:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3512,
                                "name": "totalRewardUnclaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3457,
                                "src": "2345:20:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3513,
                                "name": "secondsInsideX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3476,
                                "src": "2367:17:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "id": 3514,
                                "name": "totalSecondsUnclaimedX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3494,
                                "src": "2386:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3510,
                                "name": "FullMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1420,
                                "src": "2329:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FullMath_$1420_$",
                                  "typeString": "type(library FullMath)"
                                }
                              },
                              "id": 3511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1376,
                              "src": "2329:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2329:83:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2320:92:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3517,
                        "nodeType": "ExpressionStatement",
                        "src": "2320:92:31"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3455,
                    "nodeType": "StructuredDocumentation",
                    "src": "326:1141:31",
                    "text": "@notice Compute the amount of rewards owed given parameters of the incentive and stake\n @param totalRewardUnclaimed The total amount of unclaimed rewards left for an incentive\n @param totalSecondsClaimedX128 How many full liquidity-seconds have been already claimed for the incentive\n @param startTime When the incentive rewards began in epoch seconds\n @param endTime When rewards are no longer being dripped out in epoch seconds\n @param liquidity The amount of liquidity, assumed to be constant over the period over which the snapshots are measured\n @param secondsPerLiquidityInsideInitialX128 The seconds per liquidity of the liquidity tick range as of the beginning of the period\n @param secondsPerLiquidityInsideX128 The seconds per liquidity of the liquidity tick range as of the current block timestamp\n @param currentTime The current block timestamp, which must be greater than or equal to the start time\n @return reward The amount of rewards owed\n @return secondsInsideX128 The total liquidity seconds inside the position's range for the duration of the stake"
                  },
                  "id": 3519,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeRewardAmount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3457,
                        "mutability": "mutable",
                        "name": "totalRewardUnclaimed",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1510:28:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1510:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3459,
                        "mutability": "mutable",
                        "name": "totalSecondsClaimedX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1548:31:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3458,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3461,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1589:17:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1589:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3463,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1616:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3465,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1641:17:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 3464,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1641:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3467,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideInitialX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1668:44:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3466,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1668:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3469,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1722:37:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3468,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3471,
                        "mutability": "mutable",
                        "name": "currentTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1769:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1769:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1500:294:31"
                  },
                  "returnParameters": {
                    "id": 3477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3474,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1818:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1818:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3476,
                        "mutability": "mutable",
                        "name": "secondsInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3519,
                        "src": "1834:25:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3475,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1834:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1817:43:31"
                  },
                  "scope": 3520,
                  "src": "1472:947:31",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3521,
              "src": "301:2120:31"
            }
          ],
          "src": "45:2377:31"
        }
      },
      "contracts/libraries/TransferHelperExtended.sol": {
        "id": 32,
        "ast": {
          "absolutePath": "contracts/libraries/TransferHelperExtended.sol",
          "exportedSymbols": {
            "Address": [
              650
            ],
            "IERC20": [
              162
            ],
            "TransferHelper": [
              2074
            ],
            "TransferHelperExtended": [
              3583
            ]
          },
          "id": 3584,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3522,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:32"
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
              "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
              "id": 3523,
              "nodeType": "ImportDirective",
              "scope": 3584,
              "sourceUnit": 2075,
              "src": "71:70:32",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "@openzeppelin/contracts/utils/Address.sol",
              "id": 3524,
              "nodeType": "ImportDirective",
              "scope": 3584,
              "sourceUnit": 651,
              "src": "142:51:32",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 3583,
              "linearizedBaseContracts": [
                3583
              ],
              "name": "TransferHelperExtended",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 3527,
                  "libraryName": {
                    "id": 3525,
                    "name": "Address",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 650,
                    "src": "238:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Address_$650",
                      "typeString": "library Address"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "232:26:32",
                  "typeName": {
                    "id": 3526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 3555,
                    "nodeType": "Block",
                    "src": "796:175:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3540,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3530,
                                  "src": "814:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 3541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "814:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 3542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "814:18:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c706572457874656e6465643a3a736166655472616e7366657246726f6d3a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 3543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "834:64:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cca43b7ccabbdb5a9273b37718e136798fbc61dda30c78464909a9a690b01f8e",
                                "typeString": "literal_string \"TransferHelperExtended::safeTransferFrom: call to non-contract\""
                              },
                              "value": "TransferHelperExtended::safeTransferFrom: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cca43b7ccabbdb5a9273b37718e136798fbc61dda30c78464909a9a690b01f8e",
                                "typeString": "literal_string \"TransferHelperExtended::safeTransferFrom: call to non-contract\""
                              }
                            ],
                            "id": 3539,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "806:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "806:93:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3545,
                        "nodeType": "ExpressionStatement",
                        "src": "806:93:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3549,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3530,
                              "src": "941:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3550,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3532,
                              "src": "948:4:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3551,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3534,
                              "src": "954:2:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3552,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3536,
                              "src": "958:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3546,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2074,
                              "src": "909:14:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$2074_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1955,
                            "src": "909:31:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "909:55:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3554,
                        "nodeType": "ExpressionStatement",
                        "src": "909:55:32"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3528,
                    "nodeType": "StructuredDocumentation",
                    "src": "264:398:32",
                    "text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
                  },
                  "id": 3556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3530,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 3556,
                        "src": "702:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "702:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3532,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 3556,
                        "src": "725:12:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "725:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3534,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3556,
                        "src": "747:10:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "747:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3536,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 3556,
                        "src": "767:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "767:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:94:32"
                  },
                  "returnParameters": {
                    "id": 3538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:0:32"
                  },
                  "scope": 3583,
                  "src": "667:304:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3581,
                    "nodeType": "Block",
                    "src": "1366:161:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3567,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3559,
                                  "src": "1384:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 3568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "1384:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1384:18:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c706572457874656e6465643a3a736166655472616e736665723a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 3570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1404:60:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10115a262aeb94a0eafe6ad1f63c465ddde9d01ed6758200c550b37bafce9c4e",
                                "typeString": "literal_string \"TransferHelperExtended::safeTransfer: call to non-contract\""
                              },
                              "value": "TransferHelperExtended::safeTransfer: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_10115a262aeb94a0eafe6ad1f63c465ddde9d01ed6758200c550b37bafce9c4e",
                                "typeString": "literal_string \"TransferHelperExtended::safeTransfer: call to non-contract\""
                              }
                            ],
                            "id": 3566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1376:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1376:89:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3572,
                        "nodeType": "ExpressionStatement",
                        "src": "1376:89:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3576,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3559,
                              "src": "1503:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3577,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3561,
                              "src": "1510:2:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3578,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3563,
                              "src": "1514:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3573,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2074,
                              "src": "1475:14:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$2074_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 3575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2001,
                            "src": "1475:27:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1475:45:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3580,
                        "nodeType": "ExpressionStatement",
                        "src": "1475:45:32"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3557,
                    "nodeType": "StructuredDocumentation",
                    "src": "977:281:32",
                    "text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
                  },
                  "id": 3582,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3559,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 3582,
                        "src": "1294:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1294:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3561,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3582,
                        "src": "1317:10:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3563,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 3582,
                        "src": "1337:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1284:72:32"
                  },
                  "returnParameters": {
                    "id": 3565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1366:0:32"
                  },
                  "scope": 3583,
                  "src": "1263:264:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3584,
              "src": "195:1334:32"
            }
          ],
          "src": "45:1485:32"
        }
      },
      "contracts/test/TestERC20.sol": {
        "id": 33,
        "ast": {
          "absolutePath": "contracts/test/TestERC20.sol",
          "exportedSymbols": {
            "IERC20Minimal": [
              722
            ],
            "TestERC20": [
              3829
            ]
          },
          "id": 3830,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3585,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:33"
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
              "id": 3586,
              "nodeType": "ImportDirective",
              "scope": 3830,
              "sourceUnit": 723,
              "src": "112:65:33",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3587,
                    "name": "IERC20Minimal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 722,
                    "src": "201:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Minimal_$722",
                      "typeString": "contract IERC20Minimal"
                    }
                  },
                  "id": 3588,
                  "nodeType": "InheritanceSpecifier",
                  "src": "201:13:33"
                }
              ],
              "contractDependencies": [
                722
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3829,
              "linearizedBaseContracts": [
                3829,
                722
              ],
              "name": "TestERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    661
                  ],
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 3593,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 3592,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "256:8:33"
                  },
                  "scope": 3829,
                  "src": "221:53:33",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 3591,
                    "keyType": {
                      "id": 3589,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "229:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "221:27:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 3590,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "240:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    681
                  ],
                  "constant": false,
                  "functionSelector": "dd62ed3e",
                  "id": 3600,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 3599,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "335:8:33"
                  },
                  "scope": 3829,
                  "src": "280:73:33",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 3598,
                    "keyType": {
                      "id": 3594,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "288:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "280:47:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 3597,
                      "keyType": {
                        "id": 3595,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "307:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "299:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 3596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "318:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3611,
                    "nodeType": "Block",
                    "src": "394:47:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3606,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "409:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "409:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3608,
                              "name": "amountToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3602,
                              "src": "421:12:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3605,
                            "name": "mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3641,
                            "src": "404:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "404:30:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3610,
                        "nodeType": "ExpressionStatement",
                        "src": "404:30:33"
                      }
                    ]
                  },
                  "id": 3612,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3602,
                        "mutability": "mutable",
                        "name": "amountToMint",
                        "nodeType": "VariableDeclaration",
                        "scope": 3612,
                        "src": "372:20:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "372:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "371:22:33"
                  },
                  "returnParameters": {
                    "id": 3604,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "394:0:33"
                  },
                  "scope": 3829,
                  "src": "360:81:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3640,
                    "nodeType": "Block",
                    "src": "496:158:33",
                    "statements": [
                      {
                        "assignments": [
                          3620
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3620,
                            "mutability": "mutable",
                            "name": "balanceNext",
                            "nodeType": "VariableDeclaration",
                            "scope": 3640,
                            "src": "506:19:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3619,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "506:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3626,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3621,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "528:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3623,
                            "indexExpression": {
                              "id": 3622,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3614,
                              "src": "538:2:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "528:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3624,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3616,
                            "src": "544:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "528:22:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "506:44:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3628,
                                "name": "balanceNext",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3620,
                                "src": "568:11:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3629,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3616,
                                "src": "583:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "568:21:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6f766572666c6f772062616c616e6365",
                              "id": 3631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "591:18:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97564ae4d1714f0bc474190a1dcad42c537fb64fed59de7d2adfef4f875a6a26",
                                "typeString": "literal_string \"overflow balance\""
                              },
                              "value": "overflow balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97564ae4d1714f0bc474190a1dcad42c537fb64fed59de7d2adfef4f875a6a26",
                                "typeString": "literal_string \"overflow balance\""
                              }
                            ],
                            "id": 3627,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "560:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "560:50:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3633,
                        "nodeType": "ExpressionStatement",
                        "src": "560:50:33"
                      },
                      {
                        "expression": {
                          "id": 3638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3634,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "620:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3636,
                            "indexExpression": {
                              "id": 3635,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3614,
                              "src": "630:2:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "620:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3637,
                            "name": "balanceNext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3620,
                            "src": "636:11:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "620:27:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3639,
                        "nodeType": "ExpressionStatement",
                        "src": "620:27:33"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 3641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3614,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 3641,
                        "src": "461:10:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "461:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3616,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3641,
                        "src": "473:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "460:28:33"
                  },
                  "returnParameters": {
                    "id": 3618,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "496:0:33"
                  },
                  "scope": 3829,
                  "src": "447:207:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    671
                  ],
                  "body": {
                    "id": 3706,
                    "nodeType": "Block",
                    "src": "746:470:33",
                    "statements": [
                      {
                        "assignments": [
                          3652
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3652,
                            "mutability": "mutable",
                            "name": "balanceBefore",
                            "nodeType": "VariableDeclaration",
                            "scope": 3706,
                            "src": "756:21:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3651,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "756:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3657,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3653,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3593,
                            "src": "780:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3656,
                          "indexExpression": {
                            "expression": {
                              "id": 3654,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "790:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "790:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "780:21:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "756:45:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3659,
                                "name": "balanceBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3652,
                                "src": "819:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3660,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3645,
                                "src": "836:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "819:23:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e73756666696369656e742062616c616e6365",
                              "id": 3662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "844:22:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                                "typeString": "literal_string \"insufficient balance\""
                              },
                              "value": "insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                                "typeString": "literal_string \"insufficient balance\""
                              }
                            ],
                            "id": 3658,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "811:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:56:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3664,
                        "nodeType": "ExpressionStatement",
                        "src": "811:56:33"
                      },
                      {
                        "expression": {
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3665,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "877:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3668,
                            "indexExpression": {
                              "expression": {
                                "id": 3666,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "887:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "887:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "877:21:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3669,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3652,
                              "src": "901:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3670,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3645,
                              "src": "917:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "901:22:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "877:46:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3673,
                        "nodeType": "ExpressionStatement",
                        "src": "877:46:33"
                      },
                      {
                        "assignments": [
                          3675
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3675,
                            "mutability": "mutable",
                            "name": "balanceRecipient",
                            "nodeType": "VariableDeclaration",
                            "scope": 3706,
                            "src": "934:24:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3674,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "934:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3679,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3676,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3593,
                            "src": "961:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3678,
                          "indexExpression": {
                            "id": 3677,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3643,
                            "src": "971:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "961:20:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "934:47:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3681,
                                  "name": "balanceRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3675,
                                  "src": "999:16:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 3682,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3645,
                                  "src": "1018:6:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "999:25:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3684,
                                "name": "balanceRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3675,
                                "src": "1028:16:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "999:45:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "726563697069656e742062616c616e6365206f766572666c6f77",
                              "id": 3686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1046:28:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf713087cf21829ae9e7fa7c50c04d11ebcb989ba016ac20caf1a24d208fb619",
                                "typeString": "literal_string \"recipient balance overflow\""
                              },
                              "value": "recipient balance overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf713087cf21829ae9e7fa7c50c04d11ebcb989ba016ac20caf1a24d208fb619",
                                "typeString": "literal_string \"recipient balance overflow\""
                              }
                            ],
                            "id": 3680,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "991:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "991:84:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3688,
                        "nodeType": "ExpressionStatement",
                        "src": "991:84:33"
                      },
                      {
                        "expression": {
                          "id": 3695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3689,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "1085:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3691,
                            "indexExpression": {
                              "id": 3690,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "1095:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1085:20:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3692,
                              "name": "balanceRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3675,
                              "src": "1108:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3693,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3645,
                              "src": "1127:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1108:25:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1085:48:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3696,
                        "nodeType": "ExpressionStatement",
                        "src": "1085:48:33"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3698,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1158:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1158:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3700,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "1170:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3701,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3645,
                              "src": "1181:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3697,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "1149:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1149:39:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3703,
                        "nodeType": "EmitStatement",
                        "src": "1144:44:33"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1205:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3650,
                        "id": 3705,
                        "nodeType": "Return",
                        "src": "1198:11:33"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 3707,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3647,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "722:8:33"
                  },
                  "parameters": {
                    "id": 3646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3643,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 3707,
                        "src": "678:17:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "678:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3645,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3707,
                        "src": "697:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "697:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "677:35:33"
                  },
                  "returnParameters": {
                    "id": 3650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3649,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3707,
                        "src": "740:4:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3648,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "740:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "739:6:33"
                  },
                  "scope": 3829,
                  "src": "660:556:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    691
                  ],
                  "body": {
                    "id": 3735,
                    "nodeType": "Block",
                    "src": "1305:129:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 3724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3717,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3600,
                                "src": "1315:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3721,
                              "indexExpression": {
                                "expression": {
                                  "id": 3718,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1325:3:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1325:10:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1315:21:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3722,
                            "indexExpression": {
                              "id": 3720,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3709,
                              "src": "1337:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1315:30:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3723,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3711,
                            "src": "1348:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1315:39:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3725,
                        "nodeType": "ExpressionStatement",
                        "src": "1315:39:33"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3727,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1378:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1378:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3729,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3709,
                              "src": "1390:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3730,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3711,
                              "src": "1399:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3726,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "1369:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1369:37:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3732,
                        "nodeType": "EmitStatement",
                        "src": "1364:42:33"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1423:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3716,
                        "id": 3734,
                        "nodeType": "Return",
                        "src": "1416:11:33"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 3736,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3713,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1281:8:33"
                  },
                  "parameters": {
                    "id": 3712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3709,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 3736,
                        "src": "1239:15:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1239:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3711,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3736,
                        "src": "1256:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1256:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1238:33:33"
                  },
                  "returnParameters": {
                    "id": 3716,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3715,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3736,
                        "src": "1299:4:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3714,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1298:6:33"
                  },
                  "scope": 3829,
                  "src": "1222:212:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    703
                  ],
                  "body": {
                    "id": 3827,
                    "nodeType": "Block",
                    "src": "1576:664:33",
                    "statements": [
                      {
                        "assignments": [
                          3749
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3749,
                            "mutability": "mutable",
                            "name": "allowanceBefore",
                            "nodeType": "VariableDeclaration",
                            "scope": 3827,
                            "src": "1586:23:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3748,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1586:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3756,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3750,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3600,
                              "src": "1612:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3752,
                            "indexExpression": {
                              "id": 3751,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3738,
                              "src": "1622:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1612:17:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3755,
                          "indexExpression": {
                            "expression": {
                              "id": 3753,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1630:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1630:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1612:29:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1586:55:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3758,
                                "name": "allowanceBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3749,
                                "src": "1659:15:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3759,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3742,
                                "src": "1678:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1659:25:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "616c6c6f77616e636520696e73756666696369656e74",
                              "id": 3761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1686:24:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48c7521efa89c1111e54a3bf4ffe4235347647ac1a2a279a72b8228b6457c3d8",
                                "typeString": "literal_string \"allowance insufficient\""
                              },
                              "value": "allowance insufficient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48c7521efa89c1111e54a3bf4ffe4235347647ac1a2a279a72b8228b6457c3d8",
                                "typeString": "literal_string \"allowance insufficient\""
                              }
                            ],
                            "id": 3757,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1651:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1651:60:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3763,
                        "nodeType": "ExpressionStatement",
                        "src": "1651:60:33"
                      },
                      {
                        "expression": {
                          "id": 3773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3764,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3600,
                                "src": "1722:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3768,
                              "indexExpression": {
                                "id": 3765,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3738,
                                "src": "1732:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1722:17:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3769,
                            "indexExpression": {
                              "expression": {
                                "id": 3766,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1740:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1740:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1722:29:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3770,
                              "name": "allowanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3749,
                              "src": "1754:15:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3771,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3742,
                              "src": "1772:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1754:24:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1722:56:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3774,
                        "nodeType": "ExpressionStatement",
                        "src": "1722:56:33"
                      },
                      {
                        "assignments": [
                          3776
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3776,
                            "mutability": "mutable",
                            "name": "balanceRecipient",
                            "nodeType": "VariableDeclaration",
                            "scope": 3827,
                            "src": "1789:24:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3775,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1789:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3780,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3777,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3593,
                            "src": "1816:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3779,
                          "indexExpression": {
                            "id": 3778,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3740,
                            "src": "1826:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1816:20:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1789:47:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3782,
                                  "name": "balanceRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3776,
                                  "src": "1854:16:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 3783,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3742,
                                  "src": "1873:6:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1854:25:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3785,
                                "name": "balanceRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3776,
                                "src": "1883:16:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1854:45:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6f766572666c6f772062616c616e636520726563697069656e74",
                              "id": 3787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1901:28:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33fbf641ae77c06deddfb3a57d17dbbe6d85120e3104f1f9f1a8cde7162d5c8f",
                                "typeString": "literal_string \"overflow balance recipient\""
                              },
                              "value": "overflow balance recipient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33fbf641ae77c06deddfb3a57d17dbbe6d85120e3104f1f9f1a8cde7162d5c8f",
                                "typeString": "literal_string \"overflow balance recipient\""
                              }
                            ],
                            "id": 3781,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1846:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:84:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3789,
                        "nodeType": "ExpressionStatement",
                        "src": "1846:84:33"
                      },
                      {
                        "expression": {
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3790,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "1940:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3792,
                            "indexExpression": {
                              "id": 3791,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3740,
                              "src": "1950:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1940:20:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3793,
                              "name": "balanceRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3776,
                              "src": "1963:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3794,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3742,
                              "src": "1982:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1963:25:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1940:48:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3797,
                        "nodeType": "ExpressionStatement",
                        "src": "1940:48:33"
                      },
                      {
                        "assignments": [
                          3799
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3799,
                            "mutability": "mutable",
                            "name": "balanceSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 3827,
                            "src": "1998:21:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3798,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1998:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3803,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3800,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3593,
                            "src": "2022:9:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3802,
                          "indexExpression": {
                            "id": 3801,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3738,
                            "src": "2032:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2022:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1998:41:33"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3805,
                                "name": "balanceSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3799,
                                "src": "2057:13:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3806,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3742,
                                "src": "2074:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2057:23:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "756e646572666c6f772062616c616e63652073656e646572",
                              "id": 3808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2082:26:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cba23faf5574764a7c4bcd4fd79e71cda2b64d22d2246246a1b332a5e2ddb70a",
                                "typeString": "literal_string \"underflow balance sender\""
                              },
                              "value": "underflow balance sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cba23faf5574764a7c4bcd4fd79e71cda2b64d22d2246246a1b332a5e2ddb70a",
                                "typeString": "literal_string \"underflow balance sender\""
                              }
                            ],
                            "id": 3804,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2049:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2049:60:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3810,
                        "nodeType": "ExpressionStatement",
                        "src": "2049:60:33"
                      },
                      {
                        "expression": {
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3811,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "2119:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3813,
                            "indexExpression": {
                              "id": 3812,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3738,
                              "src": "2129:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2119:17:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3814,
                              "name": "balanceSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3799,
                              "src": "2139:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3815,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3742,
                              "src": "2155:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2139:22:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2119:42:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3818,
                        "nodeType": "ExpressionStatement",
                        "src": "2119:42:33"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3820,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3738,
                              "src": "2186:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3821,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3740,
                              "src": "2194:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3822,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3742,
                              "src": "2205:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3819,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "2177:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2177:35:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3824,
                        "nodeType": "EmitStatement",
                        "src": "2172:40:33"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2229:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3747,
                        "id": 3826,
                        "nodeType": "Return",
                        "src": "2222:11:33"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 3828,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3744,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1552:8:33"
                  },
                  "parameters": {
                    "id": 3743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3738,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 3828,
                        "src": "1471:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3740,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 3828,
                        "src": "1495:17:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1495:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3742,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3828,
                        "src": "1522:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1522:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1461:81:33"
                  },
                  "returnParameters": {
                    "id": 3747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3746,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3828,
                        "src": "1570:4:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3745,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1570:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1569:6:33"
                  },
                  "scope": 3829,
                  "src": "1440:800:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3830,
              "src": "179:2063:33"
            }
          ],
          "src": "87:2156:33"
        }
      },
      "contracts/test/TestIncentiveId.sol": {
        "id": 34,
        "ast": {
          "absolutePath": "contracts/test/TestIncentiveId.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              722
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "IERC721Receiver": [
              354
            ],
            "IMulticall": [
              1555
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "IUniswapV3Staker": [
              3361
            ],
            "IncentiveId": [
              3382
            ],
            "PoolAddress": [
              1903
            ],
            "TestIncentiveId": [
              3849
            ]
          },
          "id": 3850,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3831,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:34"
            },
            {
              "id": 3832,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:34"
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV3Staker.sol",
              "file": "../interfaces/IUniswapV3Staker.sol",
              "id": 3833,
              "nodeType": "ImportDirective",
              "scope": 3850,
              "sourceUnit": 3362,
              "src": "90:44:34",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/IncentiveId.sol",
              "file": "../libraries/IncentiveId.sol",
              "id": 3834,
              "nodeType": "ImportDirective",
              "scope": 3850,
              "sourceUnit": 3383,
              "src": "136:38:34",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3835,
                "nodeType": "StructuredDocumentation",
                "src": "176:39:34",
                "text": "@dev Test contract for IncentiveId"
              },
              "fullyImplemented": true,
              "id": 3849,
              "linearizedBaseContracts": [
                3849
              ],
              "name": "TestIncentiveId",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 3847,
                    "nodeType": "Block",
                    "src": "335:48:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3844,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3837,
                              "src": "372:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                                "typeString": "struct IUniswapV3Staker.IncentiveKey memory"
                              }
                            ],
                            "expression": {
                              "id": 3842,
                              "name": "IncentiveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "352:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncentiveId_$3382_$",
                                "typeString": "type(library IncentiveId)"
                              }
                            },
                            "id": 3843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "compute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3381,
                            "src": "352:19:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_IncentiveKey_$3160_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct IUniswapV3Staker.IncentiveKey memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "352:24:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 3841,
                        "id": 3846,
                        "nodeType": "Return",
                        "src": "345:31:34"
                      }
                    ]
                  },
                  "functionSelector": "6ab7d880",
                  "id": 3848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "compute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3837,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 3848,
                        "src": "263:40:34",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$3160_memory_ptr",
                          "typeString": "struct IUniswapV3Staker.IncentiveKey"
                        },
                        "typeName": {
                          "id": 3836,
                          "name": "IUniswapV3Staker.IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3160,
                          "src": "263:29:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$3160_storage_ptr",
                            "typeString": "struct IUniswapV3Staker.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:42:34"
                  },
                  "returnParameters": {
                    "id": 3841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3840,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3848,
                        "src": "326:7:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3839,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "326:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "325:9:34"
                  },
                  "scope": 3849,
                  "src": "246:137:34",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3850,
              "src": "215:170:34"
            }
          ],
          "src": "45:341:34"
        }
      },
      "contracts/test/TestRewardMath.sol": {
        "id": 35,
        "ast": {
          "absolutePath": "contracts/test/TestRewardMath.sol",
          "exportedSymbols": {
            "FullMath": [
              1420
            ],
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              722
            ],
            "IERC721": [
              278
            ],
            "IERC721Enumerable": [
              309
            ],
            "IERC721Metadata": [
              336
            ],
            "IERC721Permit": [
              1540
            ],
            "IERC721Receiver": [
              354
            ],
            "IMulticall": [
              1555
            ],
            "INonfungiblePositionManager": [
              1750
            ],
            "IPeripheryImmutableState": [
              1766
            ],
            "IPeripheryPayments": [
              1792
            ],
            "IPoolInitializer": [
              1811
            ],
            "IUniswapV3Factory": [
              805
            ],
            "IUniswapV3Pool": [
              827
            ],
            "IUniswapV3PoolActions": [
              923
            ],
            "IUniswapV3PoolDerivedState": [
              954
            ],
            "IUniswapV3PoolEvents": [
              1073
            ],
            "IUniswapV3PoolImmutables": [
              1113
            ],
            "IUniswapV3PoolOwnerActions": [
              1139
            ],
            "IUniswapV3PoolState": [
              1247
            ],
            "IUniswapV3Staker": [
              3361
            ],
            "Math": [
              84
            ],
            "PoolAddress": [
              1903
            ],
            "RewardMath": [
              3520
            ],
            "TestRewardMath": [
              3896
            ]
          },
          "id": 3897,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3851,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:35"
            },
            {
              "id": 3852,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "69:19:35"
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV3Staker.sol",
              "file": "../interfaces/IUniswapV3Staker.sol",
              "id": 3853,
              "nodeType": "ImportDirective",
              "scope": 3897,
              "sourceUnit": 3362,
              "src": "90:44:35",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/RewardMath.sol",
              "file": "../libraries/RewardMath.sol",
              "id": 3854,
              "nodeType": "ImportDirective",
              "scope": 3897,
              "sourceUnit": 3521,
              "src": "136:37:35",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3855,
                "nodeType": "StructuredDocumentation",
                "src": "175:39:35",
                "text": "@dev Test contract for RewardMatrh"
              },
              "fullyImplemented": true,
              "id": 3896,
              "linearizedBaseContracts": [
                3896
              ],
              "name": "TestRewardMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 3894,
                    "nodeType": "Block",
                    "src": "631:343:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 3892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3878,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3874,
                                "src": "642:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3879,
                                "name": "secondsInsideX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3876,
                                "src": "650:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "id": 3880,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "641:27:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
                              "typeString": "tuple(uint256,uint160)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3883,
                                "name": "totalRewardUnclaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3857,
                                "src": "715:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3884,
                                "name": "totalSecondsClaimedX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3859,
                                "src": "749:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "id": 3885,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3861,
                                "src": "786:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3886,
                                "name": "endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3863,
                                "src": "809:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3887,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3865,
                                "src": "830:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 3888,
                                "name": "secondsPerLiquidityInsideInitialX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3867,
                                "src": "853:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "id": 3889,
                                "name": "secondsPerLiquidityInsideX128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3869,
                                "src": "903:29:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "id": 3890,
                                "name": "currentTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3871,
                                "src": "946:11:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3881,
                                "name": "RewardMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3520,
                                "src": "671:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_RewardMath_$3520_$",
                                  "typeString": "type(library RewardMath)"
                                }
                              },
                              "id": 3882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "computeRewardAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3519,
                              "src": "671:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint256_$_t_uint160_$",
                                "typeString": "function (uint256,uint160,uint256,uint256,uint128,uint160,uint160,uint256) pure returns (uint256,uint160)"
                              }
                            },
                            "id": 3891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "671:296:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$",
                              "typeString": "tuple(uint256,uint160)"
                            }
                          },
                          "src": "641:326:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3893,
                        "nodeType": "ExpressionStatement",
                        "src": "641:326:35"
                      }
                    ]
                  },
                  "functionSelector": "f20b9d1a",
                  "id": 3895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeRewardAmount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3857,
                        "mutability": "mutable",
                        "name": "totalRewardUnclaimed",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "282:28:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3856,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "282:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3859,
                        "mutability": "mutable",
                        "name": "totalSecondsClaimedX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "320:31:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3858,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "320:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3861,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "361:17:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3860,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "361:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3863,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "388:15:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3865,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "413:17:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 3864,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "413:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3867,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideInitialX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "440:44:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3866,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3869,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "494:37:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3868,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3871,
                        "mutability": "mutable",
                        "name": "currentTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "541:19:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "541:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "272:294:35"
                  },
                  "returnParameters": {
                    "id": 3877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3874,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "588:14:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3876,
                        "mutability": "mutable",
                        "name": "secondsInsideX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 3895,
                        "src": "604:25:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3875,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "604:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "587:43:35"
                  },
                  "scope": 3896,
                  "src": "244:730:35",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3897,
              "src": "214:762:35"
            }
          ],
          "src": "45:932:35"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/Address.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "7",
          "start": 1078,
          "end": 1098
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 3832,
          "end": 3847
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 4010,
          "end": 4025
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 4934,
          "end": 4949
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 8813,
          "end": 8828
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 9982,
          "end": 9997
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 12399,
          "end": 12414
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 12597,
          "end": 12612
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/UniswapV3Staker.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 12702,
          "end": 12717
        },
        "type": "Warning"
      }
    ],
    "version": "0.7.6",
    "long_version": "0.7.6+commit.7338295f.Darwin.appleclang",
    "zk_version": "1.3.10"
  }
}
